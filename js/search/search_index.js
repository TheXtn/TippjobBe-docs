var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/ActivitiesController.html",[0,1.914,1,3.431]],["body/controllers/ActivitiesController.html",[0,2.771,1,5.911,2,2.696,3,0.119,4,0.119,5,0.081,6,5.848,7,4.015,8,6.613,9,0.189,10,0.008,11,1.502,12,5.1,13,5.848,14,6.613,15,0.119,16,0.433,17,3.322,18,2.771,19,0.007,20,0.007]],["title/modules/ActivitiesModule.html",[21,1.558,22,3.224]],["body/modules/ActivitiesModule.html",[1,5.978,2,2.976,3,0.106,4,0.106,5,0.071,9,0.201,10,0.008,11,1.328,12,5.311,13,5.17,15,0.106,16,0.383,19,0.007,20,0.007,21,2.715,22,6.331,23,2.671,24,2.671,25,2.842,26,2.842,27,2.671,28,3.869,29,2.842,30,5.17,31,5.17,32,3.134,33,3.548,34,2.754,35,2.842,36,5.846,37,5.846,38,2.383]],["title/injectables/ActivitiesService.html",[12,2.773,39,1.237]],["body/injectables/ActivitiesService.html",[3,0.076,4,0.076,5,0.052,9,0.186,10,0.009,11,0.962,12,3.582,15,0.076,16,0.277,17,2.128,18,1.775,19,0.005,20,0.005,32,2.63,38,1.727,39,1.598,40,1.826,41,3.746,42,0.427,43,2.062,44,3.764,45,5.9,46,5.9,47,1.935,48,2.465,49,0.804,50,4.237,51,2.557,52,2.316,53,0.743,54,1.798,55,2.779,56,5.9,57,1.862,58,6.234,59,4.237,60,2.013,61,3.749,62,5.9,63,2.731,64,4.237,65,3.746,66,4.237,67,3.746,68,1.596,69,3.41,70,1.879,71,2.557,72,2.963,73,4.237,74,2.202,75,5.099,76,6.788,77,5.485,78,6.788,79,5.485,80,6.788,81,4.237,82,4.767,83,2.013,84,3.582,85,1.995,86,2.167,87,1.919,88,4.767,89,5.217,90,4.237,91,3.423,92,5.9,93,2.99]],["title/classes/Activity.html",[16,0.299,71,1.721]],["body/classes/Activity.html",[3,0.084,4,0.084,5,0.057,9,0.171,10,0.009,15,0.084,16,0.304,19,0.006,20,0.006,42,0.468,49,0.974,53,0.958,54,2.178,63,2.885,68,1.751,71,2.368,75,6.578,77,7.077,79,5.757,83,2.43,91,5.757,94,0.565,95,2.491,96,4.109,97,1.145,98,1.585,99,1.565,100,2.985,101,4.647,102,4.722,103,4.85,104,4.647,105,4.647,106,2.503,107,4.647,108,4.647,109,4.647,110,1.772,111,3.595,112,0.827,113,3.994]],["title/classes/Activity-1.html",[16,0.25,71,1.441,114,1.697]],["body/classes/Activity-1.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.412,71,2.875,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,3.144,118,2.719,119,2.66,120,2.719,121,2.719,122,2.531,123,2.719,124,2.65,125,2.719,126,1.876,127,2.719,128,2.47,129,2.719,130,2.8,131,2.719,132,2.65,133,2.719,134,1.876,135,2.65,136,2.719,137,1.876,138,2.65,139,2.719,140,1.876,141,2.581,142,2.719,143,1.876,144,2.355,145,2.719,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/controllers/AppController.html",[0,1.914,153,3.431]],["body/controllers/AppController.html",[0,3.191,2,2.554,3,0.113,4,0.113,5,0.076,9,0.183,10,0.009,11,1.422,15,0.113,16,0.41,17,3.146,18,2.625,19,0.007,20,0.007,42,0.631,43,2.662,49,0.742,60,2.137,86,2.301,98,1.356,99,1.193,153,5.721,154,5.539,155,7.55,156,6.264,157,5.481,158,5.539,159,6.264]],["title/modules/AppModule.html",[21,1.558,160,3.431]],["body/modules/AppModule.html",[2,2.244,3,0.069,4,0.069,5,0.047,9,0.215,10,0.009,11,0.872,15,0.069,16,0.251,19,0.005,20,0.005,21,2.195,22,5.462,23,1.755,24,1.755,25,1.867,26,1.867,27,1.755,28,3.128,29,1.867,32,2.773,33,2.676,34,1.809,35,1.867,38,1.566,153,4.833,157,5.17,158,3.397,160,6.942,161,3.397,162,3.397,163,3.397,164,5.462,165,4.329,166,5.462,167,5.462,168,5.462,169,5.462,170,5.462,171,5.462,172,5.462,173,5.462,174,3.841,175,3.342,176,3.841,177,3.841,178,3.841,179,3.841,180,2.069,181,1.867,182,2.565,183,3.841,184,3.841,185,3.841,186,3.104,187,2.711,188,3.841,189,4.868,190,2.565,191,5.505,192,3.397,193,3.841,194,3.841,195,3.841,196,3.104,197,2.885,198,3.841,199,3.841,200,3.397,201,3.841,202,3.397,203,3.397,204,3.104,205,3.397]],["title/injectables/AppService.html",[39,1.237,157,3.051]],["body/injectables/AppService.html",[3,0.117,4,0.117,5,0.079,9,0.156,10,0.008,11,1.473,15,0.117,16,0.425,19,0.007,20,0.007,39,2.107,40,2.795,42,0.653,43,2.719,49,0.768,60,2.213,86,2.382,98,1.385,155,7.639,157,5.194,206,5.735,207,6.486,208,6.486,209,6.486]],["title/injectables/AtStrategy.html",[39,1.237,210,3.224]],["body/injectables/AtStrategy.html",[3,0.103,4,0.103,5,0.069,9,0.199,10,0.009,11,1.294,15,0.103,16,0.373,19,0.007,20,0.007,39,1.946,40,2.455,42,0.574,43,2.51,47,3.593,49,0.851,51,2.147,52,1.944,53,0.623,54,1.509,60,1.944,86,2.093,116,2.041,210,5.068,211,6.955,212,4.604,213,6.351,214,5.697,215,7.182,216,6.879,217,5.697,218,5.804,219,5.038,220,3.62,221,5.038,222,5.038,223,4.604,224,5.068,225,4.604,226,5.038,227,4.28,228,5.038,229,5.038,230,5.038,231,5.697]],["title/classes/Auth.html",[16,0.299,232,2.903]],["body/classes/Auth.html",[3,0.127,4,0.127,5,0.086,10,0.008,15,0.127,16,0.462,19,0.007,20,0.007,94,0.857,232,5.193,233,6.237]],["title/controllers/AuthController.html",[0,1.914,234,3.431]],["body/controllers/AuthController.html",[0,0.724,2,0.704,3,0.053,4,0.031,5,0.021,7,1.049,9,0.188,10,0.009,11,0.392,15,0.031,16,0.113,17,0.868,18,0.724,19,0.003,20,0.003,34,1.382,42,0.174,43,1.025,49,0.849,51,2.699,52,2.444,53,0.824,54,1.898,55,0.814,57,2.05,60,2.444,68,0.651,69,1.473,70,1.999,74,1.525,83,0.589,84,1.781,85,1.801,86,2.632,87,0.954,88,1.396,98,0.977,99,1.364,112,0.308,144,0.562,151,0.85,218,3.641,220,1.098,224,1.219,225,1.396,232,3.717,234,2.203,235,1.528,236,3.823,237,3.823,238,2.933,239,2.933,240,2.933,241,3.823,242,3.381,243,3.823,244,2.933,245,2.933,246,3.823,247,3.823,248,1.728,249,4.394,250,6.642,251,3.823,252,1.728,253,5.486,254,5.047,255,3.98,256,2.933,257,5.444,258,3.737,259,3.823,260,1.728,261,1.728,262,3.452,263,1.728,264,5.267,265,3.385,266,1.728,267,1.728,268,1.728,269,1.728,270,1.728,271,4.121,272,1.728,273,1.728,274,1.864,275,3.18,276,2.933,277,1.728,278,1.728,279,1.728,280,1.728,281,4.121,282,2.933,283,1.728,284,1.728,285,1.728,286,2.933,287,5.486,288,2.933,289,2.933,290,1.728,291,1.728,292,1.728,293,4.394,294,1.728,295,1.728,296,1.728,297,3.385,298,1.728,299,1.728,300,2.933,301,1.728,302,1.728,303,2.933,304,1.728,305,3.872,306,1.528,307,1.728,308,2.594,309,1.728,310,1.728,311,1.728,312,1.728,313,1.728,314,1.728,315,5.85,316,1.728,317,1.728,318,1.728,319,1.728,320,1.728,321,1.728,322,4.975,323,1.728,324,4.624,325,1.728,326,5.486,327,1.728,328,1.728,329,1.728,330,1.728,331,1.728,332,1.728,333,1.728,334,1.728,335,3.192,336,2.553,337,1.728,338,1.298,339,1.298,340,1.528,341,1.298,342,1.396,343,2.872,344,1.528,345,1.959,346,2.933,347,1.528,348,1.298,349,3.985,350,1.298,351,1.728,352,1.728,353,1.298,354,2.203,355,1.396,356,1.728,357,2.37,358,3.823,359,1.728,360,5.486,361,1.298,362,2.933,363,2.933,364,5.047,365,4.624,366,1.298,367,6.156,368,2.736,369,1.728,370,1.298,371,1.049,372,1.219,373,1.528,374,1.728,375,2.933,376,2.933,377,1.728,378,4.078,379,1.728,380,1.728,381,4.99,382,1.728,383,2.933,384,5.1,385,1.298,386,1.528,387,1.298,388,1.728,389,1.728,390,1.528,391,1.728,392,2.138,393,5.047,394,1.728,395,3.641,396,1.728,397,1.728,398,1.728,399,1.396,400,3.823,401,1.728,402,1.728,403,1.728,404,1.396,405,4.394,406,1.728,407,1.728,408,1.728,409,3.381,410,4.121,411,1.728,412,1.728,413,1.728,414,1.728,415,1.728,416,0.931,417,1.728,418,1.298,419,1.728,420,1.396,421,2.933,422,1.728,423,1.728,424,1.728,425,3.089,426,3.823,427,1.219,428,1.728,429,1.728,430,1.728,431,1.396,432,1.728,433,1.728,434,1.728,435,1.728,436,1.728,437,1.728,438,1.728,439,1.728,440,1.728,441,3.385,442,1.728,443,1.728,444,3.823,445,2.933,446,1.728,447,1.728,448,1.728,449,1.728,450,1.728,451,1.728,452,1.728,453,1.728,454,1.728]],["title/modules/AuthModule.html",[21,1.558,164,3.224]],["body/modules/AuthModule.html",[2,2.756,3,0.094,4,0.094,5,0.063,9,0.208,10,0.009,11,1.177,15,0.094,16,0.339,19,0.006,20,0.006,21,2.566,23,2.369,24,2.369,25,2.52,26,2.52,27,2.369,28,3.657,29,2.52,32,3.037,33,3.286,34,2.442,35,2.52,38,2.114,164,6.452,175,3.148,210,5.983,234,5.651,343,6.369,344,4.585,455,4.585,456,4.585,457,5.662,458,5.983,459,5.185,460,5.185,461,5.185,462,4.585,463,5.185,464,5.185,465,5.185]],["title/classes/BookmarkDto.html",[16,0.299,466,3.224]],["body/classes/BookmarkDto.html",[3,0.112,4,0.112,5,0.076,9,0.183,10,0.008,15,0.112,16,0.497,19,0.007,20,0.007,42,0.627,49,0.899,53,0.83,85,3.855,94,0.757,97,1.382,98,1.517,99,1.185,110,1.761,112,1.108,466,5.354,467,5.505,468,5.776,469,4.393,470,6.225,471,6.225,472,5.354,473,2.176]],["title/classes/BookmarkProfileDto.html",[16,0.299,474,3.431]],["body/classes/BookmarkProfileDto.html",[3,0.115,4,0.115,5,0.078,9,0.185,10,0.008,15,0.115,16,0.503,19,0.007,20,0.007,42,0.641,49,0.754,53,0.696,94,0.774,97,1.4,98,1.369,99,1.212,110,1.785,112,1.133,469,4.49,472,5.426,473,2.224,474,5.775,475,6.799,476,4.779,477,6.677,478,6.363]],["title/classes/Bookmarks.html",[16,0.299,122,1.597]],["body/classes/Bookmarks.html",[3,0.09,4,0.09,5,0.061,9,0.178,10,0.009,15,0.09,16,0.327,19,0.006,20,0.006,42,0.503,49,0.968,53,0.971,57,1.996,85,3.478,94,0.607,95,2.487,97,1.201,98,1.546,99,1.555,100,3.422,110,1.948,112,0.889,122,2.305,144,2.859,468,5.211,479,4.414,480,3.709,481,3.484,482,4.992,483,4.992,484,4.992,485,4.992,486,4.992]],["title/classes/Bookmarks-1.html",[16,0.25,114,1.697,122,1.337]],["body/classes/Bookmarks-1.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.412,71,2.728,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,2.719,119,2.66,120,2.719,121,2.719,122,2.667,123,3.144,124,2.65,125,2.719,126,1.876,127,2.719,128,2.47,129,2.719,130,2.8,131,2.719,132,2.65,133,2.719,134,1.876,135,2.65,136,2.719,137,1.876,138,2.65,139,2.719,140,1.876,141,2.581,142,2.719,143,1.876,144,2.355,145,2.719,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/classes/ChangeEmailDto.html",[16,0.299,249,3.431]],["body/classes/ChangeEmailDto.html",[3,0.109,4,0.109,5,0.074,9,0.18,10,0.008,15,0.109,16,0.488,19,0.007,20,0.007,42,0.61,49,0.884,53,0.816,94,0.736,97,1.359,98,1.503,99,1.421,110,1.877,112,1.078,249,5.604,255,4.705,473,2.117,487,6.534,488,4.894,489,7.15,490,6.057,491,6.057,492,4.55,493,6.057,494,5.604,495,3.627]],["title/classes/ChangePasswordDto.html",[16,0.299,265,3.431]],["body/classes/ChangePasswordDto.html",[3,0.112,4,0.112,5,0.076,9,0.15,10,0.008,15,0.112,16,0.408,19,0.007,20,0.007,42,0.627,49,0.899,53,0.83,94,0.757,97,1.382,98,1.517,99,1.445,110,2.027,112,1.108,265,5.699,487,6.614,496,4.676,497,8.184,498,8.184,499,5.505,500,5.505]],["title/classes/CheckoutSession.html",[16,0.299,501,3.224]],["body/classes/CheckoutSession.html",[3,0.059,4,0.059,5,0.04,9,0.117,10,0.009,15,0.059,16,0.212,19,0.004,20,0.004,42,0.326,49,1.046,53,0.97,54,2.376,83,1.99,94,0.394,97,0.885,98,1.61,99,1.682,110,2.15,112,0.577,197,3.651,427,4.116,501,3.43,502,2.867,503,5.157,504,5.157,505,5.157,506,5.157,507,5.157,508,5.157,509,5.157,510,4.116,511,4.381,512,3.262,513,5.157,514,5.157,515,5.157,516,5.157,517,5.157,518,5.157,519,6.138,520,5.157,521,5.73,522,2.618,523,3.242,524,3.242,525,3.242,526,3.242,527,3.242,528,3.242,529,4.299,530,3.242,531,3.242,532,3.928,533,3.242,534,4.299,535,4.299,536,4.299,537,3.242,538,3.242,539,3.242,540,3.242,541,3.928,542,4.299,543,3.242,544,3.242,545,3.242,546,4.299,547,4.299,548,4.299,549,3.242,550,3.242,551,3.242,552,3.242,553,2.867,554,2.867,555,1.968]],["title/classes/Conversation.html",[16,0.299,119,1.678]],["body/classes/Conversation.html",[3,0.075,4,0.075,5,0.051,9,0.161,10,0.009,15,0.075,16,0.271,19,0.005,20,0.005,42,0.417,49,1.001,52,2.287,53,0.992,54,1.538,57,1.944,83,2.287,87,2.58,94,0.503,95,2.538,97,1.057,98,1.595,99,1.609,100,3.414,106,2.23,110,1.961,111,2.735,112,0.737,119,2.133,480,3.368,481,3.688,556,3.662,557,5.037,558,5.037,559,5.929,560,5.929,561,5.929,562,5.929,563,4.141,564,4.141,565,2.922,566,2.029,567,4.141,568,4.141,569,4.141,570,4.141,571,4.141,572,4.141,573,4.141,574,2.514]],["title/classes/Conversation-1.html",[16,0.25,114,1.697,119,1.405]],["body/classes/Conversation-1.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.412,71,2.728,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,2.719,119,2.803,120,3.144,121,2.719,122,2.531,123,2.719,124,2.65,125,2.719,126,1.876,127,2.719,128,2.47,129,2.719,130,2.8,131,2.719,132,2.65,133,2.719,134,1.876,135,2.65,136,2.719,137,1.876,138,2.65,139,2.719,140,1.876,141,2.581,142,2.719,143,1.876,144,2.355,145,2.719,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/injectables/CpuHealthIndicator.html",[39,1.237,575,3.051]],["body/injectables/CpuHealthIndicator.html",[3,0.103,4,0.103,5,0.069,9,0.189,10,0.009,11,1.29,15,0.103,16,0.372,19,0.007,20,0.007,39,1.942,40,2.448,42,0.572,43,2.506,44,3.7,47,3.588,49,0.849,60,1.938,116,2.568,151,2.276,190,3.794,227,4.268,262,3.726,575,4.788,576,5.246,577,6.946,578,5.024,579,6.946,580,6.347,581,7.521,582,5.681,583,5.681,584,5.024,585,5.024,586,7.169,587,5.681,588,5.681,589,7.169,590,5.681,591,5.681]],["title/classes/CreateActivityDto.html",[16,0.299,58,3.224]],["body/classes/CreateActivityDto.html",[3,0.103,4,0.103,5,0.069,9,0.189,10,0.009,15,0.103,16,0.469,19,0.007,20,0.007,42,0.572,49,0.931,53,0.859,58,5.059,68,2.14,75,6.524,77,7.019,79,6.347,94,0.691,97,1.305,98,1.276,99,1.496,111,4.006,112,1.012,473,1.986,592,5.509,593,5.024,594,5.681,595,5.681,596,5.681,597,5.681,598,5.681,599,3.449,600,4.571,601,5.681,602,5.681]],["title/classes/CreateAuthDto.html",[16,0.299,305,3.224]],["body/classes/CreateAuthDto.html",[3,0.11,4,0.11,5,0.074,9,0.18,10,0.008,15,0.11,16,0.49,19,0.007,20,0.007,42,0.614,49,0.887,53,0.819,94,0.741,97,1.364,98,1.506,99,1.426,110,1.963,112,1.085,255,4.718,305,5.285,392,4.534,473,2.13,494,5.625,603,6.552,604,4.924,605,4.924,606,6.094,607,6.094]],["title/classes/CreateBioDto.html",[16,0.299,608,3.431]],["body/classes/CreateBioDto.html",[3,0.115,4,0.115,5,0.078,9,0.185,10,0.008,15,0.115,16,0.503,19,0.007,20,0.007,42,0.641,49,0.754,53,0.696,94,0.774,97,1.4,98,1.369,99,1.212,110,1.785,112,1.133,473,2.224,492,4.779,495,3.738,592,5.135,608,5.775,609,5.627,610,6.677,611,6.363]],["title/classes/CreatePayementDto.html",[16,0.299,612,3.051]],["body/classes/CreatePayementDto.html",[3,0.109,4,0.109,5,0.074,9,0.18,10,0.008,15,0.109,16,0.488,19,0.007,20,0.007,42,0.61,49,0.884,53,0.816,94,0.736,97,1.359,98,1.503,99,1.421,110,1.877,112,1.078,468,5.706,469,4.274,472,5.265,473,2.117,492,4.55,495,3.627,612,4.983,613,7.15,614,4.894,615,8.086,616,6.057,617,6.057]],["title/classes/CreatePostDto.html",[16,0.299,618,3.051]],["body/classes/CreatePostDto.html",[3,0.062,4,0.062,5,0.042,9,0.145,10,0.009,15,0.062,16,0.332,19,0.005,20,0.005,42,0.345,49,0.998,53,0.981,54,2.175,68,1.292,94,0.417,97,0.923,98,1.584,99,1.604,100,2.124,103,5.216,106,3.829,110,1.787,111,3.626,112,0.611,113,4.728,128,2.057,384,3.832,473,1.199,481,2.674,495,3.842,566,2.108,574,2.082,599,2.082,600,4.479,618,3.385,619,6.879,620,2.42,621,3.832,622,5.332,623,4.529,624,4.529,625,4.529,626,4.529,627,3.832,628,4.027,629,4.873,630,5.069,631,3.429,632,3.429,633,6.013,634,5.004,635,3.033,636,3.429,637,5.069,638,3.033,639,3.033,640,5.383,641,3.033,642,3.385,643,3.429,644,3.033,645,5.069,646,3.429,647,3.429,648,3.429,649,6.013,650,3.429,651,3.429,652,3.429,653,4.969,654,3.429,655,3.429,656,3.429,657,4.969,658,3.429,659,3.429,660,2.576,661,2.576,662,3.033,663,3.033,664,3.033]],["title/classes/CreateProFocusDto.html",[16,0.299,665,3.431]],["body/classes/CreateProFocusDto.html",[3,0.105,4,0.105,5,0.071,9,0.175,10,0.009,15,0.105,16,0.476,19,0.007,20,0.007,42,0.585,49,0.689,53,0.636,87,2.365,94,0.707,97,1.324,98,1.295,99,1.107,110,1.688,112,1.035,473,2.032,495,3.535,566,2.907,592,4.857,642,5.719,665,5.463,666,5.14,667,8.563,668,5.14,669,5.812,670,7.273,671,5.812,672,7.273,673,7.273,674,5.812,675,5.14,676,5.812,677,5.812,678,5.812]],["title/classes/CreateProfileDto.html",[16,0.299,679,3.431]],["body/classes/CreateProfileDto.html",[3,0.127,4,0.127,5,0.086,10,0.008,15,0.127,16,0.46,19,0.007,20,0.007,94,0.854,476,5.279,592,4.694,679,6.126]],["title/classes/CreateTagsDto.html",[16,0.299,680,3.431]],["body/classes/CreateTagsDto.html",[3,0.102,4,0.102,5,0.069,9,0.189,10,0.009,15,0.102,16,0.469,19,0.007,20,0.007,42,0.57,49,0.929,53,0.858,68,2.134,94,0.689,97,1.303,99,1.494,111,3.882,112,1.009,473,1.98,592,5.504,599,3.439,600,4.795,680,5.376,681,5.01,682,6.339,683,6.339,684,6.339,685,7.122,686,7.845,687,5.665,688,5.665,689,5.665,690,7.845]],["title/classes/CreateUserDto.html",[16,0.299,271,3.431]],["body/classes/CreateUserDto.html",[3,0.077,4,0.077,5,0.052,9,0.177,10,0.009,15,0.077,16,0.389,19,0.005,20,0.005,42,0.431,49,1.021,53,0.968,68,1.613,94,0.52,97,1.082,98,1.586,99,1.641,110,2.001,111,3.473,112,0.762,255,3.972,271,4.464,392,3.817,473,1.497,481,2.636,494,4.464,599,2.599,603,7.037,605,3.46,621,4.338,675,3.786,691,3.46,692,6.036,693,5.516,694,5.128,695,6.479,696,5.128,697,4.817,698,5.516,699,4.282,700,4.282,701,4.282,702,4.282,703,4.282,704,7.374,705,5.943,706,4.282,707,4.282,708,3.786,709,4.282,710,4.282,711,4.282,712,4.282,713,4.282,714,4.282,715,4.282,716,4.282,717,4.282,718,5.128,719,5.943,720,3.786,721,4.282,722,4.282,723,4.282,724,4.282]],["title/interfaces/CustomValidationArguments.html",[725,3.051,726,3.691]],["body/interfaces/CustomValidationArguments.html",[3,0.08,4,0.08,5,0.054,9,0.106,10,0.009,15,0.08,16,0.29,19,0.006,20,0.006,42,0.445,52,1.509,53,0.924,54,1.61,86,2.879,97,1.361,98,1.573,151,1.761,473,2.124,512,4.383,522,2.382,698,6.928,718,3.322,725,2.954,726,6.042,727,3.574,728,3.574,729,7.477,730,8.098,731,7.477,732,7.477,733,7.671,734,5.408,735,6.944,736,4.993,737,6.078,738,6.078,739,6.078,740,3.121,741,3.911,742,6.944,743,3.911,744,4.422,745,4.422,746,4.422,747,4.422,748,6.078,749,6.944,750,4.289,751,3.911,752,4.422,753,3.121,754,4.422,755,3.911,756,6.078]],["title/classes/DeleteUserGalleryDto.html",[16,0.299,757,3.431]],["body/classes/DeleteUserGalleryDto.html",[3,0.113,4,0.113,5,0.076,9,0.183,10,0.008,15,0.113,16,0.498,19,0.007,20,0.007,42,0.629,49,0.74,53,0.683,57,1.726,94,0.759,97,1.384,98,1.353,99,1.189,110,1.765,112,1.112,473,2.183,495,3.695,566,2.657,642,4.17,668,5.522,757,5.71,758,6.722,759,5.522,760,8.195,761,6.245]],["title/classes/EmailChange.html",[16,0.299,135,1.813]],["body/classes/EmailChange.html",[3,0.088,4,0.088,5,0.06,9,0.156,10,0.009,15,0.088,16,0.32,19,0.006,20,0.006,42,0.492,49,0.988,53,0.982,57,1.987,83,2.492,85,3.441,94,0.594,95,2.523,97,1.183,98,1.598,99,1.588,100,3.494,110,1.975,112,0.869,135,2.579,480,3.669,481,3.454,489,6.459,762,4.318,763,4.878,764,4.883,765,4.883,766,3.263,767,4.883,768,4.883,769,4.883,770,4.883]],["title/classes/EmailChange-1.html",[16,0.25,114,1.697,135,1.518]],["body/classes/EmailChange-1.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.412,71,2.728,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,2.719,119,2.66,120,2.719,121,2.719,122,2.531,123,2.719,124,2.65,125,2.719,126,1.876,127,2.719,128,2.47,129,2.719,130,2.8,131,2.719,132,2.65,133,2.719,134,1.876,135,2.874,136,3.144,137,1.876,138,2.65,139,2.719,140,1.876,141,2.581,142,2.719,143,1.876,144,2.355,145,2.719,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/classes/EmailVerification.html",[16,0.299,132,1.813]],["body/classes/EmailVerification.html",[3,0.092,4,0.092,5,0.062,9,0.161,10,0.009,15,0.092,16,0.334,19,0.006,20,0.006,42,0.514,49,0.975,53,0.975,57,2.005,83,2.547,85,3.517,94,0.621,95,2.503,97,1.219,98,1.554,99,1.567,100,3.448,110,1.96,112,0.909,132,2.656,480,3.751,481,3.515,763,4.987,766,3.321,771,4.515,772,5.106,773,5.106,774,5.106,775,5.106,776,5.106]],["title/classes/EmailVerification-1.html",[16,0.25,114,1.697,132,1.518]],["body/classes/EmailVerification-1.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.412,71,2.728,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,2.719,119,2.66,120,2.719,121,2.719,122,2.531,123,2.719,124,2.65,125,2.719,126,1.876,127,2.719,128,2.47,129,2.719,130,2.8,131,2.719,132,2.874,133,3.144,134,1.876,135,2.65,136,2.719,137,1.876,138,2.65,139,2.719,140,1.876,141,2.581,142,2.719,143,1.876,144,2.355,145,2.719,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/modules/FilerModule.html",[21,1.558,165,2.555]],["body/modules/FilerModule.html",[3,0.106,4,0.106,5,0.072,9,0.192,10,0.008,11,1.331,15,0.106,16,0.384,19,0.007,20,0.007,21,2.718,23,2.679,24,2.679,25,2.85,26,2.85,27,2.679,28,3.874,29,3.874,33,3.555,34,2.762,35,2.85,165,4.966,180,3.939,181,2.85,777,5.185,778,5.185,779,5.185,780,5.591,781,4.138,782,5.863,783,4.404,784,5.493,785,5.185]],["title/injectables/FilerService.html",[39,1.237,780,2.773]],["body/injectables/FilerService.html",[3,0.084,4,0.084,5,0.093,9,0.171,10,0.009,11,1.053,15,0.084,16,0.304,18,1.943,19,0.006,20,0.006,39,1.7,40,1.998,42,0.467,43,2.194,44,3.351,47,2.118,49,0.744,51,2.365,52,2.427,53,0.687,54,1.663,60,1.582,70,2.056,86,2.305,151,1.819,180,2.497,181,3.459,262,3.698,275,5.021,335,2.698,555,2.815,580,3.746,780,3.81,781,5.021,785,4.1,786,4.1,787,5.75,788,4.636,789,5.75,790,4.636,791,4.714,792,4.636,793,5.728,794,7.625,795,4.14,796,4.636,797,3.096,798,4.636,799,5.072,800,3.746,801,3.482,802,4.636,803,2.698,804,4.636,805,4.636,806,4.636,807,3.746,808,3.272,809,4.1,810,5.072,811,4.636,812,3.746,813,4.1,814,4.1,815,4.636,816,4.636,817,4.636,818,4.636,819,4.636,820,4.636,821,4.636,822,4.1,823,4.636,824,4.636,825,3.482,826,4.636,827,4.1,828,4.636,829,4.636,830,4.636,831,4.636,832,4.636,833,4.636]],["title/classes/GetBookmarksResponse.html",[16,0.299,834,3.431]],["body/classes/GetBookmarksResponse.html",[3,0.11,4,0.11,5,0.074,9,0.18,10,0.009,15,0.11,16,0.399,19,0.007,20,0.007,42,0.614,49,0.887,53,0.819,94,0.741,97,1.364,99,1.426,110,1.963,112,1.085,122,3.089,371,3.699,565,4.3,566,2.618,574,3.699,766,3.138,834,5.625,835,5.388,836,6.09,837,6.094,838,6.094,839,5.388]],["title/classes/GetPostDto.html",[16,0.299,840,3.431]],["body/classes/GetPostDto.html",[3,0.11,4,0.11,5,0.075,9,0.195,10,0.009,15,0.11,16,0.531,19,0.007,20,0.007,42,0.615,49,0.724,53,0.888,83,2.77,94,0.743,97,1.366,98,1.445,99,1.164,110,1.742,112,1.088,473,2.136,495,3.647,522,3.292,566,2.136,620,4.313,840,5.636,841,6.635,842,3.711,843,4.939,844,6.112,845,3.557]],["title/classes/GetPostsResponse.html",[16,0.299,846,3.431]],["body/classes/GetPostsResponse.html",[3,0.11,4,0.11,5,0.074,9,0.18,10,0.008,15,0.11,16,0.398,19,0.007,20,0.007,42,0.612,49,0.886,53,0.818,94,0.739,97,1.361,99,1.423,110,1.961,112,1.082,144,1.976,371,3.688,565,4.287,566,2.613,574,3.688,766,3.132,836,6.082,846,5.615,847,5.372,848,6.082,849,7.16,850,6.075,851,6.075,852,5.372]],["title/classes/GetUserDto.html",[16,0.299,293,3.431]],["body/classes/GetUserDto.html",[3,0.11,4,0.11,5,0.075,9,0.195,10,0.009,15,0.11,16,0.531,19,0.007,20,0.007,42,0.615,49,0.724,53,0.888,83,2.77,94,0.743,97,1.366,98,1.445,99,1.164,110,1.742,112,1.088,293,5.636,473,2.136,495,3.647,522,3.292,566,2.136,691,4.939,708,5.405,842,3.711,843,4.939,845,3.557,853,6.635]],["title/classes/GlobalExceptionFilter.html",[16,0.299,854,3.691]],["body/classes/GlobalExceptionFilter.html",[3,0.1,4,0.1,5,0.068,9,0.134,10,0.009,11,1.262,15,0.1,16,0.364,19,0.006,20,0.006,42,0.559,43,2.471,49,0.658,51,2.093,52,1.895,53,0.608,54,1.472,60,1.895,87,2.528,94,0.675,151,2.253,275,3.921,740,3.921,854,5.712,855,6.251,856,4.49,857,5.31,858,7.774,859,6.146,860,6.251,861,6.875,862,7.236,863,5.556,864,6.251,865,5.31,866,4.49,867,4.913,868,4.173,869,4.913,870,6.875,871,4.913,872,5.556,873,4.913,874,5.556,875,5.556,876,5.556,877,5.556,878,5.556]],["title/classes/HandleChangeEmailDto.html",[16,0.299,297,3.431]],["body/classes/HandleChangeEmailDto.html",[3,0.11,4,0.11,5,0.074,9,0.195,10,0.009,15,0.11,16,0.53,19,0.007,20,0.007,42,0.612,49,0.72,53,0.886,94,0.739,97,1.361,98,1.442,99,1.157,110,1.735,112,1.082,297,5.615,322,6.543,378,6.04,473,2.123,488,4.909,495,3.634,522,3.272,566,2.123,842,3.688,843,4.909,845,3.535,879,6.61,880,6.075]],["title/controllers/HealthCheckController.html",[0,1.914,881,3.431]],["body/controllers/HealthCheckController.html",[0,2.736,2,2.005,3,0.089,4,0.089,5,0.06,7,2.986,9,0.188,10,0.009,11,1.117,15,0.089,16,0.322,19,0.006,20,0.006,42,0.495,43,2.283,47,2.247,49,0.583,55,2.317,60,1.678,86,1.807,99,0.937,186,5.277,187,4.609,190,3.285,274,4.963,575,4.361,576,4.361,803,4.862,873,4.35,881,4.905,882,4.35,883,7.81,884,4.919,885,4.919,886,6.53,887,6.53,888,4.896,889,6.53,890,6.53,891,4.361,892,4.35,893,5.775,894,4.35,895,4.919,896,6.53,897,4.35,898,4.919,899,4.919,900,4.919,901,4.919,902,4.919,903,4.919,904,4.919,905,4.919,906,4.919,907,4.919,908,4.35,909,4.919,910,6.53,911,7.81,912,4.919,913,4.919]],["title/modules/HealthCheckModule.html",[21,1.558,166,3.224]],["body/modules/HealthCheckModule.html",[2,2.77,3,0.094,4,0.094,5,0.064,9,0.208,10,0.009,11,1.187,15,0.094,16,0.342,19,0.006,20,0.006,21,2.576,23,2.387,24,2.387,25,2.54,26,2.54,27,2.387,28,3.671,29,2.54,32,3.044,33,3.303,34,2.461,35,2.54,38,2.13,55,2.461,166,6.396,175,3.172,186,5.491,187,3.687,189,6.008,190,3.489,575,5.674,576,3.489,881,5.672,888,5.674,891,5.674,892,4.62,893,4.62,894,4.62,914,4.62,915,4.62,916,5.225,917,5.225,918,5.225]],["title/injectables/HealthCheckService.html",[39,1.237,888,3.051]],["body/injectables/HealthCheckService.html",[3,0.124,4,0.124,5,0.084,9,0.165,10,0.008,11,1.558,15,0.124,16,0.449,19,0.007,20,0.007,39,2.178,40,2.957,187,4.842,576,4.582,888,5.371,919,6.067]],["title/classes/Image.html",[16,0.299,128,1.558]],["body/classes/Image.html",[3,0.084,4,0.084,5,0.057,9,0.113,10,0.009,15,0.084,16,0.306,19,0.006,20,0.006,42,0.471,49,0.997,53,0.987,54,2.268,83,2.439,94,0.569,95,2.538,97,1.15,98,1.587,99,1.603,100,2.996,106,4.123,110,1.777,111,3.765,112,0.833,128,2.155,480,3.591,481,3.395,795,5.187,920,4.138,921,6.322,922,6.322,923,6.322,924,6.322,925,4.775,926,4.679,927,4.679,928,4.679,929,4.679,930,4.679,931,4.679,932,4.679]],["title/classes/Image-1.html",[16,0.25,114,1.697,128,1.305]],["body/classes/Image-1.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.412,71,2.728,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,2.719,119,2.66,120,2.719,121,2.719,122,2.531,123,2.719,124,2.65,125,2.719,126,1.876,127,2.719,128,2.603,129,3.144,130,2.8,131,2.719,132,2.65,133,2.719,134,1.876,135,2.65,136,2.719,137,1.876,138,2.65,139,2.719,140,1.876,141,2.581,142,2.719,143,1.876,144,2.355,145,2.719,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/controllers/ImagesController.html",[0,1.914,933,3.431]],["body/controllers/ImagesController.html",[0,2.771,2,2.696,3,0.119,4,0.119,5,0.081,7,4.015,9,0.189,10,0.008,11,1.502,15,0.119,16,0.433,17,3.322,18,2.771,19,0.007,20,0.007,933,5.911,934,5.848,935,4.968,936,4.698,937,5.848,938,6.613]],["title/modules/ImagesModule.html",[21,1.558,167,3.224]],["body/modules/ImagesModule.html",[2,2.882,3,0.1,4,0.1,5,0.068,9,0.203,10,0.009,11,1.262,15,0.1,16,0.364,19,0.006,20,0.006,21,2.652,23,2.538,24,2.538,25,2.701,26,2.701,27,2.538,28,3.779,29,2.701,32,3.094,33,3.436,34,2.617,35,2.701,38,2.265,165,4.829,167,6.377,175,4.291,180,2.993,181,2.701,182,3.711,933,5.839,936,4.829,937,4.913,939,4.913,940,4.913,941,5.556,942,5.556,943,5.556]],["title/injectables/ImagesService.html",[39,1.237,936,2.555]],["body/injectables/ImagesService.html",[3,0.068,4,0.068,5,0.094,9,0.168,10,0.009,11,0.859,15,0.068,16,0.248,18,2.282,19,0.005,20,0.005,32,2.5,38,1.542,39,1.475,40,1.63,42,0.381,43,1.903,44,3.627,47,2.488,48,2.202,49,0.756,51,2.404,52,2.176,53,0.698,54,1.69,55,2.565,57,1.951,60,1.858,68,1.425,69,1.9,70,2.415,72,3.205,74,1.966,84,3.873,86,2.563,128,2.523,151,1.578,180,2.038,181,1.839,262,3.627,416,2.933,418,2.842,420,3.057,480,2.735,566,1.903,766,3.227,780,4.818,783,2.842,795,4.814,797,4.661,803,3.169,865,2.842,897,3.346,921,3.346,922,6.81,923,6.171,924,7.018,925,4.261,936,3.045,944,3.346,945,6.38,946,5.642,947,3.783,948,3.783,949,4.261,950,3.783,951,3.346,952,4.489,953,4.699,954,3.783,955,3.346,956,3.057,957,3.346,958,4.815,959,3.057,960,3.057,961,3.346,962,3.057,963,5.445,964,3.057,965,3.346,966,3.783,967,3.783,968,3.783,969,5.445,970,2.83,971,4.4,972,4.4]],["title/modules/MailjetModule.html",[21,1.558,168,3.224]],["body/modules/MailjetModule.html",[3,0.109,4,0.109,5,0.074,9,0.179,10,0.008,11,1.371,15,0.109,16,0.395,19,0.007,20,0.007,21,2.755,23,2.759,24,2.759,25,2.936,26,2.936,27,2.759,28,3.925,29,3.925,33,3.62,34,2.844,35,2.936,168,6.306,457,6.174,973,5.34,974,5.34,975,6.039,976,6.039,977,6.039]],["title/injectables/MailjetService.html",[39,1.237,457,3.051]],["body/injectables/MailjetService.html",[3,0.085,4,0.085,5,0.057,9,0.153,10,0.009,11,1.07,15,0.085,16,0.308,19,0.006,20,0.006,39,1.719,40,2.031,42,0.474,43,2.218,44,3.379,47,3.278,49,0.85,51,1.775,52,2.448,53,0.694,54,1.248,60,1.607,70,2.09,72,2.367,74,2.449,86,1.731,97,1.155,98,1.547,151,2.079,200,4.167,262,3.298,354,5.389,392,4.481,420,6.203,457,4.238,557,3.539,566,1.647,766,3.006,803,4.175,978,4.167,979,7.175,980,6.345,981,4.712,982,8.012,983,8.012,984,4.712,985,7.175,986,5.611,987,3.808,988,6.345,989,4.712,990,4.712,991,4.712,992,4.712,993,4.712,994,3.808,995,4.712,996,4.712,997,4.167,998,4.712,999,4.167,1000,4.712,1001,4.712,1002,4.167,1003,4.712,1004,4.712]],["title/classes/Message.html",[16,0.299,87,1.486]],["body/classes/Message.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.412,71,2.728,87,2.482,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,2.719,119,2.66,120,2.719,121,3.144,122,2.531,123,2.719,124,2.65,125,2.719,126,1.876,127,2.719,128,2.47,129,2.719,130,2.8,131,2.719,132,2.65,133,2.719,134,1.876,135,2.65,136,2.719,137,1.876,138,2.65,139,2.719,140,1.876,141,2.581,142,2.719,143,1.876,144,2.355,145,2.719,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/classes/Message-1.html",[16,0.25,87,1.244,114,1.697]],["body/classes/Message-1.html",[3,0.074,4,0.074,5,0.088,9,0.16,10,0.009,15,0.074,16,0.267,19,0.005,20,0.005,42,0.411,49,1.011,53,0.994,57,1.793,83,2.27,87,1.87,94,0.496,95,2.558,97,1.047,98,1.592,99,1.625,100,3.576,110,2.003,112,0.727,119,3.093,480,3.342,481,3.674,558,4.998,795,4.821,825,4.998,1005,3.61,1006,5.377,1007,5.884,1008,5.377,1009,5.884,1010,4.082,1011,4.082,1012,4.082,1013,4.082,1014,4.082,1015,4.082,1016,4.082,1017,4.082,1018,4.082,1019,4.082]],["title/controllers/MessengerController.html",[0,1.914,1020,3.431]],["body/controllers/MessengerController.html",[0,1.573,2,1.531,3,0.068,4,0.068,5,0.066,7,2.28,9,0.199,10,0.009,11,0.853,15,0.068,16,0.246,17,1.886,18,1.573,19,0.005,20,0.005,42,0.378,43,1.893,49,0.824,51,2.62,52,2.372,53,0.866,54,1.842,57,2.057,60,2.372,86,2.554,98,1.368,99,1.324,112,0.669,119,2.708,144,1.221,220,2.386,232,4.037,306,3.321,335,3.152,338,2.821,339,2.821,342,3.034,348,2.821,361,2.821,365,5.224,366,2.821,368,3.857,370,2.821,371,3.288,372,2.65,405,4.772,410,5.77,441,5.224,566,1.313,574,3.288,808,3.822,825,2.821,1008,5.62,1020,4.068,1021,3.321,1022,3.755,1023,6.353,1024,4.79,1025,4.79,1026,5.618,1027,3.755,1028,5.72,1029,4.377,1030,3.755,1031,3.755,1032,3.321,1033,3.755,1034,3.755,1035,3.321,1036,3.755,1037,3.755,1038,3.755,1039,3.321,1040,4.483,1041,5.224,1042,3.755,1043,3.755,1044,3.755,1045,3.034,1046,5.416,1047,4.243,1048,3.321,1049,3.034,1050,3.321,1051,3.321,1052,3.755,1053,3.034,1054,3.321,1055,3.321,1056,3.755,1057,3.755,1058,3.755,1059,3.755,1060,3.755,1061,3.755,1062,3.755,1063,3.755,1064,3.755,1065,3.755,1066,3.755,1067,3.755,1068,3.755,1069,3.755]],["title/modules/MessengerModule.html",[21,1.558,169,3.224]],["body/modules/MessengerModule.html",[2,2.857,3,0.099,4,0.099,5,0.067,9,0.207,10,0.009,11,1.245,15,0.099,16,0.359,19,0.006,20,0.006,21,2.635,23,2.504,24,2.504,25,2.664,26,2.664,27,2.504,28,3.755,29,3.406,32,3.083,33,3.406,34,2.581,35,2.664,38,2.234,165,4.892,169,6.363,175,4.254,180,2.952,181,2.664,182,3.66,1020,5.802,1047,5.747,1048,4.846,1070,4.846,1071,5.481,1072,4.846,1073,5.481,1074,5.481,1075,5.481]],["title/injectables/MessengerService.html",[39,1.237,1047,3.051]],["body/injectables/MessengerService.html",[3,0.043,4,0.043,5,0.082,9,0.154,10,0.009,11,0.538,15,0.043,16,0.155,18,1.596,19,0.003,20,0.003,32,1.96,38,0.966,39,1.032,40,1.021,42,0.239,43,1.331,44,3.636,47,1.74,48,1.379,49,0.71,51,2.259,52,2.045,53,0.656,54,1.588,55,1.794,57,1.944,60,2.045,61,3.477,63,1.269,69,3.381,70,2.119,72,3.724,74,3.499,83,1.63,84,4.828,86,2.352,93,3.371,98,1.14,119,2.202,151,1.737,180,1.276,181,1.152,336,2.544,341,1.78,371,1.438,372,1.672,385,2.861,416,2.573,418,1.78,425,3.86,480,3.012,557,5.569,558,1.78,559,2.095,560,5.953,561,2.095,562,5.953,566,2.649,780,4.087,783,1.78,803,2.217,808,2.688,812,1.915,825,2.861,925,1.582,952,1.438,959,1.915,960,1.915,962,1.915,964,1.915,970,1.231,971,5.175,972,1.915,1006,4.845,1007,5.302,1008,5.657,1009,4.839,1024,3.369,1025,3.369,1026,4.224,1028,4.94,1032,3.369,1035,3.369,1039,2.095,1040,3.371,1041,4.811,1047,2.544,1050,2.095,1051,2.095,1076,2.095,1077,3.809,1078,2.369,1079,2.369,1080,2.369,1081,2.369,1082,3.809,1083,2.369,1084,3.036,1085,4.777,1086,2.688,1087,1.915,1088,2.369,1089,3.809,1090,4.777,1091,4.777,1092,3.809,1093,3.809,1094,6.237,1095,5.996,1096,3.809,1097,2.369,1098,1.915,1099,2.369,1100,2.369,1101,2.369,1102,2.369,1103,2.369,1104,2.095,1105,2.369,1106,3.809,1107,2.095,1108,2.095,1109,1.78,1110,3.809]],["title/injectables/NewrelicInterceptor.html",[39,1.237,1111,3.691]],["body/injectables/NewrelicInterceptor.html",[3,0.092,4,0.092,5,0.062,9,0.179,10,0.009,11,1.157,15,0.092,16,0.333,19,0.006,20,0.006,39,1.81,40,2.195,42,0.513,43,2.336,49,0.603,51,1.919,52,1.737,53,0.557,54,1.349,60,1.737,86,2.739,151,2.161,736,3.401,857,3.826,1111,5.4,1112,4.115,1113,6.682,1114,6.682,1115,5.947,1116,8.221,1117,7.917,1118,5.093,1119,4.115,1120,7.458,1121,6.682,1122,4.504,1123,6.682,1124,5.093,1125,6.682,1126,6.682,1127,6.682,1128,6.682,1129,6.682,1130,6.682,1131,6.682,1132,4.115,1133,4.504,1134,3.826,1135,4.504,1136,6.682,1137,6.682,1138,6.682,1139,5.093,1140,5.093,1141,5.093,1142,5.093,1143,5.093,1144,5.093,1145,5.093,1146,5.093,1147,5.093]],["title/classes/PaginationDto.html",[16,0.299,1148,3.431]],["body/classes/PaginationDto.html",[3,0.101,4,0.101,5,0.069,9,0.188,10,0.009,15,0.101,16,0.512,19,0.007,20,0.007,42,0.566,49,0.843,53,0.927,54,2.177,94,0.683,97,1.296,99,1.355,110,1.814,112,1,473,1.964,522,3.834,600,4.547,766,3.629,842,4.322,845,3.269,952,4.744,953,4.966,970,3.7,1148,5.347,1149,4.968,1150,4.22,1151,5.618,1152,4.22,1153,5.618,1154,5.87,1155,4.22,1156,4.22,1157,4.22]],["title/controllers/PayementController.html",[0,1.914,1158,3.431]],["body/controllers/PayementController.html",[0,1.845,2,1.795,3,0.079,4,0.079,5,0.054,7,2.673,9,0.209,10,0.009,11,1,15,0.079,16,0.288,17,2.212,18,1.845,19,0.006,20,0.006,42,0.443,43,2.118,49,0.821,51,2.283,52,2.067,53,0.816,54,1.605,57,1.882,60,2.363,69,3.48,86,2.545,99,1.319,112,0.784,144,1.971,220,2.798,232,3.85,258,4.206,335,3.526,338,3.307,339,3.307,345,2.941,348,3.307,361,3.307,365,5.204,366,3.307,368,3.679,370,3.307,371,2.673,372,3.107,405,4.551,410,5.606,441,4.551,501,4.276,612,5.533,1029,4.896,1049,3.558,1158,4.551,1159,3.894,1160,3.894,1161,6.599,1162,5.358,1163,4.403,1164,4.403,1165,4.403,1166,4.403,1167,4.403,1168,3.894,1169,6.599,1170,6.059,1171,4.403,1172,3.558,1173,4.627,1174,3.894,1175,3.558,1176,3.107,1177,4.403,1178,4.276,1179,4.403,1180,4.403,1181,4.403,1182,4.403,1183,4.403,1184,4.403,1185,4.403,1186,4.403]],["title/modules/PayementModule.html",[21,1.558,170,3.224]],["body/modules/PayementModule.html",[2,2.976,3,0.106,4,0.106,5,0.071,9,0.201,10,0.008,11,1.328,15,0.106,16,0.383,19,0.007,20,0.007,21,2.715,23,2.671,24,2.671,25,2.842,26,2.842,27,2.671,28,3.869,29,2.842,32,3.134,33,3.548,34,2.754,35,2.842,38,2.383,170,6.331,1158,5.978,1173,5.843,1174,5.17,1187,5.17,1188,5.17,1189,5.846,1190,5.846]],["title/injectables/PayementService.html",[39,1.237,1173,3.051]],["body/injectables/PayementService.html",[3,0.042,4,0.042,5,0.028,9,0.16,10,0.009,11,0.523,15,0.042,16,0.151,17,1.156,18,0.964,19,0.003,20,0.003,32,1.928,38,0.938,39,1.008,40,0.992,42,0.232,43,1.301,44,3.607,47,1.052,48,1.339,49,0.749,51,2.027,52,1.836,53,0.691,54,1.426,55,1.753,57,1.624,60,2.44,61,3.419,69,1.869,70,2.078,72,3.479,74,1.196,83,2.015,84,2.844,85,2.977,86,1.977,97,0.678,98,1.517,114,1.021,144,1.524,151,2.177,197,5.202,202,2.035,203,2.035,204,1.86,205,2.035,258,3.267,335,1.339,336,4.221,345,1.537,371,1.397,372,1.624,381,2.795,392,2.081,416,1.24,425,1.86,427,2.626,468,4.46,481,1.651,501,3.306,503,2.035,504,3.291,505,2.035,506,2.035,507,3.291,508,3.291,509,2.035,510,2.626,511,2.795,512,2.62,513,2.035,514,3.291,515,2.035,516,2.035,517,2.035,518,2.035,519,3.291,520,3.291,521,3.291,522,1.24,529,2.035,534,6.497,535,2.035,536,2.035,541,3.007,542,2.035,546,2.035,547,2.035,548,2.035,553,2.035,554,2.035,555,1.397,566,1.301,612,4.221,627,2.977,736,2.485,753,2.626,797,3.129,803,2.726,859,1.729,865,2.795,1086,3.306,1160,2.035,1161,4.758,1162,5.589,1168,3.291,1169,4.758,1173,2.485,1175,1.86,1176,1.624,1191,2.035,1192,4.685,1193,3.721,1194,3.721,1195,2.302,1196,5.908,1197,3.721,1198,3.721,1199,3.721,1200,3.721,1201,2.302,1202,3.007,1203,2.302,1204,5.908,1205,2.302,1206,3.721,1207,5.381,1208,2.302,1209,4.685,1210,3.721,1211,3.721,1212,3.721,1213,2.035,1214,2.302,1215,2.302,1216,2.302,1217,2.035,1218,2.035,1219,2.302,1220,2.302,1221,2.035,1222,2.302,1223,2.302,1224,2.302,1225,5.381,1226,2.302,1227,3.721,1228,3.721,1229,2.302,1230,2.302,1231,2.302,1232,2.302,1233,2.302,1234,1.86,1235,2.302,1236,1.86,1237,2.302,1238,3.786,1239,2.302,1240,2.302,1241,2.302,1242,2.302,1243,2.302,1244,2.302,1245,2.302,1246,2.302,1247,2.302,1248,2.302,1249,2.302,1250,2.302,1251,2.302,1252,3.721,1253,2.035,1254,3.721,1255,3.721,1256,2.302,1257,2.302,1258,1.86,1259,2.302,1260,2.302,1261,3.721,1262,2.302,1263,4.685,1264,2.035,1265,3.721,1266,2.302,1267,2.302,1268,2.302,1269,2.302,1270,2.302,1271,2.302,1272,2.302,1273,2.302,1274,2.035,1275,2.035,1276,3.721,1277,1.86,1278,2.302,1279,2.302,1280,2.302,1281,4.685,1282,2.302,1283,2.302,1284,2.302,1285,2.035,1286,1.463,1287,2.302,1288,2.302,1289,2.302,1290,1.86]],["title/classes/Post.html",[16,0.299,144,1.486]],["body/classes/Post.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.412,71,2.728,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,2.719,119,2.66,120,2.719,121,2.719,122,2.531,123,2.719,124,2.65,125,2.719,126,1.876,127,2.719,128,2.47,129,2.719,130,2.8,131,2.719,132,2.65,133,2.719,134,1.876,135,2.65,136,2.719,137,1.876,138,2.65,139,2.719,140,1.876,141,2.581,142,2.719,143,1.876,144,2.482,145,3.144,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/classes/Post-1.html",[16,0.25,114,1.697,144,1.244]],["body/classes/Post-1.html",[3,0.055,4,0.055,5,0.037,9,0.151,10,0.009,15,0.055,16,0.199,19,0.004,20,0.004,42,0.306,49,1.019,53,0.998,54,2.225,57,1.773,68,1.146,83,1.914,85,2.643,94,0.37,95,2.566,97,0.843,98,1.63,99,1.638,100,2.98,102,2.284,103,4.844,106,3.831,110,1.88,111,3.59,112,0.541,113,3.986,122,2.73,128,1.914,144,1.507,384,3.565,481,3.381,565,2.146,566,1.619,574,1.846,621,3.565,622,4.961,623,4.214,624,4.214,625,4.214,626,4.214,627,3.565,628,3.747,629,4.534,633,5.976,634,4.214,649,5.976,653,4.939,657,4.939,1258,4.534,1291,2.689,1292,3.041,1293,3.041,1294,3.041,1295,3.041,1296,3.041,1297,3.041,1298,3.041,1299,3.041,1300,3.041,1301,3.041,1302,3.041,1303,3.041,1304,3.041,1305,3.041,1306,3.041,1307,3.041,1308,3.041]],["title/controllers/PostController.html",[0,1.914,1309,3.431]],["body/controllers/PostController.html",[0,0.801,2,0.779,3,0.035,4,0.035,5,0.059,7,1.16,9,0.196,10,0.009,11,0.434,15,0.035,16,0.125,17,0.96,18,0.801,19,0.003,20,0.003,42,0.192,43,1.116,44,2.722,49,0.839,51,2.669,52,2.417,53,0.896,54,1.877,57,2.058,60,2.64,61,2.029,68,0.72,69,1.604,72,0.96,83,0.652,86,2.762,93,2.903,99,1.349,112,0.34,122,1.869,128,1.64,144,2.173,220,1.214,232,4.246,335,2.797,336,4.606,338,1.435,339,1.435,342,1.544,345,2.133,348,1.435,357,1.544,361,1.435,365,5.444,366,1.435,368,3.724,370,1.435,371,2.498,373,1.69,390,1.69,404,2.581,405,5.019,410,5.947,431,3.325,441,5.321,466,5.527,512,1.786,618,3.86,834,2.399,839,1.69,840,5.813,846,3.611,848,4.016,849,4.728,852,1.69,949,2.748,1029,5.197,1040,2.254,1045,4.671,1049,1.544,1054,1.69,1055,1.69,1107,2.824,1148,5.649,1309,2.399,1310,1.69,1311,3.638,1312,2.824,1313,2.824,1314,3.638,1315,2.824,1316,3.638,1317,4.114,1318,3.194,1319,1.69,1320,1.911,1321,1.911,1322,1.911,1323,2.399,1324,1.69,1325,1.911,1326,1.911,1327,3.884,1328,1.69,1329,1.911,1330,1.911,1331,1.69,1332,1.911,1333,1.911,1334,2.581,1335,1.69,1336,4.608,1337,1.911,1338,1.911,1339,1.911,1340,4.608,1341,3.194,1342,1.911,1343,1.911,1344,1.69,1345,1.911,1346,1.911,1347,1.911,1348,3.392,1349,4.728,1350,3.392,1351,1.911,1352,1.911,1353,3.638,1354,3.194,1355,1.911,1356,1.911,1357,1.911,1358,1.911,1359,1.911,1360,1.911,1361,1.911,1362,4.538,1363,1.911,1364,1.911,1365,1.544,1366,2.748,1367,1.69,1368,3.884,1369,1.911,1370,1.544,1371,1.911,1372,3.194,1373,1.911,1374,1.69,1375,1.69,1376,1.69,1377,1.911,1378,1.911,1379,1.69,1380,1.911,1381,1.911,1382,1.911,1383,1.911,1384,1.911,1385,1.911,1386,1.911,1387,3.194,1388,3.194,1389,1.911,1390,1.911,1391,1.911,1392,1.911,1393,1.911,1394,1.911,1395,1.911,1396,1.911,1397,3.194,1398,3.194,1399,1.911,1400,1.911,1401,1.911,1402,1.911,1403,1.911,1404,4.807,1405,4.807,1406,1.911,1407,1.911,1408,1.911,1409,1.911,1410,1.911,1411,1.911,1412,1.911,1413,1.911,1414,1.911,1415,1.911,1416,3.194,1417,1.911,1418,1.911,1419,1.911]],["title/classes/PostExtra.html",[16,0.299,146,1.862]],["body/classes/PostExtra.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.412,71,2.728,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,2.719,119,2.66,120,2.719,121,2.719,122,2.531,123,2.719,124,2.65,125,2.719,126,1.876,127,2.719,128,2.47,129,2.719,130,2.8,131,2.719,132,2.65,133,2.719,134,1.876,135,2.65,136,2.719,137,1.876,138,2.65,139,2.719,140,1.876,141,2.581,142,2.719,143,1.876,144,2.355,145,2.719,146,2.952,147,3.144,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/classes/PostExtra-1.html",[16,0.25,114,1.697,146,1.559]],["body/classes/PostExtra-1.html",[3,0.107,4,0.107,5,0.072,9,0.177,10,0.008,15,0.107,16,0.387,19,0.007,20,0.007,42,0.596,49,0.871,53,0.875,68,2.228,83,2.729,94,0.719,95,2.372,97,1.339,99,1.4,100,2.478,103,4.672,110,1.857,112,1.053,113,3.759,146,2.997,634,4.443,640,7.189,766,3.507,1420,5.23,1421,6.465,1422,5.915,1423,5.915]],["title/classes/PostFilterDto.html",[16,0.299,1350,3.224]],["body/classes/PostFilterDto.html",[3,0.057,4,0.057,5,0.039,9,0.154,10,0.009,15,0.057,16,0.377,19,0.004,20,0.004,42,0.32,49,0.954,53,0.972,54,2.333,68,1.196,75,6.36,87,2.696,94,0.386,97,0.872,98,1.288,99,1.534,102,3.595,103,4.595,106,3.706,110,1.337,111,3.723,112,0.565,113,4.075,308,7.488,473,1.11,481,2.555,495,2.8,522,2.578,566,2.241,574,1.928,599,1.928,600,4.761,621,2.018,623,4.817,624,4.817,625,4.327,626,4.817,627,4.075,628,4.283,633,5.844,635,2.808,639,2.808,640,5.844,641,2.808,642,3.196,649,5.844,653,4.283,657,4.283,660,2.385,661,2.385,662,2.808,663,2.808,664,2.808,697,4.065,766,3.03,842,2.906,845,1.848,952,3.497,953,3.66,970,2.488,1150,2.385,1152,2.385,1154,4.327,1155,2.385,1156,2.385,1157,2.385,1350,3.378,1424,7.235,1425,2.808,1426,3.175,1427,3.175,1428,3.175,1429,3.175,1430,3.175,1431,3.175,1432,3.175,1433,3.175,1434,3.175,1435,4.786,1436,3.175,1437,3.175,1438,3.175,1439,3.175,1440,3.175,1441,3.175,1442,3.175,1443,3.175,1444,3.175,1445,3.175,1446,3.175,1447,3.175]],["title/modules/PostModule.html",[21,1.558,171,3.224]],["body/modules/PostModule.html",[2,2.818,3,0.097,4,0.097,5,0.065,9,0.206,10,0.009,11,1.218,15,0.097,16,0.351,19,0.006,20,0.006,21,2.608,23,2.451,24,2.451,25,2.607,26,2.607,27,2.451,28,3.717,29,2.607,32,3.065,33,3.36,34,2.526,35,2.607,38,2.187,165,4.785,171,6.42,175,4.196,180,2.889,181,2.607,182,3.582,936,4.785,1309,5.743,1366,5.714,1367,4.743,1448,4.743,1449,4.743,1450,5.364,1451,5.364,1452,5.364,1453,4.029]],["title/injectables/PostService.html",[39,1.237,1366,3.051]],["body/injectables/PostService.html",[3,0.022,4,0.022,5,0.036,9,0.132,10,0.009,11,0.279,15,0.022,16,0.08,18,0.913,19,0.002,20,0.002,32,1.276,38,0.501,39,0.591,40,0.529,42,0.124,43,0.762,44,3.855,47,0.996,48,0.714,49,0.77,51,2.45,52,2.218,53,0.899,54,1.723,55,1.027,57,1.997,60,2.521,61,3.79,68,0.463,69,1.095,70,2.437,72,3.34,74,1.528,82,1.762,83,2.463,84,2.967,85,2.903,86,2.442,93,1.538,97,0.224,98,1.184,122,1.028,128,1.391,144,2.063,151,1.838,257,1.086,258,0.745,262,2.119,336,4.687,341,0.922,345,1.456,357,0.992,368,0.745,384,1.385,404,2.376,416,1.174,466,4.475,468,2.513,512,3.072,541,1.762,555,1.785,566,2.085,618,3.015,621,0.78,623,0.922,624,2.208,625,0.922,626,0.922,627,0.78,628,5.036,629,1.762,642,0.82,653,3.264,657,3.264,694,1.638,696,1.638,697,0.866,734,2.378,736,1.456,740,0.866,751,1.086,753,1.538,766,3.16,797,3.836,803,1.269,813,1.928,836,4.63,848,4.885,936,2.733,949,1.964,952,4.324,953,4.526,970,1.133,971,1.762,972,1.762,997,1.928,1040,2.513,1045,0.992,1084,0.78,1094,4.44,1218,1.086,1253,2.6,1258,4.211,1277,0.992,1311,1.928,1312,1.928,1313,1.928,1314,2.6,1315,2.6,1316,1.928,1319,1.928,1323,1.638,1324,1.928,1327,2.877,1328,1.928,1331,1.928,1334,1.762,1335,1.086,1344,1.928,1348,2.513,1349,3.149,1350,2.877,1353,1.928,1362,3.877,1365,2.376,1366,1.456,1368,1.762,1374,1.086,1375,1.086,1376,1.086,1379,1.086,1453,0.922,1454,1.086,1455,3.561,1456,2.18,1457,2.18,1458,2.18,1459,1.228,1460,1.228,1461,1.228,1462,2.18,1463,3.149,1464,1.228,1465,1.228,1466,1.228,1467,1.228,1468,1.228,1469,2.18,1470,1.228,1471,1.228,1472,1.228,1473,1.228,1474,1.762,1475,2.18,1476,2.18,1477,1.228,1478,2.18,1479,1.228,1480,2.18,1481,3.561,1482,2.18,1483,2.18,1484,2.94,1485,2.18,1486,2.18,1487,1.228,1488,2.18,1489,1.228,1490,2.18,1491,1.086,1492,1.228,1493,1.228,1494,3.991,1495,4.514,1496,4.763,1497,4.514,1498,4.887,1499,4.077,1500,2.94,1501,1.086,1502,1.228,1503,2.18,1504,1.228,1505,1.228,1506,1.228,1507,1.228,1508,1.228,1509,1.228,1510,2.18,1511,1.228,1512,1.086,1513,2.18,1514,1.228,1515,3.561,1516,1.228,1517,1.228,1518,0.992,1519,1.228,1520,5.079,1521,3.561,1522,1.228,1523,1.228,1524,1.228,1525,1.228,1526,1.228,1527,1.228,1528,1.228,1529,1.228,1530,1.228,1531,1.228,1532,1.228,1533,2.94,1534,1.228,1535,1.228,1536,1.228,1537,1.228,1538,1.928,1539,1.228,1540,1.228,1541,1.228,1542,1.228,1543,1.228,1544,1.228,1545,1.228,1546,1.228,1547,1.228,1548,1.228,1549,1.228,1550,1.928,1551,1.228,1552,1.086,1553,4.077,1554,1.228,1555,1.228,1556,1.228,1557,1.228]],["title/classes/PrismaClientExceptionFilter.html",[16,0.299,353,3.431]],["body/classes/PrismaClientExceptionFilter.html",[3,0.09,4,0.09,5,0.061,9,0.189,10,0.009,11,1.128,15,0.09,16,0.325,19,0.006,20,0.006,42,0.5,43,2.298,49,0.588,51,1.871,52,1.695,53,0.543,54,1.316,55,2.34,60,1.695,68,1.871,87,2.725,94,0.604,116,2.355,151,2.272,275,3.505,340,4.393,353,4.937,354,5.889,355,5.312,740,3.505,856,4.014,859,5.534,860,5.812,861,6.933,862,6.933,864,4.393,866,4.014,867,4.393,868,4.937,869,4.393,870,6.514,871,4.393,1002,5.812,1176,3.505,1275,4.393,1277,5.312,1285,6.514,1286,4.177,1558,5.812,1559,7.367,1560,7.367,1561,4.967,1562,4.393,1563,4.967,1564,6.573,1565,4.967,1566,4.967,1567,4.967,1568,6.573,1569,4.967,1570,4.967,1571,3.505,1572,4.967,1573,4.967,1574,4.967]],["title/injectables/PrismaHealthIndicator.html",[39,1.237,891,3.051]],["body/injectables/PrismaHealthIndicator.html",[3,0.096,4,0.096,5,0.065,9,0.183,10,0.009,11,1.205,15,0.096,16,0.347,17,2.666,18,2.224,19,0.006,20,0.006,32,3.057,38,2.164,39,1.859,40,2.287,42,0.534,43,2.399,44,3.583,47,2.425,49,0.813,51,2.586,52,2.342,53,0.751,54,1.818,60,1.811,70,2.354,72,2.666,86,1.949,98,1.355,114,2.354,116,2.459,190,3.545,227,3.987,262,3.567,274,3.373,416,2.859,555,3.222,566,1.855,576,5.081,579,6.727,581,6.07,584,4.693,585,4.693,859,3.987,891,4.584,1264,4.693,1274,6.07,1575,6.727,1576,4.693,1577,5.307,1578,5.307,1579,6.864,1580,5.307,1581,5.307,1582,5.307,1583,5.307,1584,5.307]],["title/modules/PrismaModule.html",[21,1.558,1585,3.431]],["body/modules/PrismaModule.html",[3,0.109,4,0.109,5,0.074,9,0.179,10,0.008,11,1.371,15,0.109,16,0.395,19,0.007,20,0.007,21,2.755,23,2.759,24,2.759,25,2.936,26,2.936,27,2.759,28,3.925,29,3.925,32,3.312,33,3.62,34,2.844,35,2.936,1585,6.712,1586,5.34,1587,5.34,1588,6.039,1589,6.039,1590,6.039]],["title/injectables/PrismaService.html",[32,1.637,39,1.237]],["body/injectables/PrismaService.html",[3,0.108,4,0.108,5,0.073,9,0.179,10,0.009,11,1.363,15,0.108,16,0.393,19,0.007,20,0.007,32,2.658,39,2.01,40,2.587,42,0.604,43,2.594,44,3.963,49,0.711,51,2.262,52,2.048,53,0.657,54,1.59,60,2.048,68,2.262,72,3.015,116,2.658,1591,5.308,1592,8.054,1593,7.42,1594,7.42,1595,8.413,1596,6.003,1597,6.003,1598,6.003,1599,6.003]],["title/classes/ProductDto.html",[16,0.299,1600,3.431]],["body/classes/ProductDto.html",[3,0.043,4,0.043,5,0.029,9,0.057,10,0.009,15,0.043,16,0.251,19,0.004,20,0.004,42,0.24,49,0.99,52,2.052,53,0.967,74,1.239,83,2.302,94,0.29,97,0.697,98,1.563,99,1.592,100,1.604,110,1.998,112,0.424,384,5.598,385,4.517,427,4.762,510,4.244,511,2.875,512,3.774,532,1.926,555,1.447,566,1.676,627,2.432,750,5.979,766,2.301,795,3.927,868,2.875,935,4.517,970,1.989,1084,2.432,1086,4.244,1178,1.682,1202,3.093,1236,7.301,1238,7.231,1286,2.432,1290,4.86,1474,5.189,1496,5.807,1518,1.926,1571,2.701,1600,4.125,1601,1.926,1602,5.318,1603,4.241,1604,4.241,1605,4.241,1606,5.318,1607,4.241,1608,4.241,1609,4.241,1610,7.273,1611,5.967,1612,2.383,1613,2.383,1614,4.856,1615,3.385,1616,2.383,1617,3.385,1618,2.383,1619,2.383,1620,3.385,1621,2.383,1622,2.383,1623,3.385,1624,2.383,1625,3.385,1626,2.383,1627,3.385,1628,2.383,1629,2.383,1630,2.875,1631,3.385,1632,2.383,1633,2.383,1634,3.385,1635,3.093,1636,2.383,1637,3.385,1638,2.383,1639,2.383,1640,3.385,1641,3.385,1642,2.383,1643,3.385,1644,3.385,1645,2.383,1646,2.383,1647,2.108,1648,2.108,1649,2.108,1650,2.108,1651,2.108]],["title/classes/ProductListResponseDto.html",[16,0.299,1178,3.224]],["body/classes/ProductListResponseDto.html",[3,0.06,4,0.06,5,0.041,9,0.08,10,0.009,15,0.06,16,0.324,19,0.005,20,0.005,42,0.335,49,0.778,52,1.691,53,0.916,74,3.079,83,2.021,94,0.405,97,0.903,98,1.571,99,1.25,100,1.394,110,2.088,112,0.592,384,5.748,385,3.723,427,5.379,510,3.498,511,2.499,512,4.263,555,2.02,566,2.071,627,2.114,750,6.028,766,2.077,795,4.084,868,4.93,935,3.723,970,1.729,1084,2.114,1086,3.498,1178,3.498,1202,5.304,1236,7.289,1238,7.092,1286,2.114,1290,4.005,1474,5.947,1496,2.499,1518,4.005,1571,2.348,1600,4.93,1601,2.689,1602,4.383,1603,2.942,1604,2.942,1605,2.942,1606,4.383,1607,2.942,1608,2.942,1609,2.942,1610,5.238,1611,6.207,1614,4.383,1615,2.942,1617,2.942,1620,2.942,1623,2.942,1625,2.942,1627,2.942,1630,2.499,1631,2.942,1634,2.942,1635,2.689,1637,2.942,1640,2.942,1641,2.942,1643,2.942,1644,2.942,1647,2.942,1648,2.942,1649,4.383,1650,5.238,1651,4.383,1652,3.327,1653,3.327,1654,3.327,1655,3.327]],["title/classes/ProfessionalFocus.html",[16,0.299,1656,3.691]],["body/classes/ProfessionalFocus.html",[3,0.097,4,0.097,5,0.065,9,0.166,10,0.009,15,0.097,16,0.35,19,0.006,20,0.006,42,0.539,49,0.956,53,0.964,63,2.966,83,2.605,91,6.171,94,0.65,95,2.475,97,1.256,98,1.619,99,1.536,100,3.38,110,1.938,112,0.952,1421,6.171,1656,5.575,1657,4.731,1658,5.35,1659,5.35,1660,5.35,1661,5.35]],["title/classes/Profile.html",[16,0.299,63,1.521]],["body/classes/Profile.html",[3,0.127,4,0.127,5,0.086,10,0.008,15,0.127,16,0.462,19,0.007,20,0.007,63,2.722,94,0.857,1662,6.237]],["title/classes/Profile-1.html",[16,0.25,63,1.274,114,1.697]],["body/classes/Profile-1.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.541,71,2.728,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,2.719,119,2.66,120,2.719,121,2.719,122,2.531,123,2.719,124,2.65,125,2.719,126,1.876,127,3.144,128,2.47,129,2.719,130,2.8,131,2.719,132,2.65,133,2.719,134,1.876,135,2.65,136,2.719,137,1.876,138,2.65,139,2.719,140,1.876,141,2.581,142,2.719,143,1.876,144,2.355,145,2.719,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/classes/Profile-2.html",[16,0.25,63,1.274,807,3.091]],["body/classes/Profile-2.html",[3,0.069,4,0.069,5,0.047,9,0.169,10,0.009,15,0.069,16,0.251,19,0.005,20,0.005,42,0.386,49,0.998,53,0.975,54,2.319,57,1.885,63,1.831,68,1.444,71,3.127,83,2.193,85,3.027,94,0.466,95,2.527,97,1.001,98,1.606,99,1.603,100,2.693,102,4.828,103,4.916,106,3.782,110,1.63,111,3.839,112,0.683,113,4.084,610,5.194,682,5.194,683,5.194,684,5.194,685,7.262,1663,3.39,1664,5.684,1665,5.684,1666,3.834,1667,3.834,1668,3.834,1669,3.834,1670,3.834,1671,3.834,1672,3.834,1673,3.834,1674,3.834,1675,3.834]],["title/classes/ProfileBookmarks.html",[16,0.299,124,1.813]],["body/classes/ProfileBookmarks.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.412,71,2.728,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,2.719,119,2.66,120,2.719,121,2.719,122,2.531,123,2.719,124,2.874,125,3.144,126,1.876,127,2.719,128,2.47,129,2.719,130,2.8,131,2.719,132,2.65,133,2.719,134,1.876,135,2.65,136,2.719,137,1.876,138,2.65,139,2.719,140,1.876,141,2.581,142,2.719,143,1.876,144,2.355,145,2.719,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/classes/ProfileBookmarks-1.html",[16,0.25,114,1.697,124,1.518]],["body/classes/ProfileBookmarks-1.html",[3,0.091,4,0.091,5,0.062,9,0.16,10,0.009,15,0.091,16,0.331,19,0.006,20,0.006,42,0.509,49,0.972,53,0.973,57,2.02,94,0.614,95,2.496,97,1.211,98,1.551,99,1.562,100,3.436,110,1.954,112,0.9,124,2.639,477,6.004,480,3.732,481,3.501,1676,4.47,1677,6.57,1678,7.43,1679,6.57,1680,5.055,1681,5.055,1682,5.055,1683,5.055,1684,5.055]],["title/modules/ProfileModule.html",[21,1.558,172,3.224]],["body/modules/ProfileModule.html",[2,2.688,3,0.09,4,0.09,5,0.061,9,0.209,10,0.009,11,1.134,12,5.094,15,0.09,16,0.327,19,0.006,20,0.006,21,2.519,23,2.281,24,2.281,25,2.427,26,2.427,27,2.281,28,3.59,29,2.427,32,3.006,33,3.206,34,2.351,35,2.427,38,2.035,165,4.692,172,6.472,175,4.004,180,2.689,181,2.427,182,3.334,936,4.692,1453,3.75,1685,4.414,1686,4.414,1687,4.992,1688,5.921,1689,5.094,1690,4.992,1691,6.53,1692,4.992,1693,4.992,1694,4.414,1695,4.414]],["title/injectables/ProfileService.html",[39,1.237,1688,3.224]],["body/injectables/ProfileService.html",[3,0.023,4,0.023,5,0.076,9,0.15,10,0.009,11,0.286,12,2.2,15,0.023,16,0.082,18,1.518,19,0.002,20,0.002,32,1.298,38,0.513,39,0.603,40,0.542,42,0.127,43,0.778,44,4.013,47,1.017,48,0.732,49,0.825,51,2.622,52,2.48,53,0.761,54,1.844,55,1.049,57,2.078,58,3.923,60,2.374,61,3.354,63,2.318,67,1.112,68,0.474,69,2.301,70,2.032,71,1.129,72,3.961,74,0.654,82,2.928,83,2.588,84,4.467,85,2.157,86,2.835,87,1.178,88,4.004,89,1.112,93,2.923,98,0.816,122,0.778,128,1.413,130,1.915,151,1.982,224,1.572,262,3.555,274,1.415,335,1.744,336,1.487,341,1.673,345,2.42,368,1.819,387,1.673,416,1.952,431,1.8,474,3.722,477,2.422,512,0.703,566,1.601,580,1.8,608,3.722,610,2.422,642,0.84,665,2.722,680,2.722,682,1.8,683,1.8,684,1.8,685,1.016,736,0.84,750,3.496,755,1.112,757,3.722,766,2.963,797,3.059,803,2.108,808,2.923,809,2.65,812,1.8,814,1.969,827,1.112,836,1.673,908,1.969,925,1.487,935,2.251,936,2.771,946,2.65,949,3.059,951,1.112,952,3.887,953,4.068,970,0.654,1040,4.099,1084,4.17,1086,0.888,1094,4.004,1104,1.112,1109,0.945,1217,3.204,1323,3.441,1327,1.016,1334,1.8,1365,2.422,1453,0.945,1463,1.969,1494,1.112,1501,1.969,1512,1.112,1520,1.112,1538,1.112,1550,1.969,1664,1.969,1665,2.65,1677,1.112,1679,3.663,1688,1.572,1689,2.2,1694,1.112,1695,1.112,1696,1.112,1697,2.227,1698,2.227,1699,2.997,1700,2.227,1701,2.227,1702,2.997,1703,2.227,1704,1.969,1705,2.997,1706,2.227,1707,2.227,1708,2.227,1709,2.997,1710,2.227,1711,2.997,1712,2.997,1713,2.997,1714,1.258,1715,2.227,1716,1.258,1717,2.227,1718,1.258,1719,1.258,1720,1.258,1721,2.227,1722,1.258,1723,2.227,1724,1.258,1725,1.258,1726,1.258,1727,1.258,1728,2.227,1729,1.258,1730,1.969,1731,1.258,1732,1.258,1733,2.997,1734,1.258,1735,2.227,1736,1.258,1737,2.227,1738,1.258,1739,2.227,1740,1.258,1741,1.258,1742,1.258,1743,2.227,1744,1.258,1745,1.258,1746,1.258,1747,1.258,1748,1.258,1749,1.258,1750,1.258,1751,1.258,1752,1.258,1753,1.258,1754,1.112,1755,2.227,1756,3.623,1757,2.227,1758,4.143,1759,1.258,1760,1.258,1761,1.258,1762,2.227,1763,3.623,1764,2.227,1765,2.227,1766,3.623,1767,2.227,1768,1.258,1769,4.667,1770,1.258,1771,1.258,1772,2.227,1773,1.258,1774,2.227,1775,1.258,1776,0.945,1777,1.112,1778,2.227,1779,1.258,1780,1.258,1781,1.258,1782,1.258,1783,2.227,1784,1.258,1785,1.258,1786,1.258,1787,1.258,1788,1.258,1789,1.258,1790,1.258,1791,1.258,1792,1.258,1793,2.227,1794,2.227,1795,1.258,1796,1.258,1797,1.258,1798,2.227,1799,2.227,1800,1.258,1801,1.258,1802,1.258,1803,1.258,1804,1.258,1805,3.623,1806,3.623,1807,3.623,1808,1.258,1809,2.227,1810,1.258,1811,1.258,1812,1.258,1813,1.258,1814,1.258,1815,1.258,1816,2.227,1817,1.258,1818,2.997,1819,1.258,1820,1.258,1821,1.258,1822,1.258,1823,1.258,1824,1.258,1825,1.258]],["title/classes/RefreshToken.html",[16,0.299,141,1.766]],["body/classes/RefreshToken.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.412,71,2.728,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,2.719,119,2.66,120,2.719,121,2.719,122,2.531,123,2.719,124,2.65,125,2.719,126,1.876,127,2.719,128,2.47,129,2.719,130,2.8,131,2.719,132,2.65,133,2.719,134,1.876,135,2.65,136,2.719,137,1.876,138,2.65,139,2.719,140,1.876,141,2.8,142,3.144,143,1.876,144,2.355,145,2.719,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/classes/RefreshToken-1.html",[16,0.25,114,1.697,141,1.479]],["body/classes/RefreshToken-1.html",[3,0.092,4,0.092,5,0.062,9,0.161,10,0.009,15,0.092,16,0.334,19,0.006,20,0.006,42,0.514,49,0.975,53,0.975,57,2.005,83,2.547,85,3.517,94,0.621,95,2.503,97,1.219,98,1.554,99,1.567,100,3.448,110,1.96,112,0.909,141,2.588,480,3.751,481,3.515,763,4.987,766,3.321,1826,4.515,1827,5.106,1828,5.106,1829,5.106,1830,5.106,1831,5.106]],["title/classes/ResetPassword.html",[16,0.299,138,1.813]],["body/classes/ResetPassword.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.412,71,2.728,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,2.719,119,2.66,120,2.719,121,2.719,122,2.531,123,2.719,124,2.65,125,2.719,126,1.876,127,2.719,128,2.47,129,2.719,130,2.8,131,2.719,132,2.65,133,2.719,134,1.876,135,2.65,136,2.719,137,1.876,138,2.874,139,3.144,140,1.876,141,2.581,142,2.719,143,1.876,144,2.355,145,2.719,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/classes/ResetPassword-1.html",[16,0.25,114,1.697,138,1.518]],["body/classes/ResetPassword-1.html",[3,0.092,4,0.092,5,0.062,9,0.161,10,0.009,15,0.092,16,0.334,19,0.006,20,0.006,42,0.514,49,0.975,53,0.975,57,2.005,83,2.547,85,3.517,94,0.621,95,2.503,97,1.219,98,1.554,99,1.567,100,3.448,110,1.96,112,0.909,138,2.656,480,3.751,481,3.515,763,4.987,766,3.321,1832,4.515,1833,5.106,1834,5.106,1835,5.106,1836,5.106,1837,5.106]],["title/classes/ResetPwdDto.html",[16,0.299,281,3.431]],["body/classes/ResetPwdDto.html",[3,0.115,4,0.115,5,0.078,9,0.185,10,0.008,15,0.115,16,0.503,19,0.007,20,0.007,42,0.641,49,0.754,53,0.696,94,0.774,97,1.4,98,1.369,99,1.212,110,1.785,112,1.133,281,5.775,392,4.621,473,2.224,494,5.775,496,4.779,500,5.627,605,5.142,1838,6.799]],["title/classes/Resume.html",[16,0.299,130,1.766]],["body/classes/Resume.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.645,63,2.412,71,2.728,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,2.719,119,2.66,120,2.719,121,2.719,122,2.531,123,2.719,124,2.65,125,2.719,126,1.876,127,2.719,128,2.47,129,2.719,130,2.95,131,3.144,132,2.65,133,2.719,134,1.876,135,2.65,136,2.719,137,1.876,138,2.65,139,2.719,140,1.876,141,2.581,142,2.719,143,1.876,144,2.355,145,2.719,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/classes/Resume-1.html",[16,0.25,114,1.697,130,1.479]],["body/classes/Resume-1.html",[3,0.098,4,0.098,5,0.066,9,0.131,10,0.009,15,0.098,16,0.356,19,0.006,20,0.006,42,0.547,49,0.962,53,0.967,54,1.847,83,2.625,94,0.661,95,2.488,97,1.269,98,1.623,99,1.545,100,3.224,106,2.928,110,1.884,111,3.283,112,0.968,130,2.695,480,3.865,481,3.6,925,5.139,1109,5.78,1839,4.807,1840,5.436,1841,5.436,1842,5.436,1843,5.436]],["title/controllers/ResumesController.html",[0,1.914,1844,3.431]],["body/controllers/ResumesController.html",[0,2.771,2,2.696,3,0.119,4,0.119,5,0.081,7,4.015,9,0.189,10,0.008,11,1.502,15,0.119,16,0.433,17,3.322,18,2.771,19,0.007,20,0.007,1689,5.1,1769,5.848,1844,5.911,1845,5.848,1846,5.848,1847,6.613]],["title/modules/ResumesModule.html",[21,1.558,173,3.224]],["body/modules/ResumesModule.html",[2,2.882,3,0.1,4,0.1,5,0.068,9,0.203,10,0.009,11,1.262,15,0.1,16,0.364,19,0.006,20,0.006,21,2.652,23,2.538,24,2.538,25,2.701,26,2.701,27,2.538,28,3.779,29,2.701,32,3.094,33,3.436,34,2.617,35,2.701,38,2.265,165,4.829,173,6.377,175,4.291,180,2.993,181,2.701,182,3.711,1689,5.243,1844,5.839,1846,4.913,1848,5.556,1849,5.556,1850,5.556,1851,5.556,1852,5.556]],["title/injectables/ResumesService.html",[39,1.237,1689,2.773]],["body/injectables/ResumesService.html",[3,0.075,4,0.075,5,0.093,9,0.175,10,0.009,11,0.94,15,0.075,16,0.271,18,2.433,19,0.005,20,0.005,32,2.604,38,1.688,39,1.573,40,1.784,42,0.417,43,2.029,44,3.98,47,2.653,48,2.41,49,0.861,51,2.738,52,2.479,53,0.795,54,1.925,55,2.735,57,1.965,60,2.287,68,1.56,70,2.575,72,3.651,74,2.152,83,1.413,84,3.525,85,3.423,86,2.133,98,1.413,130,2.592,151,1.683,180,2.23,181,2.013,262,3.777,416,3.127,418,3.11,780,4.946,783,3.11,803,3.379,865,3.11,925,4.478,949,4.478,955,3.662,956,3.346,957,3.662,958,5.134,959,3.346,960,3.346,961,3.662,962,3.346,964,3.346,1108,3.662,1109,3.11,1689,3.525,1704,5.134,1730,5.134,1853,3.662,1854,5.806,1855,5.806,1856,4.141,1857,5.806,1858,4.141,1859,5.806,1860,4.141,1861,5.806,1862,4.141,1863,5.806,1864,4.141,1865,4.141]],["title/injectables/RtStrategy.html",[39,1.237,458,3.224]],["body/injectables/RtStrategy.html",[3,0.094,4,0.094,5,0.063,9,0.199,10,0.009,11,1.18,15,0.094,16,0.34,19,0.006,20,0.006,39,1.834,40,2.24,42,0.523,43,2.367,47,3.441,49,0.802,51,1.958,52,1.773,53,0.569,54,1.377,60,1.773,70,2.305,86,1.909,116,1.862,141,2.912,151,1.506,212,4.2,213,5.988,216,6.448,218,6.448,219,4.596,220,3.303,221,4.596,222,4.596,223,4.2,224,4.779,225,4.2,226,4.596,227,3.904,228,4.596,229,4.596,230,4.596,258,4.845,322,4.2,409,4.596,416,2.8,458,4.779,566,1.817,1172,5.472,1176,3.668,1491,4.596,1866,6.66,1867,5.198,1868,6.772,1869,5.198,1870,6.66,1871,5.198,1872,5.198,1873,5.198,1874,5.198,1875,5.198,1876,5.198,1877,5.198]],["title/classes/SearchQueryDto.html",[16,0.299,1348,3.224]],["body/classes/SearchQueryDto.html",[3,0.101,4,0.101,5,0.069,9,0.188,10,0.009,15,0.101,16,0.512,19,0.007,20,0.007,42,0.566,49,0.843,53,0.927,54,2.177,94,0.683,97,1.296,98,1.542,99,1.355,110,1.814,112,1,473,1.964,495,3.799,522,3.834,600,4.547,619,6.314,842,4.322,845,3.269,970,3.7,1348,5.024,1552,6.91,1878,4.968,1879,7.814,1880,7.119,1881,5.618,1882,5.618]],["title/classes/SelectAllPostsDto.html",[16,0.299,1340,3.431]],["body/classes/SelectAllPostsDto.html",[3,0.089,4,0.089,5,0.06,9,0.188,10,0.009,15,0.089,16,0.48,19,0.006,20,0.006,42,0.495,49,0.925,53,0.983,54,2.069,68,1.853,94,0.598,97,1.189,99,1.487,106,3.517,110,1.702,111,3.453,112,0.876,473,1.719,522,3.517,599,2.986,600,4.73,628,4.896,653,5.216,657,5.216,660,3.695,661,3.695,766,3.501,842,3.965,845,2.862,952,4.451,953,4.659,970,3.394,1150,3.695,1152,3.695,1154,5.507,1155,3.695,1156,3.695,1157,3.695,1340,4.905,1883,6.568,1884,4.35,1885,4.35,1886,4.919,1887,4.919,1888,4.919,1889,4.35,1890,4.919]],["title/classes/SelectPostsDto.html",[16,0.299,1336,3.431]],["body/classes/SelectPostsDto.html",[3,0.084,4,0.084,5,0.057,9,0.184,10,0.009,15,0.084,16,0.468,19,0.006,20,0.006,42,0.471,49,0.947,53,0.987,54,2.028,68,1.763,85,3.367,94,0.569,97,1.15,98,1.273,99,1.522,106,3.851,110,1.659,111,3.605,112,0.833,473,1.636,495,3.07,522,3.402,599,2.841,600,4.793,620,3.302,628,4.775,638,4.138,644,4.138,653,5.112,657,5.112,660,3.515,661,3.515,766,3.451,842,3.834,845,2.723,952,4.34,953,4.543,970,3.282,1150,3.515,1152,3.515,1154,5.37,1155,3.515,1156,3.515,1157,3.515,1336,4.744,1883,6.655,1885,4.138,1889,4.138,1891,4.679,1892,4.679,1893,4.679,1894,4.679]],["title/classes/SendMessageDto.html",[16,0.299,1028,3.224]],["body/classes/SendMessageDto.html",[3,0.109,4,0.109,5,0.074,9,0.18,10,0.008,15,0.109,16,0.488,19,0.007,20,0.007,42,0.61,49,0.884,53,0.816,94,0.736,97,1.359,98,1.503,99,1.421,110,1.877,112,1.078,469,4.274,472,5.265,473,2.117,492,4.55,495,3.627,1028,5.265,1041,6.074,1421,6.534,1895,6.534,1896,5.356,1897,6.057,1898,6.057]],["title/classes/SetUserSettingsDto.html",[16,0.299,324,3.431]],["body/classes/SetUserSettingsDto.html",[3,0.073,4,0.073,5,0.049,9,0.159,10,0.009,15,0.073,16,0.373,19,0.005,20,0.005,42,0.405,49,1.02,53,0.942,57,1.973,68,1.516,94,0.489,97,1.036,98,1.571,99,1.639,111,4.093,112,0.717,255,3.842,324,4.275,392,3.692,473,1.407,495,4.137,599,2.444,600,5.056,621,4.196,693,5.335,694,4.96,695,6.353,696,4.96,697,4.66,720,3.559,795,3.312,1899,6.527,1900,3.559,1901,5.839,1902,5.839,1903,7.299,1904,8.081,1905,4.025,1906,4.025,1907,4.025,1908,4.025,1909,4.025,1910,4.025,1911,4.025,1912,4.025,1913,4.025,1914,4.025,1915,4.025,1916,5.691,1917,4.025,1918,4.025,1919,5.691,1920,5.691]],["title/classes/UpdateAuthDto.html",[16,0.299,1921,3.691]],["body/classes/UpdateAuthDto.html",[3,0.121,4,0.121,5,0.082,9,0.191,10,0.008,15,0.121,16,0.44,19,0.007,20,0.007,69,3.377,94,0.817,112,1.197,116,2.409,305,4.745,347,5.946,604,5.433,1899,5.05,1921,6.421,1922,5.05,1923,6.724]],["title/classes/UpdatePayementDto.html",[16,0.299,1924,3.691]],["body/classes/UpdatePayementDto.html",[3,0.121,4,0.121,5,0.082,9,0.191,10,0.008,15,0.121,16,0.44,19,0.007,20,0.007,69,3.377,94,0.817,112,1.197,116,2.409,612,4.49,614,5.433,1175,5.433,1922,5.05,1924,6.421,1925,5.946,1926,6.724]],["title/classes/UpdatePostDto.html",[16,0.299,1362,3.224]],["body/classes/UpdatePostDto.html",[3,0.121,4,0.121,5,0.082,9,0.191,10,0.008,15,0.121,16,0.44,19,0.007,20,0.007,69,3.377,94,0.817,112,1.197,116,2.409,618,4.49,620,4.745,1362,5.608,1368,5.433,1922,5.05,1927,5.946,1928,6.724]],["title/classes/UpdateProfileDto.html",[16,0.299,1929,3.691]],["body/classes/UpdateProfileDto.html",[3,0.121,4,0.121,5,0.082,9,0.191,10,0.008,15,0.121,16,0.44,19,0.007,20,0.007,69,3.377,94,0.817,112,1.197,116,2.409,476,5.05,679,5.05,1754,5.946,1922,5.05,1929,6.421,1930,5.946,1931,6.724]],["title/classes/UpdatePwdDto.html",[16,0.299,264,3.431]],["body/classes/UpdatePwdDto.html",[3,0.117,4,0.117,5,0.079,9,0.157,10,0.008,15,0.117,16,0.426,19,0.007,20,0.007,42,0.655,49,0.771,53,0.712,94,0.791,97,1.419,98,1.387,99,1.239,110,1.936,112,1.158,255,4.854,264,5.854,496,4.887,499,5.754,1899,5.854]],["title/interfaces/UploadedMulterFileI.html",[725,3.051,793,3.431]],["body/interfaces/UploadedMulterFileI.html",[3,0.085,4,0.085,5,0.078,9,0.153,10,0.009,11,1.073,15,0.13,19,0.006,20,0.006,42,0.476,53,0.903,70,3.186,97,1.157,98,1.589,151,2.226,181,2.296,381,3.548,399,3.817,512,2.641,725,4.245,727,3.817,734,3.154,766,3.01,781,3.333,784,3.548,789,5.136,791,4.774,793,4.774,799,5.136,800,3.817,801,4.774,956,6.209,965,4.176,1084,4.039,1221,4.176,1234,3.817,1323,3.548,1776,5.771,1932,3.817,1933,8.439,1934,7.683,1935,6.794,1936,7.683,1937,6.794,1938,4.723,1939,4.176,1940,4.723,1941,4.723,1942,4.723,1943,4.176,1944,4.176,1945,4.723,1946,4.723,1947,4.723,1948,3.817,1949,4.176,1950,4.176,1951,4.176,1952,4.176,1953,4.176,1954,4.176,1955,4.176,1956,4.723,1957,4.723,1958,4.176,1959,4.723,1960,4.723]],["title/classes/User.html",[16,0.299,57,1.037]],["body/classes/User.html",[3,0.074,4,0.074,5,0.05,9,0.214,10,0.009,15,0.162,16,0.583,19,0.005,20,0.005,57,1.733,63,2.412,71,2.728,87,2.355,94,0.499,95,1.218,115,1.822,116,3.206,117,2.719,118,3.144,119,2.66,120,2.719,121,2.719,122,2.531,123,2.719,124,2.65,125,2.719,126,1.876,127,2.719,128,2.47,129,2.719,130,2.8,131,2.719,132,2.65,133,2.719,134,1.876,135,2.65,136,2.719,137,1.876,138,2.65,139,2.719,140,1.876,141,2.581,142,2.719,143,1.876,144,2.355,145,2.719,146,2.722,147,2.719,148,1.934,149,1.934,150,1.934,151,1.19,152,1.822]],["title/classes/User-1.html",[16,0.25,57,0.869,114,1.697]],["body/classes/User-1.html",[3,0.036,4,0.036,5,0.025,9,0.177,10,0.009,15,0.036,16,0.132,19,0.003,20,0.003,42,0.203,49,1.017,53,1.006,54,2.022,57,0.758,63,2.271,68,0.76,83,1.458,87,1.931,94,0.245,95,2.554,97,0.608,98,1.545,99,1.634,100,3.021,103,4.178,106,3.385,110,1.934,111,3.097,112,0.359,113,3.158,119,2.582,122,2.384,124,2.707,126,0.921,132,2.61,134,0.921,135,2.61,137,0.921,138,2.61,140,0.921,141,2.542,143,0.921,144,1.931,255,2.487,392,2.39,480,2.147,481,3.268,557,3.21,558,3.21,565,4.435,566,2.668,574,3.816,621,2.716,634,3.733,692,3.78,693,3.454,694,3.21,695,5.68,696,3.21,697,3.016,698,3.454,734,2.854,795,3.826,848,3.21,1286,2.716,1901,3.78,1902,3.78,1903,6.934,1961,1.783,1962,4.274,1963,4.274,1964,4.274,1965,4.274,1966,4.274,1967,2.016,1968,2.016,1969,2.016,1970,2.016,1971,2.016,1972,2.016,1973,2.016,1974,2.016,1975,2.016,1976,2.016,1977,2.016,1978,2.016,1979,2.016,1980,2.016,1981,2.016,1982,2.016,1983,2.016,1984,2.016,1985,2.016,1986,2.016,1987,2.016,1988,2.016,1989,2.016,1990,2.016,1991,2.016,1992,2.016,1993,4.97,1994,2.016,1995,3.339,1996,2.016,1997,2.016]],["title/guards/UserFoundGuard.html",[350,3.431,1998,3.691]],["body/guards/UserFoundGuard.html",[3,0.092,4,0.092,5,0.062,9,0.161,10,0.009,11,1.159,15,0.092,16,0.334,17,2.565,18,2.139,19,0.006,20,0.006,32,2.839,38,2.082,39,1.813,42,0.514,43,2.339,44,3.517,47,2.333,48,2.971,49,0.793,51,2.522,52,2.283,53,0.732,54,1.773,55,3.153,57,1.696,60,1.742,70,2.265,72,2.565,86,1.875,151,1.94,258,4.063,262,3.479,274,5.036,335,2.971,350,5.028,387,3.835,392,4.937,395,4.126,416,2.75,566,1.785,857,3.835,1115,5.953,1119,4.126,1999,4.126,2000,6.034,2001,4.126,2002,7.008,2003,4.515,2004,5.919,2005,4.515,2006,5.106,2007,4.515,2008,4.515,2009,4.515,2010,4.515,2011,5.106,2012,4.515,2013,5.106]],["title/guards/UserNotFoundGuard.html",[1998,3.691,2014,3.691]],["body/guards/UserNotFoundGuard.html",[3,0.093,4,0.093,5,0.063,9,0.162,10,0.009,11,1.168,15,0.093,16,0.337,17,2.584,18,2.156,19,0.006,20,0.006,32,2.848,38,2.097,39,1.822,42,0.518,43,2.351,44,3.53,47,2.35,48,2.994,49,0.797,51,2.534,52,2.295,53,0.736,54,1.782,55,3.168,57,1.702,60,1.755,70,2.282,72,2.584,86,1.89,151,1.949,258,3.123,262,3.496,274,4.762,335,2.994,387,3.865,392,4.889,395,4.157,416,2.771,566,1.798,857,3.865,1115,5.97,1119,4.157,1999,4.157,2000,6.056,2001,4.157,2002,7.029,2003,4.55,2004,5.948,2005,4.55,2007,4.55,2008,4.55,2009,4.55,2010,4.55,2012,4.55,2014,5.436,2015,5.145,2016,5.145,2017,5.145]],["title/coverage.html",[2018,5.495]],["body/coverage.html",[0,2.797,1,1.315,5,0.047,6,1.548,10,0.009,12,1.062,16,0.598,19,0.003,20,0.003,27,0.8,32,0.627,39,2.1,41,1.548,53,0.191,57,1.032,58,1.235,63,1.285,70,0.776,71,1.117,87,0.965,95,2.521,96,1.548,115,3.354,119,1.089,122,1.037,124,1.177,128,1.012,130,1.147,132,1.177,135,1.177,138,1.177,141,1.147,144,0.965,146,1.209,152,0.776,153,1.315,154,1.548,157,1.169,181,2.685,187,2.093,204,2.397,206,1.548,210,1.235,211,1.548,212,2.397,232,1.112,233,1.548,234,1.315,235,1.548,249,1.315,264,1.315,265,1.315,271,1.315,281,1.315,293,1.315,297,1.315,305,1.235,324,1.315,343,1.315,350,1.315,353,1.315,354,2.228,355,1.414,368,1.062,378,1.414,457,1.169,458,1.235,466,1.235,467,1.548,474,1.315,475,1.548,476,2.899,479,1.548,487,2.397,488,2.397,496,2.899,501,1.235,502,1.548,556,1.548,575,1.169,576,3.035,577,1.548,578,1.548,592,3.396,593,1.548,603,2.397,604,2.397,608,1.315,609,1.548,612,1.169,613,1.548,614,2.397,618,1.169,619,2.397,620,3.207,665,1.315,666,1.548,679,1.315,680,1.315,681,1.548,691,2.397,718,1.315,725,1.981,726,1.414,728,2.397,736,4.589,753,6.608,757,1.315,758,1.548,759,1.548,762,1.548,763,1.169,771,1.548,780,1.062,781,3.898,784,1.315,786,1.548,787,1.414,791,1.315,793,1.315,801,1.315,834,1.315,835,1.548,840,1.315,841,1.548,846,1.315,847,1.548,853,1.548,854,1.414,855,1.548,856,2.397,879,1.548,881,1.315,882,1.548,888,1.169,891,1.169,919,1.548,920,1.548,933,1.315,934,1.548,936,0.979,944,1.548,978,1.548,1005,1.548,1020,1.315,1021,1.548,1028,1.235,1047,1.169,1053,1.414,1076,1.548,1087,1.414,1111,1.414,1112,3.119,1132,1.414,1134,1.315,1148,1.315,1149,1.548,1158,1.315,1159,1.548,1173,1.169,1178,1.235,1191,1.548,1291,1.548,1309,1.315,1310,1.548,1336,1.315,1340,1.315,1348,1.235,1350,1.235,1362,1.235,1366,1.169,1370,1.414,1420,1.548,1424,1.548,1425,1.548,1454,1.548,1558,1.548,1575,1.548,1576,1.548,1591,1.548,1600,1.315,1601,2.397,1656,1.414,1657,1.548,1662,1.548,1663,1.548,1676,1.548,1688,1.235,1689,1.062,1691,1.548,1696,1.548,1776,1.315,1826,1.548,1832,1.548,1838,1.548,1839,1.548,1844,1.315,1845,1.548,1853,1.548,1866,1.548,1878,1.548,1883,2.397,1884,1.548,1895,2.397,1896,1.548,1899,2.899,1900,1.548,1921,1.414,1924,1.414,1925,1.548,1927,1.548,1929,1.414,1930,1.548,1932,4.109,1939,1.548,1948,1.414,1961,1.548,1998,2.397,2000,2.397,2001,2.397,2014,1.414,2018,1.548,2019,1.548,2020,1.75,2021,3.859,2022,5.524,2023,1.75,2024,1.75,2025,8.903,2026,7.195,2027,4.544,2028,2.966,2029,7.753,2030,5.524,2031,1.75,2032,5.524,2033,7.662,2034,1.75,2035,1.75,2036,1.75,2037,1.548,2038,1.548,2039,1.75,2040,2.966,2041,2.623,2042,1.548,2043,1.548,2044,3.119,2045,1.548,2046,1.548,2047,1.548,2048,1.548,2049,1.414,2050,1.75,2051,1.75,2052,1.548,2053,1.75,2054,1.75,2055,1.75,2056,1.75,2057,1.75,2058,1.75,2059,1.75,2060,2.623,2061,2.623,2062,1.548,2063,1.548,2064,1.548,2065,2.623,2066,2.623,2067,1.548,2068,1.548,2069,2.623,2070,2.623,2071,1.548,2072,1.548,2073,1.548,2074,1.548,2075,1.75,2076,1.75,2077,1.75,2078,1.75]],["title/dependencies.html",[24,2.507,1630,2.873]],["body/dependencies.html",[10,0.009,11,1.104,16,0.477,19,0.006,20,0.006,24,2.22,53,0.709,55,3.051,65,4.297,68,1.831,112,0.865,190,3.246,192,4.297,196,3.927,197,4.866,220,3.088,223,5.235,224,4.572,386,4.297,462,4.297,473,1.699,481,2.155,510,3.429,799,3.927,800,3.927,845,2.828,986,4.297,987,3.927,1122,4.297,1134,3.65,1176,3.429,1213,4.297,1562,4.297,2079,4.86,2080,7.772,2081,4.86,2082,4.86,2083,4.86,2084,4.86,2085,4.86,2086,4.86,2087,4.86,2088,4.86,2089,4.86,2090,4.86,2091,4.86,2092,4.86,2093,4.86,2094,4.86,2095,4.86,2096,4.86,2097,4.86,2098,4.86,2099,4.86,2100,4.86,2101,4.86,2102,4.86,2103,4.86,2104,4.86,2105,4.86,2106,4.86,2107,4.86,2108,4.86,2109,4.86,2110,4.86,2111,4.86,2112,4.86,2113,4.86,2114,7.287,2115,4.86,2116,4.86,2117,4.86,2118,4.86,2119,4.86,2120,4.86,2121,4.86,2122,4.86,2123,4.86,2124,4.86,2125,4.86,2126,4.86,2127,4.86,2128,4.86,2129,4.86,2130,4.86,2131,4.86,2132,4.86,2133,4.86,2134,4.86,2135,4.86]],["title/miscellaneous/functions.html",[2136,2.555,2137,4.854]],["body/miscellaneous/functions.html",[5,0.085,10,0.008,19,0.006,20,0.006,27,3.187,42,0.449,51,3.274,52,2.965,53,0.926,54,2.302,60,2.56,98,1.611,128,1.522,255,3.558,262,3.9,718,4.593,728,3.605,733,6.169,734,4.084,741,3.945,763,5.012,797,4.084,810,3.605,1053,4.941,1286,3.885,1370,4.941,1496,3.351,1776,4.593,1935,3.945,2041,3.945,2042,5.407,2043,5.407,2044,3.605,2045,5.407,2047,3.945,2060,3.945,2061,6.169,2062,3.945,2063,5.407,2064,5.407,2065,3.945,2066,6.169,2067,5.407,2068,5.407,2136,2.98,2137,3.945,2138,6.114,2139,6.114,2140,4.462,2141,5.407,2142,6.114,2143,4.462,2144,4.462,2145,4.462,2146,4.462,2147,3.945,2148,4.462,2149,4.462,2150,4.462,2151,4.462,2152,6.114,2153,6.114,2154,4.462,2155,4.462,2156,4.462,2157,6.114,2158,4.462,2159,4.462,2160,4.462,2161,4.462,2162,4.462,2163,4.462,2164,4.462]],["title/index.html",[42,0.385,2165,3.825,2166,3.825]],["body/index.html",[10,0.007,19,0.007,20,0.007,55,2.861,196,4.909,242,5.372,255,3.535,753,4.287,808,4.287,822,7.16,987,4.909,1571,4.287,2019,6.61,2167,7.475,2168,6.075,2169,6.075,2170,6.075,2171,6.075,2172,6.075,2173,6.075,2174,6.075,2175,6.075,2176,6.075,2177,6.075,2178,6.075,2179,6.075,2180,6.075,2181,6.075,2182,6.075,2183,6.075,2184,6.075,2185,6.075,2186,6.075,2187,6.075,2188,7.475,2189,6.075,2190,6.075,2191,6.075,2192,6.075,2193,6.075,2194,6.075,2195,6.075,2196,6.075,2197,6.075,2198,6.075,2199,6.075,2200,6.075,2201,6.075,2202,6.075,2203,6.075,2204,6.075,2205,6.075,2206,6.075]],["title/modules.html",[23,2.839]],["body/modules.html",[10,0.007,19,0.007,20,0.007,22,4.162,23,2.694,160,4.43,164,4.162,165,3.298,166,4.162,167,4.162,168,4.162,169,4.162,170,4.162,171,4.162,172,4.162,173,4.162,1585,4.43,2207,9.252,2208,9.252,2209,9.252,2210,9.252]],["title/overview.html",[2211,5.495]],["body/overview.html",[2,1.379,10,0.009,12,4.018,19,0.005,20,0.005,21,1.154,22,5.409,23,1.546,24,1.546,25,1.645,26,1.645,27,1.546,28,1.645,29,1.645,30,2.992,31,2.992,32,3.135,33,2.44,34,1.594,35,1.645,40,1.458,94,0.411,157,3.995,160,6.839,161,2.992,162,2.992,163,2.992,164,5.992,165,4.642,166,5.858,167,5.675,168,5.225,169,5.675,170,5.409,171,5.858,172,6.094,173,5.675,210,4.222,343,4.494,455,2.992,456,2.992,457,5.257,458,4.222,575,3.995,727,2.734,777,2.992,778,2.992,779,2.992,780,4.653,807,4.055,888,3.995,891,3.995,914,2.992,915,2.992,936,3.953,939,2.992,940,2.992,973,2.992,974,2.992,1047,3.995,1070,2.992,1072,2.992,1098,2.734,1173,3.995,1187,2.992,1188,2.992,1366,3.995,1448,2.992,1449,2.992,1585,5.309,1586,2.992,1587,2.992,1685,2.992,1686,2.992,1688,4.222,1689,4.018,1999,2.734,2211,2.992,2212,3.383,2213,3.383,2214,3.383]],["title/properties.html",[97,0.999,1630,2.873]],["body/properties.html",[10,0.008,19,0.007,20,0.007,97,1.28,384,4.466,999,6.215,1006,5.679,2215,7.028,2216,7.028,2217,7.028]],["title/classes/sendFiileDto.html",[16,0.299,2049,3.691]],["body/classes/sendFiileDto.html",[3,0.115,4,0.115,5,0.078,9,0.185,10,0.008,15,0.115,16,0.503,19,0.007,20,0.007,42,0.641,49,0.754,53,0.696,94,0.774,97,1.4,98,1.369,99,1.212,110,1.785,112,1.133,469,4.49,472,5.426,473,2.224,1041,6.206,1895,6.213,2048,5.627,2049,6.213,2218,6.363]],["title/miscellaneous/typealiases.html",[2136,2.555,2219,5.489]],["body/miscellaneous/typealiases.html",[10,0.007,19,0.007,20,0.007,42,0.686,53,0.931,216,6.472,349,7.083,532,6.472,1870,7.083,2136,4.551,2220,6.815,2221,6.815,2222,6.815,2223,6.815,2224,6.815,2225,6.815,2226,6.815]],["title/miscellaneous/variables.html",[994,4.435,2136,2.555]],["body/miscellaneous/variables.html",[5,0.071,10,0.009,19,0.004,20,0.004,42,0.327,53,0.87,57,0.739,61,2.067,63,1.083,70,2.592,71,1.225,74,1.69,86,1.195,87,1.058,95,0.964,97,1.182,98,1.238,115,1.442,119,1.195,122,1.137,124,1.291,128,1.662,130,1.257,132,1.291,135,1.291,138,1.291,141,1.257,144,1.058,146,1.326,151,1.693,152,2.161,181,1.581,258,2.958,274,2.067,275,2.295,368,2.958,381,2.443,399,2.628,512,2.725,555,1.974,566,1.137,725,2.172,734,5.627,740,2.295,743,5.739,750,2.295,766,1.363,781,2.295,784,3.66,787,3.938,789,2.628,791,4.389,795,1.893,801,4.389,810,4.722,866,2.628,949,2.172,970,1.69,994,2.628,1084,2.067,1087,3.938,1098,2.628,1112,2.628,1115,2.443,1132,3.938,1133,2.876,1134,3.66,1135,2.876,1172,2.628,1234,2.628,1286,5.354,1571,2.295,1635,5.244,1777,2.876,1932,5.617,1937,2.876,1943,2.876,1944,2.876,1948,3.938,1949,2.876,1950,2.876,1951,2.876,1952,2.876,1953,2.876,1954,2.876,1955,2.876,1958,2.876,2037,2.876,2038,4.309,2044,2.628,2046,4.309,2052,2.876,2069,2.876,2070,5.167,2071,4.309,2072,2.876,2073,4.309,2074,4.309,2136,2.172,2141,2.876,2147,4.309,2227,3.252,2228,3.252,2229,6.49,2230,3.252,2231,3.252,2232,4.873,2233,4.873,2234,3.252,2235,5.843,2236,3.252,2237,4.873,2238,3.252,2239,3.252,2240,3.252,2241,3.252,2242,3.252,2243,3.252,2244,3.252,2245,3.252,2246,3.252,2247,3.252,2248,3.252,2249,3.252,2250,3.252,2251,3.252,2252,3.252,2253,3.252,2254,3.252,2255,3.252,2256,4.873,2257,3.252,2258,3.252,2259,3.252,2260,3.252,2261,6.49,2262,3.252,2263,4.873,2264,3.252,2265,3.252,2266,3.252,2267,3.252,2268,3.252,2269,3.252,2270,3.252,2271,3.252,2272,3.252,2273,3.252,2274,3.252,2275,3.252,2276,3.252,2277,3.252,2278,3.252,2279,3.252,2280,3.252,2281,3.252,2282,3.252,2283,3.252,2284,3.252,2285,4.873,2286,6.49,2287,4.873,2288,4.873,2289,4.873,2290,4.873,2291,4.873,2292,4.873,2293,3.252,2294,3.252]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"injectables/CpuHealthIndicator.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"modules/FilerModule.html":{},"injectables/FilerService.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/HealthCheckService.html":{},"classes/Image.html":{},"classes/Image-1.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MailjetModule.html":{},"injectables/MailjetService.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"modules/PayementModule.html":{},"injectables/PayementService.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume.html":{},"classes/Resume-1.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdatePwdDto.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/sendFiileDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":753,"title":{},"body":{"interfaces/CustomValidationArguments.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"coverage.html":{},"index.html":{}}}],["0.0.1",{"_index":2215,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":2132,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":2110,"title":{},"body":{"dependencies.html":{}}}],["0.2.11",{"_index":2097,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":2116,"title":{},"body":{"dependencies.html":{}}}],["0.30.3",{"_index":2105,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":907,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["0.5.1",{"_index":2109,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2126,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2027,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2057,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2034,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2076,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2054,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2053,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2029,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2032,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":114,"title":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message-1.html":{},"classes/Post-1.html":{},"classes/PostExtra-1.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks-1.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/Resume-1.html":{},"classes/User-1.html":{}},"body":{"injectables/PayementService.html":{},"injectables/PrismaHealthIndicator.html":{}}}],["1.0.0",{"_index":2123,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2112,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":2101,"title":{},"body":{"dependencies.html":{}}}],["1.52.1",{"_index":2094,"title":{},"body":{"dependencies.html":{}}}],["1/15",{"_index":2059,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2051,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2056,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1098,"title":{},"body":{"injectables/MessengerService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.2",{"_index":2085,"title":{},"body":{"dependencies.html":{}}}],["1024",{"_index":911,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["11",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"injectables/PayementService.html":{},"coverage.html":{}}}],["11.0.0",{"_index":2084,"title":{},"body":{"dependencies.html":{}}}],["12.5.0",{"_index":2134,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":2212,"title":{},"body":{"overview.html":{}}}],["14",{"_index":2055,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"injectables/PayementService.html":{}}}],["16",{"_index":2050,"title":{},"body":{"coverage.html":{}}}],["16.6.0",{"_index":2115,"title":{},"body":{"dependencies.html":{}}}],["1684247686",{"_index":1615,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["1684248753",{"_index":1644,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["18",{"_index":2213,"title":{},"body":{"overview.html":{}}}],["2",{"_index":807,"title":{"classes/Profile-2.html":{}},"body":{"injectables/FilerService.html":{},"overview.html":{}}}],["2.0.0",{"_index":2079,"title":{},"body":{"dependencies.html":{}}}],["2.0.6",{"_index":2130,"title":{},"body":{"dependencies.html":{}}}],["2.1330.0",{"_index":2106,"title":{},"body":{"dependencies.html":{}}}],["2.29.4",{"_index":2122,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2082,"title":{},"body":{"dependencies.html":{}}}],["2.30.0",{"_index":2113,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":2099,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":2108,"title":{},"body":{"dependencies.html":{}}}],["2/18",{"_index":2036,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":719,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["20)@apiproperty",{"_index":705,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["201",{"_index":1231,"title":{},"body":{"injectables/PayementService.html":{}}}],["2022",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"injectables/PayementService.html":{}}}],["25",{"_index":670,"title":{},"body":{"classes/CreateProFocusDto.html":{}}}],["3.0.1",{"_index":2118,"title":{},"body":{"dependencies.html":{}}}],["3.0.8",{"_index":2103,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":910,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["3011",{"_index":2174,"title":{},"body":{"index.html":{}}}],["3012",{"_index":2176,"title":{},"body":{"index.html":{}}}],["4.0.1",{"_index":2127,"title":{},"body":{"dependencies.html":{}}}],["4.10.1",{"_index":2128,"title":{},"body":{"dependencies.html":{}}}],["4.11.0",{"_index":2090,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2120,"title":{},"body":{"dependencies.html":{}}}],["409",{"_index":1573,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["413",{"_index":958,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ResumesService.html":{}}}],["4242880",{"_index":960,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/ResumesService.html":{}}}],["500",{"_index":871,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["6",{"_index":2058,"title":{},"body":{"coverage.html":{}}}],["6.0.2",{"_index":2125,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":2088,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":2133,"title":{},"body":{"dependencies.html":{}}}],["7.39.0",{"_index":2091,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":2214,"title":{},"body":{"overview.html":{}}}],["72",{"_index":1648,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["7z",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":2080,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":2086,"title":{},"body":{"dependencies.html":{}}}],["9.10.2",{"_index":2124,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":2089,"title":{},"body":{"dependencies.html":{}}}],["9\\s]/g",{"_index":1557,"title":{},"body":{"injectables/PostService.html":{}}}],["_activity",{"_index":117,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_bookmarks",{"_index":123,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_conversation",{"_index":120,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_emailchange",{"_index":136,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_emailverification",{"_index":133,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_gen/prisma",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostsResponse.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{}}}],["_image",{"_index":129,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_message",{"_index":121,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_post",{"_index":145,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_postextra",{"_index":147,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_profile",{"_index":127,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_profilebookmarks",{"_index":125,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_refreshtoken",{"_index":142,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_resetpassword",{"_index":139,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_resume",{"_index":131,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["_user",{"_index":118,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["access",{"_index":1271,"title":{},"body":{"injectables/PayementService.html":{}}}],["accesskeyid",{"_index":1952,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":1222,"title":{},"body":{"injectables/PayementService.html":{}}}],["acl",{"_index":824,"title":{},"body":{"injectables/FilerService.html":{}}}],["action",{"_index":1288,"title":{},"body":{"injectables/PayementService.html":{}}}],["active",{"_index":1290,"title":{},"body":{"injectables/PayementService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["activities",{"_index":8,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["activities.controller",{"_index":37,"title":{},"body":{"modules/ActivitiesModule.html":{}}}],["activities.service",{"_index":13,"title":{},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{}}}],["activities/activities.module",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["activities/activities.service",{"_index":1695,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["activitiescontroller",{"_index":1,"title":{"controllers/ActivitiesController.html":{}},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"coverage.html":{}}}],["activitiesmodule",{"_index":22,"title":{"modules/ActivitiesModule.html":{}},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["activitiesservice",{"_index":12,"title":{"injectables/ActivitiesService.html":{}},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["activity",{"_index":71,"title":{"classes/Activity.html":{},"classes/Activity-1.html":{}},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activity.dto",{"_index":67,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/ProfileService.html":{}}}],["activity.dto.ts",{"_index":593,"title":{},"body":{"classes/CreateActivityDto.html":{},"coverage.html":{}}}],["activity.dto.ts:10",{"_index":598,"title":{},"body":{"classes/CreateActivityDto.html":{}}}],["activity.dto.ts:6",{"_index":597,"title":{},"body":{"classes/CreateActivityDto.html":{}}}],["activity.dto.ts:8",{"_index":595,"title":{},"body":{"classes/CreateActivityDto.html":{}}}],["activityservice",{"_index":1713,"title":{},"body":{"injectables/ProfileService.html":{}}}],["actual",{"_index":1947,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["add",{"_index":1783,"title":{},"body":{"injectables/ProfileService.html":{}}}],["addhours",{"_index":1212,"title":{},"body":{"injectables/PayementService.html":{}}}],["addimage",{"_index":1311,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["addimage(file",{"_index":1319,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["additional",{"_index":737,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["address",{"_index":621,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/SetUserSettingsDto.html":{},"classes/User-1.html":{}}}],["address'})@isoptional",{"_index":1436,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["aliases",{"_index":2220,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed_countries",{"_index":554,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["allowedfiletypes",{"_index":1087,"title":{},"body":{"injectables/MessengerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allowedfiletypes.includes(file.mimetype",{"_index":1103,"title":{},"body":{"injectables/MessengerService.html":{}}}],["already",{"_index":1538,"title":{},"body":{"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["always",{"_index":1945,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["amount",{"_index":1229,"title":{},"body":{"injectables/PayementService.html":{}}}],["apibadrequestresponse",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{}}}],["apibearerauth('jwt",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{}}}],["apibody",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiconflictresponse",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{}}}],["apicreatedresponse",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiimagefile",{"_index":1370,"title":{},"body":{"controllers/PostController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiimagefile('image",{"_index":1389,"title":{},"body":{"controllers/PostController.html":{}}}],["apiimagefile(filename",{"_index":2145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apikey",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailjetService.html":{}}}],["apinotfoundresponse",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiokresponse",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{}}}],["apiokresponse({description",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{}}}],["apipdffile",{"_index":1053,"title":{},"body":{"controllers/MessengerController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apipdffile(['document",{"_index":1066,"title":{},"body":{"controllers/MessengerController.html":{}}}],["apipdffile(['document'])@apiokresponse({type",{"_index":1042,"title":{},"body":{"controllers/MessengerController.html":{}}}],["apipdffile(filenames",{"_index":2146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apiproperty",{"_index":110,"title":{},"body":{"classes/Activity.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/HandleChangeEmailDto.html":{},"classes/Image.html":{},"classes/Message-1.html":{},"classes/PaginationDto.html":{},"classes/Post-1.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks-1.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume-1.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/UpdatePwdDto.html":{},"classes/User-1.html":{},"classes/sendFiileDto.html":{}}}],["apiproperty()@isemail",{"_index":490,"title":{},"body":{"classes/ChangeEmailDto.html":{}}}],["apiproperty()@isstring",{"_index":492,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/SendMessageDto.html":{}}}],["apiproperty()@isstring({each",{"_index":668,"title":{},"body":{"classes/CreateProFocusDto.html":{},"classes/DeleteUserGalleryDto.html":{}}}],["apiproperty()@isuuid",{"_index":469,"title":{},"body":{"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/CreatePayementDto.html":{},"classes/SendMessageDto.html":{},"classes/sendFiileDto.html":{}}}],["apiproperty({description",{"_index":1610,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["apiproperty({enum",{"_index":634,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"classes/PostExtra-1.html":{},"classes/User-1.html":{}}}],["apiproperty({isarray",{"_index":565,"title":{},"body":{"classes/Conversation.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostsResponse.html":{},"classes/Post-1.html":{},"classes/User-1.html":{}}}],["apiproperty({required",{"_index":842,"title":{},"body":{"classes/GetPostDto.html":{},"classes/GetUserDto.html":{},"classes/HandleChangeEmailDto.html":{},"classes/PaginationDto.html":{},"classes/PostFilterDto.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["apiproperty({type",{"_index":100,"title":{},"body":{"classes/Activity.html":{},"classes/Bookmarks.html":{},"classes/Conversation.html":{},"classes/CreatePostDto.html":{},"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"classes/Image.html":{},"classes/Message-1.html":{},"classes/Post-1.html":{},"classes/PostExtra-1.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks-1.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/Resume-1.html":{},"classes/User-1.html":{}}}],["apipropertyoptional",{"_index":111,"title":{},"body":{"classes/Activity.html":{},"classes/Conversation.html":{},"classes/CreateActivityDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/Image.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"classes/Profile-2.html":{},"classes/Resume-1.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/User-1.html":{}}}],["apipropertyoptional()@iscompanynamevalid",{"_index":701,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apipropertyoptional()@isenum(industry)@isoptional",{"_index":594,"title":{},"body":{"classes/CreateActivityDto.html":{}}}],["apipropertyoptional()@isenum(job)@isoptional",{"_index":596,"title":{},"body":{"classes/CreateActivityDto.html":{}}}],["apipropertyoptional()@isoptional()@isenum(tags",{"_index":686,"title":{},"body":{"classes/CreateTagsDto.html":{}}}],["apipropertyoptional()@isoptional()@isstring",{"_index":1904,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["apipropertyoptional({enum",{"_index":102,"title":{},"body":{"classes/Activity.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"classes/Profile-2.html":{}}}],["apipropertyoptional({isarray",{"_index":639,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PostFilterDto.html":{}}}],["apipropertyoptional({type",{"_index":106,"title":{},"body":{"classes/Activity.html":{},"classes/Conversation.html":{},"classes/CreatePostDto.html":{},"classes/Image.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"classes/Profile-2.html":{},"classes/Resume-1.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/User-1.html":{}}}],["apisecret",{"_index":990,"title":{},"body":{"injectables/MailjetService.html":{}}}],["apitags",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{}}}],["apitags('login",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('login')@apibearerauth('jwt",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('login')@useguards(undefined)@post('logout",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('messenger",{"_index":1056,"title":{},"body":{"controllers/MessengerController.html":{}}}],["apitags('payement",{"_index":1180,"title":{},"body":{"controllers/PayementController.html":{}}}],["apitags('posts",{"_index":1380,"title":{},"body":{"controllers/PostController.html":{}}}],["apitags('register",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('register')@apicreatedresponse({description",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('reset",{"_index":421,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('user",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiunauthorizedresponse",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiversion",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"injectables/PayementService.html":{}}}],["app",{"_index":1597,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.close",{"_index":1599,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":158,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":153,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application/javascript",{"_index":2266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/json",{"_index":2270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/msword",{"_index":2234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/pdf",{"_index":1777,"title":{},"body":{"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["application/sql",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/typescript",{"_index":2267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.ms",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.openxmlformats",{"_index":2235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/x",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/xml",{"_index":2269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/zip",{"_index":2260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":160,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":157,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argon2",{"_index":2104,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":747,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["args.object['usertype",{"_index":748,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["argumentshost",{"_index":862,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["array",{"_index":1040,"title":{},"body":{"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["arrayofuploadedresumes",{"_index":1772,"title":{},"body":{"injectables/ProfileService.html":{}}}],["arrayofuploadedresumes.map((resume",{"_index":1789,"title":{},"body":{"injectables/ProfileService.html":{}}}],["arrayofuploadedresumes.push(res",{"_index":1786,"title":{},"body":{"injectables/ProfileService.html":{}}}],["arrayofuploadedresumes.push(resume",{"_index":1785,"title":{},"body":{"injectables/ProfileService.html":{}}}],["asc",{"_index":1095,"title":{},"body":{"injectables/MessengerService.html":{}}}],["associated",{"_index":1625,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["assuming",{"_index":1270,"title":{},"body":{"injectables/PayementService.html":{}}}],["async",{"_index":44,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/CpuHealthIndicator.html":{},"injectables/FilerService.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["atstrategy",{"_index":210,"title":{"injectables/AtStrategy.html":{}},"body":{"injectables/AtStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["attributes",{"_index":1602,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["audio/midi",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":2251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":232,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{},"coverage.html":{}}}],["auth')@apiokresponse({description",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth')@apiokresponse({type",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth')@apitags('user')@get('/getuser",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth')@apitags('user')@get('/getuser/:id",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth')@apiunauthorizedresponse({description",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth')@useguards(undefined)@apiokresponse({type",{"_index":1320,"title":{},"body":{"controllers/PostController.html":{}}}],["auth')@useguards(undefined)@httpcode(200)@apiokresponse({description",{"_index":1036,"title":{},"body":{"controllers/MessengerController.html":{}}}],["auth')@useguards(undefined)@httpcode(200)@apiokresponse({type",{"_index":1029,"title":{},"body":{"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{}}}],["auth')@useguards(undefined)@post('refresh",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"classes/UpdateAuthDto.html":{}}}],["auth.dto.ts",{"_index":604,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["auth.dto.ts:5",{"_index":606,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.dto.ts:6",{"_index":607,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.service",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/decorators/current",{"_index":1049,"title":{},"body":{"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{}}}],["authcontroller",{"_index":234,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticatedfileupload",{"_index":2067,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["authenticatedfileupload(fieldname",{"_index":2151,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authenticatedfileupload2",{"_index":2068,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["authenticatedfileupload2(fieldnames",{"_index":2154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authguard",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{}}}],["authmodule",{"_index":164,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1006,"title":{},"body":{"classes/Message-1.html":{},"injectables/MessengerService.html":{},"properties.html":{}}}],["authorid",{"_index":1007,"title":{},"body":{"classes/Message-1.html":{},"injectables/MessengerService.html":{}}}],["authservice",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":521,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["available",{"_index":1649,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["avoid",{"_index":805,"title":{},"body":{"injectables/FilerService.html":{}}}],["await",{"_index":72,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["aws",{"_index":799,"title":{},"body":{"injectables/FilerService.html":{},"interfaces/UploadedMulterFileI.html":{},"dependencies.html":{}}}],["aws.awserror",{"_index":829,"title":{},"body":{"injectables/FilerService.html":{}}}],["aws.credentials",{"_index":1951,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["aws.endpoint('fra1.digitaloceanspaces.com",{"_index":1949,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["aws.s3",{"_index":789,"title":{},"body":{"injectables/FilerService.html":{},"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["aws.s3.putobjectrequest",{"_index":819,"title":{},"body":{"injectables/FilerService.html":{}}}],["backend",{"_index":2167,"title":{},"body":{"index.html":{}}}],["bad",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PostService.html":{}}}],["badrequestexception",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MessengerService.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["badrequestexception('body",{"_index":1803,"title":{},"body":{"injectables/ProfileService.html":{}}}],["badrequestexception('file",{"_index":1105,"title":{},"body":{"injectables/MessengerService.html":{}}}],["badrequestexception('no",{"_index":1102,"title":{},"body":{"injectables/MessengerService.html":{}}}],["badrequestexception('not",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception('post",{"_index":1542,"title":{},"body":{"injectables/PostService.html":{}}}],["badrequestexception(`check",{"_index":1104,"title":{},"body":{"injectables/MessengerService.html":{},"injectables/ProfileService.html":{}}}],["base",{"_index":1762,"title":{},"body":{"injectables/ProfileService.html":{}}}],["based",{"_index":425,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{}}}],["baseexceptionfilter",{"_index":1559,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["batch",{"_index":1787,"title":{},"body":{"injectables/ProfileService.html":{}}}],["bcryptjs",{"_index":2107,"title":{},"body":{"dependencies.html":{}}}],["be.ccdev.space",{"_index":2171,"title":{},"body":{"index.html":{}}}],["before",{"_index":1139,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["best",{"_index":2196,"title":{},"body":{"index.html":{}}}],["billing_address_collection",{"_index":503,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["binary",{"_index":2291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bio",{"_index":610,"title":{},"body":{"classes/CreateBioDto.html":{},"classes/Profile-2.html":{},"injectables/ProfileService.html":{}}}],["bio.dto",{"_index":1749,"title":{},"body":{"injectables/ProfileService.html":{}}}],["bio.dto.ts",{"_index":609,"title":{},"body":{"classes/CreateBioDto.html":{},"coverage.html":{}}}],["bio.dto.ts:5",{"_index":611,"title":{},"body":{"classes/CreateBioDto.html":{}}}],["birthdate",{"_index":692,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User-1.html":{}}}],["body",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{},"injectables/FilerService.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/ProfileService.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["body.tag_1",{"_index":1805,"title":{},"body":{"injectables/ProfileService.html":{}}}],["body.tag_2",{"_index":1806,"title":{},"body":{"injectables/ProfileService.html":{}}}],["body.tag_3",{"_index":1807,"title":{},"body":{"injectables/ProfileService.html":{}}}],["book",{"_index":546,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["bookmark",{"_index":1327,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["bookmarkdto",{"_index":466,"title":{"classes/BookmarkDto.html":{}},"body":{"classes/BookmarkDto.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"coverage.html":{}}}],["bookmarkdto.postid",{"_index":1503,"title":{},"body":{"injectables/PostService.html":{}}}],["bookmarked",{"_index":1463,"title":{},"body":{"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["bookmarkeduser",{"_index":1677,"title":{},"body":{"classes/ProfileBookmarks-1.html":{},"injectables/ProfileService.html":{}}}],["bookmarkeduserid",{"_index":477,"title":{},"body":{"classes/BookmarkProfileDto.html":{},"classes/ProfileBookmarks-1.html":{},"injectables/ProfileService.html":{}}}],["bookmarkedusers",{"_index":1962,"title":{},"body":{"classes/User-1.html":{}}}],["bookmarkinguser",{"_index":1678,"title":{},"body":{"classes/ProfileBookmarks-1.html":{}}}],["bookmarkinguserid",{"_index":1679,"title":{},"body":{"classes/ProfileBookmarks-1.html":{},"injectables/ProfileService.html":{}}}],["bookmarkinguserid_bookmarkeduserid",{"_index":1820,"title":{},"body":{"injectables/ProfileService.html":{}}}],["bookmarkingusers",{"_index":1963,"title":{},"body":{"classes/User-1.html":{}}}],["bookmarkpost",{"_index":1312,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["bookmarkpost(@currentuser",{"_index":1400,"title":{},"body":{"controllers/PostController.html":{}}}],["bookmarkpost(user",{"_index":1324,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["bookmarkprofile",{"_index":1697,"title":{},"body":{"injectables/ProfileService.html":{}}}],["bookmarkprofile(user",{"_index":1715,"title":{},"body":{"injectables/ProfileService.html":{}}}],["bookmarkprofiledto",{"_index":474,"title":{"classes/BookmarkProfileDto.html":{}},"body":{"classes/BookmarkProfileDto.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["bookmarkprofiledto.bookmarkeduserid",{"_index":1818,"title":{},"body":{"injectables/ProfileService.html":{}}}],["bookmarks",{"_index":122,"title":{"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{}},"body":{"classes/Activity-1.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/GetBookmarksResponse.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra.html":{},"injectables/PostService.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookmarks})@delete('/bookmark",{"_index":1332,"title":{},"body":{"controllers/PostController.html":{}}}],["bookmarks})@post('/bookmark",{"_index":1325,"title":{},"body":{"controllers/PostController.html":{}}}],["boolean",{"_index":795,"title":{},"body":{"injectables/FilerService.html":{},"classes/Image.html":{},"injectables/ImagesService.html":{},"classes/Message-1.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/User-1.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":27,"title":{},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilerModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"modules/MailjetModule.html":{},"modules/MessengerModule.html":{},"modules/PayementModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1285,"title":{},"body":{"injectables/PayementService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["browse",{"_index":2210,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2207,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":820,"title":{},"body":{"injectables/FilerService.html":{}}}],["buffer",{"_index":1933,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["call",{"_index":1516,"title":{},"body":{"injectables/PostService.html":{}}}],["callhandler",{"_index":1117,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["canactivate",{"_index":2002,"title":{},"body":{"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["canactivate(context",{"_index":2004,"title":{},"body":{"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["cancel_url",{"_index":504,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["card",{"_index":1242,"title":{},"body":{"injectables/PayementService.html":{}}}],["case",{"_index":1277,"title":{},"body":{"injectables/PayementService.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["catch",{"_index":859,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"injectables/PayementService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{}}}],["catch(exception",{"_index":860,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["catch(prisma.prismaclientknownrequesterror",{"_index":1563,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["cb",{"_index":2279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb(new",{"_index":2283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb(null",{"_index":2282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ccd3vteam",{"_index":2180,"title":{},"body":{"index.html":{}}}],["ccdev",{"_index":2179,"title":{},"body":{"index.html":{}}}],["change",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{},"classes/HandleChangeEmailDto.html":{},"coverage.html":{}}}],["changeemail",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["changeemail(user",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["changeemaildto",{"_index":249,"title":{"classes/ChangeEmailDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ChangeEmailDto.html":{},"coverage.html":{}}}],["changeemaildto.newemail",{"_index":451,"title":{},"body":{"controllers/AuthController.html":{}}}],["changeemaildto.password",{"_index":450,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassworddto",{"_index":265,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["changepwd",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepwd(user",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["check",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/ProfileService.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"miscellaneous/variables.html":{}}}],["check.controller",{"_index":918,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.controller.ts",{"_index":882,"title":{},"body":{"controllers/HealthCheckController.html":{},"coverage.html":{}}}],["check.controller.ts:28",{"_index":885,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.module",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["check.module.ts",{"_index":916,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.service",{"_index":917,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.service.ts",{"_index":919,"title":{},"body":{"injectables/HealthCheckService.html":{},"coverage.html":{}}}],["check/cpu",{"_index":577,"title":{},"body":{"injectables/CpuHealthIndicator.html":{},"coverage.html":{}}}],["check/health",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/HealthCheckService.html":{},"coverage.html":{}}}],["check/prisma",{"_index":1575,"title":{},"body":{"injectables/PrismaHealthIndicator.html":{},"coverage.html":{}}}],["checkhealth",{"_index":883,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["checking",{"_index":955,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ResumesService.html":{}}}],["checkout",{"_index":1259,"title":{},"body":{"injectables/PayementService.html":{}}}],["checkout.session",{"_index":553,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["checkout.session.completed",{"_index":1278,"title":{},"body":{"injectables/PayementService.html":{}}}],["checkoutsession",{"_index":501,"title":{"classes/CheckoutSession.html":{}},"body":{"classes/CheckoutSession.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"coverage.html":{}}}],["checkoutsession.metadata",{"_index":1281,"title":{},"body":{"injectables/PayementService.html":{}}}],["checkoutsession.metadata['postid",{"_index":1282,"title":{},"body":{"injectables/PayementService.html":{}}}],["checkoutsession.metadata['productid",{"_index":1283,"title":{},"body":{"injectables/PayementService.html":{}}}],["checkoutsession.metadata['userid",{"_index":1284,"title":{},"body":{"injectables/PayementService.html":{}}}],["checkoutsession.payment_status",{"_index":1280,"title":{},"body":{"injectables/PayementService.html":{}}}],["checkoutsession})@post",{"_index":1164,"title":{},"body":{"controllers/PayementController.html":{}}}],["ci",{"_index":2117,"title":{},"body":{"dependencies.html":{}}}],["class",{"_index":16,"title":{"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/Auth.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"classes/Image.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"classes/PaginationDto.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"classes/PostExtra.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume.html":{},"classes/Resume-1.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdatePwdDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/sendFiileDto.html":{}},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"injectables/CpuHealthIndicator.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"modules/FilerModule.html":{},"injectables/FilerService.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/HealthCheckService.html":{},"classes/Image.html":{},"classes/Image-1.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MailjetModule.html":{},"injectables/MailjetService.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"modules/PayementModule.html":{},"injectables/PayementService.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume.html":{},"classes/Resume-1.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdatePwdDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"coverage.html":{},"dependencies.html":{},"classes/sendFiileDto.html":{}}}],["class/activity.ts",{"_index":96,"title":{},"body":{"classes/Activity.html":{},"coverage.html":{}}}],["class/activity.ts:10",{"_index":105,"title":{},"body":{"classes/Activity.html":{}}}],["class/activity.ts:13",{"_index":104,"title":{},"body":{"classes/Activity.html":{}}}],["class/activity.ts:16",{"_index":107,"title":{},"body":{"classes/Activity.html":{}}}],["class/activity.ts:19",{"_index":108,"title":{},"body":{"classes/Activity.html":{}}}],["class/activity.ts:22",{"_index":109,"title":{},"body":{"classes/Activity.html":{}}}],["class/activity.ts:7",{"_index":101,"title":{},"body":{"classes/Activity.html":{}}}],["class/bookmarks",{"_index":839,"title":{},"body":{"classes/GetBookmarksResponse.html":{},"controllers/PostController.html":{}}}],["class/bookmarks.ts",{"_index":479,"title":{},"body":{"classes/Bookmarks.html":{},"coverage.html":{}}}],["class/bookmarks.ts:10",{"_index":484,"title":{},"body":{"classes/Bookmarks.html":{}}}],["class/bookmarks.ts:13",{"_index":485,"title":{},"body":{"classes/Bookmarks.html":{}}}],["class/bookmarks.ts:16",{"_index":486,"title":{},"body":{"classes/Bookmarks.html":{}}}],["class/bookmarks.ts:19",{"_index":482,"title":{},"body":{"classes/Bookmarks.html":{}}}],["class/bookmarks.ts:7",{"_index":483,"title":{},"body":{"classes/Bookmarks.html":{}}}],["class/conversation",{"_index":1052,"title":{},"body":{"controllers/MessengerController.html":{}}}],["class/conversation.ts",{"_index":556,"title":{},"body":{"classes/Conversation.html":{},"coverage.html":{}}}],["class/conversation.ts:10",{"_index":568,"title":{},"body":{"classes/Conversation.html":{}}}],["class/conversation.ts:13",{"_index":567,"title":{},"body":{"classes/Conversation.html":{}}}],["class/conversation.ts:16",{"_index":570,"title":{},"body":{"classes/Conversation.html":{}}}],["class/conversation.ts:19",{"_index":571,"title":{},"body":{"classes/Conversation.html":{}}}],["class/conversation.ts:22",{"_index":572,"title":{},"body":{"classes/Conversation.html":{}}}],["class/conversation.ts:25",{"_index":573,"title":{},"body":{"classes/Conversation.html":{}}}],["class/conversation.ts:28",{"_index":563,"title":{},"body":{"classes/Conversation.html":{}}}],["class/conversation.ts:31",{"_index":569,"title":{},"body":{"classes/Conversation.html":{}}}],["class/conversation.ts:7",{"_index":564,"title":{},"body":{"classes/Conversation.html":{}}}],["class/email_change.ts",{"_index":762,"title":{},"body":{"classes/EmailChange.html":{},"coverage.html":{}}}],["class/email_change.ts:12",{"_index":769,"title":{},"body":{"classes/EmailChange.html":{}}}],["class/email_change.ts:15",{"_index":770,"title":{},"body":{"classes/EmailChange.html":{}}}],["class/email_change.ts:18",{"_index":765,"title":{},"body":{"classes/EmailChange.html":{}}}],["class/email_change.ts:21",{"_index":764,"title":{},"body":{"classes/EmailChange.html":{}}}],["class/email_change.ts:6",{"_index":767,"title":{},"body":{"classes/EmailChange.html":{}}}],["class/email_change.ts:9",{"_index":768,"title":{},"body":{"classes/EmailChange.html":{}}}],["class/email_verification.ts",{"_index":771,"title":{},"body":{"classes/EmailVerification.html":{},"coverage.html":{}}}],["class/email_verification.ts:12",{"_index":776,"title":{},"body":{"classes/EmailVerification.html":{}}}],["class/email_verification.ts:15",{"_index":773,"title":{},"body":{"classes/EmailVerification.html":{}}}],["class/email_verification.ts:18",{"_index":772,"title":{},"body":{"classes/EmailVerification.html":{}}}],["class/email_verification.ts:6",{"_index":774,"title":{},"body":{"classes/EmailVerification.html":{}}}],["class/email_verification.ts:9",{"_index":775,"title":{},"body":{"classes/EmailVerification.html":{}}}],["class/image",{"_index":1371,"title":{},"body":{"controllers/PostController.html":{}}}],["class/image.ts",{"_index":920,"title":{},"body":{"classes/Image.html":{},"coverage.html":{}}}],["class/image.ts:11",{"_index":931,"title":{},"body":{"classes/Image.html":{}}}],["class/image.ts:14",{"_index":929,"title":{},"body":{"classes/Image.html":{}}}],["class/image.ts:17",{"_index":930,"title":{},"body":{"classes/Image.html":{}}}],["class/image.ts:20",{"_index":926,"title":{},"body":{"classes/Image.html":{}}}],["class/image.ts:23",{"_index":932,"title":{},"body":{"classes/Image.html":{}}}],["class/image.ts:5",{"_index":927,"title":{},"body":{"classes/Image.html":{}}}],["class/image.ts:8",{"_index":928,"title":{},"body":{"classes/Image.html":{}}}],["class/index.ts",{"_index":115,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class/message.ts",{"_index":1005,"title":{},"body":{"classes/Message-1.html":{},"coverage.html":{}}}],["class/message.ts:10",{"_index":1018,"title":{},"body":{"classes/Message-1.html":{}}}],["class/message.ts:13",{"_index":1017,"title":{},"body":{"classes/Message-1.html":{}}}],["class/message.ts:16",{"_index":1015,"title":{},"body":{"classes/Message-1.html":{}}}],["class/message.ts:19",{"_index":1011,"title":{},"body":{"classes/Message-1.html":{}}}],["class/message.ts:22",{"_index":1010,"title":{},"body":{"classes/Message-1.html":{}}}],["class/message.ts:25",{"_index":1012,"title":{},"body":{"classes/Message-1.html":{}}}],["class/message.ts:28",{"_index":1013,"title":{},"body":{"classes/Message-1.html":{}}}],["class/message.ts:31",{"_index":1014,"title":{},"body":{"classes/Message-1.html":{}}}],["class/message.ts:34",{"_index":1019,"title":{},"body":{"classes/Message-1.html":{}}}],["class/message.ts:7",{"_index":1016,"title":{},"body":{"classes/Message-1.html":{}}}],["class/post",{"_index":852,"title":{},"body":{"classes/GetPostsResponse.html":{},"controllers/PostController.html":{}}}],["class/post.ts",{"_index":1291,"title":{},"body":{"classes/Post-1.html":{},"coverage.html":{}}}],["class/post.ts:11",{"_index":1306,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:14",{"_index":1304,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:17",{"_index":1295,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:20",{"_index":1305,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:23",{"_index":1296,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:26",{"_index":1298,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:29",{"_index":1301,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:32",{"_index":1302,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:35",{"_index":1292,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:38",{"_index":1294,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:41",{"_index":1300,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:44",{"_index":1303,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:47",{"_index":1297,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:50",{"_index":1308,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:53",{"_index":1307,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:56",{"_index":1293,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post.ts:8",{"_index":1299,"title":{},"body":{"classes/Post-1.html":{}}}],["class/post_extra.ts",{"_index":1420,"title":{},"body":{"classes/PostExtra-1.html":{},"coverage.html":{}}}],["class/post_extra.ts:6",{"_index":1423,"title":{},"body":{"classes/PostExtra-1.html":{}}}],["class/post_extra.ts:9",{"_index":1422,"title":{},"body":{"classes/PostExtra-1.html":{}}}],["class/professional_focus.ts",{"_index":1657,"title":{},"body":{"classes/ProfessionalFocus.html":{},"coverage.html":{}}}],["class/professional_focus.ts:12",{"_index":1660,"title":{},"body":{"classes/ProfessionalFocus.html":{}}}],["class/professional_focus.ts:15",{"_index":1661,"title":{},"body":{"classes/ProfessionalFocus.html":{}}}],["class/professional_focus.ts:6",{"_index":1659,"title":{},"body":{"classes/ProfessionalFocus.html":{}}}],["class/professional_focus.ts:9",{"_index":1658,"title":{},"body":{"classes/ProfessionalFocus.html":{}}}],["class/profile.ts",{"_index":1663,"title":{},"body":{"classes/Profile-2.html":{},"coverage.html":{}}}],["class/profile.ts:11",{"_index":1669,"title":{},"body":{"classes/Profile-2.html":{}}}],["class/profile.ts:14",{"_index":1667,"title":{},"body":{"classes/Profile-2.html":{}}}],["class/profile.ts:17",{"_index":1666,"title":{},"body":{"classes/Profile-2.html":{}}}],["class/profile.ts:20",{"_index":1671,"title":{},"body":{"classes/Profile-2.html":{}}}],["class/profile.ts:23",{"_index":1672,"title":{},"body":{"classes/Profile-2.html":{}}}],["class/profile.ts:26",{"_index":1673,"title":{},"body":{"classes/Profile-2.html":{}}}],["class/profile.ts:29",{"_index":1674,"title":{},"body":{"classes/Profile-2.html":{}}}],["class/profile.ts:32",{"_index":1675,"title":{},"body":{"classes/Profile-2.html":{}}}],["class/profile.ts:35",{"_index":1670,"title":{},"body":{"classes/Profile-2.html":{}}}],["class/profile.ts:8",{"_index":1668,"title":{},"body":{"classes/Profile-2.html":{}}}],["class/profile_bookmarks.ts",{"_index":1676,"title":{},"body":{"classes/ProfileBookmarks-1.html":{},"coverage.html":{}}}],["class/profile_bookmarks.ts:12",{"_index":1680,"title":{},"body":{"classes/ProfileBookmarks-1.html":{}}}],["class/profile_bookmarks.ts:15",{"_index":1681,"title":{},"body":{"classes/ProfileBookmarks-1.html":{}}}],["class/profile_bookmarks.ts:18",{"_index":1684,"title":{},"body":{"classes/ProfileBookmarks-1.html":{}}}],["class/profile_bookmarks.ts:6",{"_index":1682,"title":{},"body":{"classes/ProfileBookmarks-1.html":{}}}],["class/profile_bookmarks.ts:9",{"_index":1683,"title":{},"body":{"classes/ProfileBookmarks-1.html":{}}}],["class/refresh_token.ts",{"_index":1826,"title":{},"body":{"classes/RefreshToken-1.html":{},"coverage.html":{}}}],["class/refresh_token.ts:12",{"_index":1831,"title":{},"body":{"classes/RefreshToken-1.html":{}}}],["class/refresh_token.ts:15",{"_index":1828,"title":{},"body":{"classes/RefreshToken-1.html":{}}}],["class/refresh_token.ts:18",{"_index":1827,"title":{},"body":{"classes/RefreshToken-1.html":{}}}],["class/refresh_token.ts:6",{"_index":1829,"title":{},"body":{"classes/RefreshToken-1.html":{}}}],["class/refresh_token.ts:9",{"_index":1830,"title":{},"body":{"classes/RefreshToken-1.html":{}}}],["class/reset_password.ts",{"_index":1832,"title":{},"body":{"classes/ResetPassword-1.html":{},"coverage.html":{}}}],["class/reset_password.ts:12",{"_index":1837,"title":{},"body":{"classes/ResetPassword-1.html":{}}}],["class/reset_password.ts:15",{"_index":1834,"title":{},"body":{"classes/ResetPassword-1.html":{}}}],["class/reset_password.ts:18",{"_index":1833,"title":{},"body":{"classes/ResetPassword-1.html":{}}}],["class/reset_password.ts:6",{"_index":1835,"title":{},"body":{"classes/ResetPassword-1.html":{}}}],["class/reset_password.ts:9",{"_index":1836,"title":{},"body":{"classes/ResetPassword-1.html":{}}}],["class/resume.ts",{"_index":1839,"title":{},"body":{"classes/Resume-1.html":{},"coverage.html":{}}}],["class/resume.ts:11",{"_index":1840,"title":{},"body":{"classes/Resume-1.html":{}}}],["class/resume.ts:14",{"_index":1842,"title":{},"body":{"classes/Resume-1.html":{}}}],["class/resume.ts:5",{"_index":1841,"title":{},"body":{"classes/Resume-1.html":{}}}],["class/resume.ts:8",{"_index":1843,"title":{},"body":{"classes/Resume-1.html":{}}}],["class/user",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{}}}],["class/user.ts",{"_index":1961,"title":{},"body":{"classes/User-1.html":{},"coverage.html":{}}}],["class/user.ts:100",{"_index":1969,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:16",{"_index":1982,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:19",{"_index":1976,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:22",{"_index":1980,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:25",{"_index":1983,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:28",{"_index":1981,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:31",{"_index":1996,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:34",{"_index":1968,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:37",{"_index":1967,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:40",{"_index":1972,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:43",{"_index":1987,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:46",{"_index":1986,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:49",{"_index":1975,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:52",{"_index":1992,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:55",{"_index":1978,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:58",{"_index":1979,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:61",{"_index":1990,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:64",{"_index":1991,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:67",{"_index":1989,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:70",{"_index":1997,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:73",{"_index":1994,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:76",{"_index":1985,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:79",{"_index":1977,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:82",{"_index":1988,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:85",{"_index":1971,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:88",{"_index":1973,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:91",{"_index":1974,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:94",{"_index":1984,"title":{},"body":{"classes/User-1.html":{}}}],["class/user.ts:97",{"_index":1970,"title":{},"body":{"classes/User-1.html":{}}}],["classes",{"_index":94,"title":{},"body":{"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/Auth.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"classes/Image.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"classes/PaginationDto.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"classes/PostExtra.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume.html":{},"classes/Resume-1.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdatePwdDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"overview.html":{},"classes/sendFiileDto.html":{}}}],["client",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailjetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["client_reference_id",{"_index":505,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["cluster_activitiesmodule",{"_index":30,"title":{},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}],["cluster_activitiesmodule_providers",{"_index":31,"title":{},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":455,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":456,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_filermodule",{"_index":777,"title":{},"body":{"modules/FilerModule.html":{},"overview.html":{}}}],["cluster_filermodule_exports",{"_index":779,"title":{},"body":{"modules/FilerModule.html":{},"overview.html":{}}}],["cluster_filermodule_providers",{"_index":778,"title":{},"body":{"modules/FilerModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule",{"_index":914,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule_providers",{"_index":915,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_imagesmodule",{"_index":939,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_imports",{"_index":941,"title":{},"body":{"modules/ImagesModule.html":{}}}],["cluster_imagesmodule_providers",{"_index":940,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_mailjetmodule",{"_index":973,"title":{},"body":{"modules/MailjetModule.html":{},"overview.html":{}}}],["cluster_mailjetmodule_exports",{"_index":974,"title":{},"body":{"modules/MailjetModule.html":{},"overview.html":{}}}],["cluster_mailjetmodule_providers",{"_index":975,"title":{},"body":{"modules/MailjetModule.html":{}}}],["cluster_messengermodule",{"_index":1070,"title":{},"body":{"modules/MessengerModule.html":{},"overview.html":{}}}],["cluster_messengermodule_imports",{"_index":1071,"title":{},"body":{"modules/MessengerModule.html":{}}}],["cluster_messengermodule_providers",{"_index":1072,"title":{},"body":{"modules/MessengerModule.html":{},"overview.html":{}}}],["cluster_payementmodule",{"_index":1187,"title":{},"body":{"modules/PayementModule.html":{},"overview.html":{}}}],["cluster_payementmodule_providers",{"_index":1188,"title":{},"body":{"modules/PayementModule.html":{},"overview.html":{}}}],["cluster_postmodule",{"_index":1448,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_imports",{"_index":1450,"title":{},"body":{"modules/PostModule.html":{}}}],["cluster_postmodule_providers",{"_index":1449,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":1586,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":1587,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":1588,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_profilemodule",{"_index":1685,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1687,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":1686,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1848,"title":{},"body":{"modules/ResumesModule.html":{}}}],["cluster_resumesmodule_imports",{"_index":1849,"title":{},"body":{"modules/ResumesModule.html":{}}}],["cluster_resumesmodule_providers",{"_index":1850,"title":{},"body":{"modules/ResumesModule.html":{}}}],["code",{"_index":1571,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["comes",{"_index":1957,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["comma",{"_index":673,"title":{},"body":{"classes/CreateProFocusDto.html":{}}}],["company",{"_index":1766,"title":{},"body":{"injectables/ProfileService.html":{}}}],["companyname",{"_index":693,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/User-1.html":{}}}],["comparehash",{"_index":2045,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["comparehash(password",{"_index":2156,"title":{},"body":{"miscellaneous/functions.html":{}}}],["comparehashstrings",{"_index":2042,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["comparehashstrings(plain",{"_index":2159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compeletely",{"_index":1814,"title":{},"body":{"injectables/ProfileService.html":{}}}],["complete",{"_index":815,"title":{},"body":{"injectables/FilerService.html":{}}}],["compressed",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conduct",{"_index":2195,"title":{},"body":{"index.html":{}}}],["conflictexception",{"_index":2006,"title":{},"body":{"guards/UserFoundGuard.html":{}}}],["conflictexception('user",{"_index":2013,"title":{},"body":{"guards/UserFoundGuard.html":{}}}],["confluence",{"_index":2190,"title":{},"body":{"index.html":{}}}],["connect",{"_index":82,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["connectorcreate",{"_index":81,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["console.log",{"_index":1136,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["console.log('period",{"_index":1251,"title":{},"body":{"injectables/PayementService.html":{}}}],["console.log('postid",{"_index":1250,"title":{},"body":{"injectables/PayementService.html":{}}}],["console.log(`unhandled",{"_index":1287,"title":{},"body":{"injectables/PayementService.html":{}}}],["console.log(session",{"_index":1245,"title":{},"body":{"injectables/PayementService.html":{}}}],["console.log(where",{"_index":1536,"title":{},"body":{"injectables/PostService.html":{}}}],["const",{"_index":151,"title":{},"body":{"classes/Activity-1.html":{},"controllers/AuthController.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"injectables/CpuHealthIndicator.html":{},"interfaces/CustomValidationArguments.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"injectables/FilerService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Image-1.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"classes/Message.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"injectables/PayementService.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":729,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["constructor",{"_index":47,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/AtStrategy.html":{},"injectables/CpuHealthIndicator.html":{},"injectables/FilerService.html":{},"controllers/HealthCheckController.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["constructor(@inject(dospacesservicelib",{"_index":802,"title":{},"body":{"injectables/FilerService.html":{}}}],["constructor(prisma",{"_index":48,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["constructor(prismaservice",{"_index":1577,"title":{},"body":{"injectables/PrismaHealthIndicator.html":{}}}],["constructor(private",{"_index":17,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImagesController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PrismaHealthIndicator.html":{},"controllers/ResumesController.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["constructor(s3",{"_index":788,"title":{},"body":{"injectables/FilerService.html":{}}}],["contact",{"_index":622,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post-1.html":{}}}],["contain",{"_index":672,"title":{},"body":{"classes/CreateProFocusDto.html":{}}}],["containing",{"_index":1508,"title":{},"body":{"injectables/PostService.html":{}}}],["contains",{"_index":1520,"title":{},"body":{"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["content",{"_index":1421,"title":{},"body":{"classes/PostExtra-1.html":{},"classes/ProfessionalFocus.html":{},"classes/SendMessageDto.html":{}}}],["context",{"_index":1119,"title":{},"body":{"injectables/NewrelicInterceptor.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["context.gethandler().name",{"_index":1146,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":2007,"title":{},"body":{"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["continue",{"_index":2201,"title":{},"body":{"index.html":{}}}],["contract",{"_index":623,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{}}}],["contract'})@isoptional",{"_index":1426,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["controller",{"_index":0,"title":{"controllers/ActivitiesController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/ImagesController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{},"controllers/ResumesController.html":{}},"body":{"controllers/ActivitiesController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/ImagesController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{},"controllers/ResumesController.html":{},"coverage.html":{}}}],["controller('activities",{"_index":14,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["controller('auth",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('health",{"_index":895,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["controller('images",{"_index":938,"title":{},"body":{"controllers/ImagesController.html":{}}}],["controller('messenger",{"_index":1057,"title":{},"body":{"controllers/MessengerController.html":{}}}],["controller('payement",{"_index":1181,"title":{},"body":{"controllers/PayementController.html":{}}}],["controller('post",{"_index":1381,"title":{},"body":{"controllers/PostController.html":{}}}],["controller('resumes",{"_index":1847,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"controllers/PayementController.html":{},"modules/PayementModule.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"overview.html":{}}}],["conversation",{"_index":119,"title":{"classes/Conversation.html":{},"classes/Conversation-1.html":{}},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["conversationid",{"_index":1008,"title":{},"body":{"classes/Message-1.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{}}}],["conversationid.id",{"_index":1092,"title":{},"body":{"injectables/MessengerService.html":{}}}],["conversationsa",{"_index":1964,"title":{},"body":{"classes/User-1.html":{}}}],["conversationsb",{"_index":1965,"title":{},"body":{"classes/User-1.html":{}}}],["conversation})@httpcode(200)@post('sendfile",{"_index":1043,"title":{},"body":{"controllers/MessengerController.html":{}}}],["conversation})@post('sendmessage",{"_index":1030,"title":{},"body":{"controllers/MessengerController.html":{}}}],["coverage",{"_index":2018,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpu",{"_index":893,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["cpuhealthindicator",{"_index":575,"title":{"injectables/CpuHealthIndicator.html":{}},"body":{"injectables/CpuHealthIndicator.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{},"overview.html":{}}}],["cpupercentage",{"_index":589,"title":{},"body":{"injectables/CpuHealthIndicator.html":{}}}],["cpuusage",{"_index":587,"title":{},"body":{"injectables/CpuHealthIndicator.html":{}}}],["cpuusage[0",{"_index":590,"title":{},"body":{"injectables/CpuHealthIndicator.html":{}}}],["create",{"_index":69,"title":{},"body":{"injectables/ActivitiesService.html":{},"controllers/AuthController.html":{},"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{}}}],["create(@body",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostController.html":{}}}],["create(createpayementdto",{"_index":1194,"title":{},"body":{"injectables/PayementService.html":{}}}],["create(createpostdto",{"_index":1328,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["create(createuserdto",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["create(user",{"_index":1163,"title":{},"body":{"controllers/PayementController.html":{}}}],["createactivity",{"_index":45,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["createactivity(user",{"_index":56,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["createactivitydto",{"_index":58,"title":{"classes/CreateActivityDto.html":{}},"body":{"injectables/ActivitiesService.html":{},"classes/CreateActivityDto.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["createactivitydto.industry",{"_index":78,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["createactivitydto.job",{"_index":76,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["createactivitydto.jobtitle",{"_index":80,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["createauthdto",{"_index":305,"title":{"classes/CreateAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["createbiodto",{"_index":608,"title":{"classes/CreateBioDto.html":{}},"body":{"classes/CreateBioDto.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["createbiodto.bio",{"_index":1798,"title":{},"body":{"injectables/ProfileService.html":{}}}],["created",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MessengerService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["created'})@apibadrequestresponse({description",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["createdat",{"_index":480,"title":{},"body":{"classes/Bookmarks.html":{},"classes/Conversation.html":{},"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"classes/Image.html":{},"injectables/ImagesService.html":{},"classes/Message-1.html":{},"injectables/MessengerService.html":{},"classes/ProfileBookmarks-1.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/Resume-1.html":{},"classes/User-1.html":{}}}],["createimage",{"_index":945,"title":{},"body":{"injectables/ImagesService.html":{}}}],["createimage(file",{"_index":948,"title":{},"body":{"injectables/ImagesService.html":{}}}],["createmessage",{"_index":1023,"title":{},"body":{"controllers/MessengerController.html":{}}}],["createmessage(user",{"_index":1027,"title":{},"body":{"controllers/MessengerController.html":{}}}],["createparamdecorator",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpayementdto",{"_index":612,"title":{"classes/CreatePayementDto.html":{}},"body":{"classes/CreatePayementDto.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"classes/UpdatePayementDto.html":{},"coverage.html":{}}}],["createpayementdto.postid",{"_index":1228,"title":{},"body":{"injectables/PayementService.html":{}}}],["createpayementdto.productpriceid",{"_index":1225,"title":{},"body":{"injectables/PayementService.html":{}}}],["createpostdto",{"_index":618,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["createpostdto.extra?.join",{"_index":1493,"title":{},"body":{"injectables/PostService.html":{}}}],["createprofiledto",{"_index":679,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["createprofocus",{"_index":1733,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofocus.profocusarray.join",{"_index":1809,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofocusdto",{"_index":665,"title":{"classes/CreateProFocusDto.html":{}},"body":{"classes/CreateProFocusDto.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["createresume",{"_index":1854,"title":{},"body":{"injectables/ResumesService.html":{}}}],["createresume(file",{"_index":1857,"title":{},"body":{"injectables/ResumesService.html":{}}}],["createtagsdto",{"_index":680,"title":{"classes/CreateTagsDto.html":{}},"body":{"classes/CreateTagsDto.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":271,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["creating",{"_index":1219,"title":{},"body":{"injectables/PayementService.html":{}}}],["creation",{"_index":1221,"title":{},"body":{"injectables/PayementService.html":{},"interfaces/UploadedMulterFileI.html":{}}}],["credentials",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["credentials'})@apitags('login')@post('login",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["criteria",{"_index":1484,"title":{},"body":{"injectables/PostService.html":{}}}],["crypto",{"_index":2111,"title":{},"body":{"dependencies.html":{}}}],["ctx",{"_index":866,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":869,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":431,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostController.html":{},"injectables/ProfileService.html":{}}}],["currentpassword",{"_index":497,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["currentpost",{"_index":1539,"title":{},"body":{"injectables/PostService.html":{}}}],["currentpost?.expirationdate",{"_index":1540,"title":{},"body":{"injectables/PostService.html":{}}}],["currentpost?.expirationdate.toisostring",{"_index":1541,"title":{},"body":{"injectables/PostService.html":{}}}],["currentuser",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentuser.id",{"_index":1547,"title":{},"body":{"injectables/PostService.html":{}}}],["currentuser?.usertype",{"_index":1767,"title":{},"body":{"injectables/ProfileService.html":{}}}],["custom",{"_index":738,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["customer",{"_index":506,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["customer_email",{"_index":507,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["customvalidationarguments",{"_index":726,"title":{"interfaces/CustomValidationArguments.html":{}},"body":{"interfaces/CustomValidationArguments.html":{},"coverage.html":{}}}],["data",{"_index":74,"title":{},"body":{"injectables/ActivitiesService.html":{},"controllers/AuthController.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":481,"title":{},"body":{"classes/Bookmarks.html":{},"classes/Conversation.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"classes/Image.html":{},"classes/Message-1.html":{},"injectables/PayementService.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"classes/ProfileBookmarks-1.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/Resume-1.html":{},"classes/User-1.html":{},"dependencies.html":{}}}],["date().toisostring",{"_index":1498,"title":{},"body":{"injectables/PostService.html":{}}}],["date.now",{"_index":811,"title":{},"body":{"injectables/FilerService.html":{}}}],["date})@isoptional",{"_index":1430,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["date})@isstring",{"_index":647,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["db",{"_index":897,"title":{},"body":{"controllers/HealthCheckController.html":{},"injectables/ImagesService.html":{}}}],["dbuser",{"_index":1763,"title":{},"body":{"injectables/ProfileService.html":{}}}],["dbuser.uploadsvisibility",{"_index":1793,"title":{},"body":{"injectables/ProfileService.html":{}}}],["dbuser.visibility",{"_index":1764,"title":{},"body":{"injectables/ProfileService.html":{}}}],["decimal",{"_index":2129,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":26,"title":{},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilerModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"modules/MailjetModule.html":{},"modules/MessengerModule.html":{},"modules/PayementModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"overview.html":{}}}],["decorator",{"_index":1055,"title":{},"body":{"controllers/MessengerController.html":{},"controllers/PostController.html":{}}}],["decorator.ts",{"_index":2061,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["decorators",{"_index":99,"title":{},"body":{"classes/Activity.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/HandleChangeEmailDto.html":{},"controllers/HealthCheckController.html":{},"classes/Image.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks-1.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume-1.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdatePwdDto.html":{},"classes/User-1.html":{},"classes/sendFiileDto.html":{}}}],["decorators/current",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["default",{"_index":1286,"title":{},"body":{"injectables/PayementService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/User-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_price",{"_index":1603,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["defaultmessage(args",{"_index":754,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["defined",{"_index":49,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"injectables/CpuHealthIndicator.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"injectables/FilerService.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"controllers/HealthCheckController.html":{},"classes/Image.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks-1.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume-1.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdatePwdDto.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"classes/sendFiileDto.html":{}}}],["delete",{"_index":1365,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["delete('/bookmark",{"_index":1406,"title":{},"body":{"controllers/PostController.html":{}}}],["delete(':id",{"_index":1417,"title":{},"body":{"controllers/PostController.html":{}}}],["deletebookmark",{"_index":1313,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["deletebookmark(@currentuser",{"_index":1407,"title":{},"body":{"controllers/PostController.html":{}}}],["deletebookmark(user",{"_index":1331,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["deleted",{"_index":1334,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["deleteresumes",{"_index":1855,"title":{},"body":{"injectables/ResumesService.html":{}}}],["deleteresumes(resumeids",{"_index":1859,"title":{},"body":{"injectables/ResumesService.html":{}}}],["deleteuser",{"_index":1698,"title":{},"body":{"injectables/ProfileService.html":{}}}],["deleteuser(user",{"_index":1717,"title":{},"body":{"injectables/ProfileService.html":{}}}],["deleteusergallery",{"_index":1699,"title":{},"body":{"injectables/ProfileService.html":{}}}],["deleteusergallery(user",{"_index":1719,"title":{},"body":{"injectables/ProfileService.html":{}}}],["deleteusergallerydto",{"_index":757,"title":{"classes/DeleteUserGalleryDto.html":{}},"body":{"classes/DeleteUserGalleryDto.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["deleteusergallerydto.idsarray",{"_index":1761,"title":{},"body":{"injectables/ProfileService.html":{}}}],["demo",{"_index":2168,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":24,"title":{"dependencies.html":{}},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilerModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"modules/MailjetModule.html":{},"modules/MessengerModule.html":{},"modules/PayementModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1940,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["desc",{"_index":972,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/PostService.html":{}}}],["description",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"injectables/PostService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"properties.html":{}}}],["descriptor",{"_index":1635,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":2184,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1781,"title":{},"body":{"injectables/ProfileService.html":{}}}],["digitalocean",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/FilerModule.html":{},"injectables/FilerService.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["dimensions",{"_index":1631,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["disable",{"_index":1126,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["diskhealthindicator",{"_index":886,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["docker",{"_index":2172,"title":{},"body":{"index.html":{}}}],["document1",{"_index":2148,"title":{},"body":{"miscellaneous/functions.html":{}}}],["document2",{"_index":2149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["document3",{"_index":2150,"title":{},"body":{"miscellaneous/functions.html":{}}}],["documentation",{"_index":2019,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["donate",{"_index":547,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["done",{"_index":1100,"title":{},"body":{"injectables/MessengerService.html":{}}}],["dospacesservicelib",{"_index":801,"title":{},"body":{"injectables/FilerService.html":{},"interfaces/UploadedMulterFileI.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dospacesserviceprovider",{"_index":784,"title":{},"body":{"modules/FilerModule.html":{},"interfaces/UploadedMulterFileI.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["downloadable",{"_index":794,"title":{},"body":{"injectables/FilerService.html":{}}}],["downloadablefilerservice",{"_index":1075,"title":{},"body":{"modules/MessengerModule.html":{}}}],["dto/bookmark",{"_index":1753,"title":{},"body":{"injectables/ProfileService.html":{}}}],["dto/bookmark.dto",{"_index":1374,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["dto/change",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/create",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["dto/delete",{"_index":1751,"title":{},"body":{"injectables/ProfileService.html":{}}}],["dto/get",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostController.html":{}}}],["dto/handle",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/post",{"_index":1375,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["dto/reset",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/select",{"_index":1372,"title":{},"body":{"controllers/PostController.html":{}}}],["dto/send",{"_index":1050,"title":{},"body":{"controllers/MessengerController.html":{},"injectables/MessengerService.html":{}}}],["dto/update",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["duplicate",{"_index":1804,"title":{},"body":{"injectables/ProfileService.html":{}}}],["e",{"_index":1274,"title":{},"body":{"injectables/PayementService.html":{},"injectables/PrismaHealthIndicator.html":{}}}],["each",{"_index":642,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["email",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"injectables/MailjetService.html":{},"injectables/PayementService.html":{},"classes/ResetPwdDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["email.dto",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{}}}],["email.dto.ts",{"_index":488,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/HandleChangeEmailDto.html":{},"coverage.html":{}}}],["email.dto.ts:5",{"_index":493,"title":{},"body":{"classes/ChangeEmailDto.html":{}}}],["email.dto.ts:6",{"_index":491,"title":{},"body":{"classes/ChangeEmailDto.html":{}}}],["email.dto.ts:9",{"_index":880,"title":{},"body":{"classes/HandleChangeEmailDto.html":{}}}],["email_change",{"_index":137,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["email_verification",{"_index":134,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["emailchange",{"_index":135,"title":{"classes/EmailChange.html":{},"classes/EmailChange-1.html":{}},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailverification",{"_index":132,"title":{"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{}},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailverified",{"_index":1966,"title":{},"body":{"classes/User-1.html":{}}}],["empty",{"_index":755,"title":{},"body":{"interfaces/CustomValidationArguments.html":{},"injectables/ProfileService.html":{}}}],["enableshutdownhooks",{"_index":1593,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":1594,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encoding",{"_index":1934,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["end",{"_index":1200,"title":{},"body":{"injectables/PayementService.html":{}}}],["endpoint",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PayementService.html":{},"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["endpointsecret",{"_index":1261,"title":{},"body":{"injectables/PayementService.html":{}}}],["enpoint",{"_index":444,"title":{},"body":{"controllers/AuthController.html":{}}}],["entities/getbookmarksresponse",{"_index":1378,"title":{},"body":{"controllers/PostController.html":{}}}],["entities/getpostsresponse",{"_index":1377,"title":{},"body":{"controllers/PostController.html":{}}}],["entities/payement.entity",{"_index":1177,"title":{},"body":{"controllers/PayementController.html":{}}}],["entities/productres",{"_index":1179,"title":{},"body":{"controllers/PayementController.html":{}}}],["enum",{"_index":113,"title":{},"body":{"classes/Activity.html":{},"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"classes/Profile-2.html":{},"classes/User-1.html":{}}}],["enumname",{"_index":103,"title":{},"body":{"classes/Activity.html":{},"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"classes/Profile-2.html":{},"classes/User-1.html":{}}}],["error",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"injectables/FilerService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["error(`dospacesservice_error",{"_index":833,"title":{},"body":{"injectables/FilerService.html":{}}}],["errorresponse",{"_index":877,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["eslint",{"_index":1125,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["eslint/no",{"_index":1129,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["event",{"_index":1263,"title":{},"body":{"injectables/PayementService.html":{}}}],["event.data.object",{"_index":1279,"title":{},"body":{"injectables/PayementService.html":{}}}],["event?.type",{"_index":1276,"title":{},"body":{"injectables/PayementService.html":{}}}],["exact",{"_index":1235,"title":{},"body":{"injectables/PayementService.html":{}}}],["example",{"_index":1236,"title":{},"body":{"injectables/PayementService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["excel",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exception",{"_index":864,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["exception.code",{"_index":1565,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.filter",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["exception.filter.ts",{"_index":856,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:10",{"_index":863,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.filter.ts:8",{"_index":1561,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.getresponse().tostring",{"_index":876,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.getstatus",{"_index":875,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.message.replace(/\\n/g",{"_index":1564,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception/prisma",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{},"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["exceptionfilter",{"_index":858,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["executioncontext",{"_index":1115,"title":{},"body":{"injectables/NewrelicInterceptor.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ProfileService.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["exist'})@useguards(userfoundguard)@post('register",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["existing",{"_index":1755,"title":{},"body":{"injectables/ProfileService.html":{}}}],["exists",{"_index":1778,"title":{},"body":{"injectables/ProfileService.html":{}}}],["expand",{"_index":1247,"title":{},"body":{"injectables/PayementService.html":{}}}],["expirationdate",{"_index":1258,"title":{},"body":{"injectables/PayementService.html":{},"classes/Post-1.html":{},"injectables/PostService.html":{}}}],["export",{"_index":15,"title":{},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"injectables/CpuHealthIndicator.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"modules/FilerModule.html":{},"injectables/FilerService.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/HealthCheckService.html":{},"classes/Image.html":{},"classes/Image-1.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MailjetModule.html":{},"injectables/MailjetService.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"modules/PayementModule.html":{},"injectables/PayementService.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume.html":{},"classes/Resume-1.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdatePwdDto.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"classes/sendFiileDto.html":{}}}],["exports",{"_index":29,"title":{},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilerModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"modules/MailjetModule.html":{},"modules/MessengerModule.html":{},"modules/PayementModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"overview.html":{}}}],["express",{"_index":1176,"title":{},"body":{"controllers/PayementController.html":{},"injectables/PayementService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/RtStrategy.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":949,"title":{},"body":{"injectables/ImagesService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":116,"title":{},"body":{"classes/Activity-1.html":{},"injectables/AtStrategy.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"injectables/CpuHealthIndicator.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"injectables/RtStrategy.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{}}}],["extra",{"_index":624,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{}}}],["extra'})@isoptional",{"_index":1428,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["extractjwt",{"_index":221,"title":{},"body":{"injectables/AtStrategy.html":{},"injectables/RtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":229,"title":{},"body":{"injectables/AtStrategy.html":{},"injectables/RtStrategy.html":{}}}],["extramodels",{"_index":152,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["failed",{"_index":1584,"title":{},"body":{"injectables/PrismaHealthIndicator.html":{}}}],["false",{"_index":970,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"classes/PaginationDto.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"injectables/ProfileService.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"miscellaneous/variables.html":{}}}],["false})@type(undefined)@isoptional()@isint()@min(0",{"_index":1150,"title":{},"body":{"classes/PaginationDto.html":{},"classes/PostFilterDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["false})@type(undefined)@isoptional()@isint()@min(1",{"_index":1152,"title":{},"body":{"classes/PaginationDto.html":{},"classes/PostFilterDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["false})@type(undefined)@isoptional()@isstring",{"_index":1880,"title":{},"body":{"classes/SearchQueryDto.html":{}}}],["fieldname",{"_index":1935,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"miscellaneous/functions.html":{}}}],["fieldnames",{"_index":2155,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"injectables/CpuHealthIndicator.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"modules/FilerModule.html":{},"injectables/FilerService.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/HealthCheckService.html":{},"classes/Image.html":{},"classes/Image-1.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MailjetModule.html":{},"injectables/MailjetService.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"modules/PayementModule.html":{},"injectables/PayementService.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume.html":{},"classes/Resume-1.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdatePwdDto.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/sendFiileDto.html":{},"miscellaneous/variables.html":{}}}],["file.buffer",{"_index":823,"title":{},"body":{"injectables/FilerService.html":{}}}],["file.decorator.ts",{"_index":2070,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.dto.ts",{"_index":2048,"title":{},"body":{"coverage.html":{},"classes/sendFiileDto.html":{}}}],["file.dto.ts:7",{"_index":2218,"title":{},"body":{"classes/sendFiileDto.html":{}}}],["file.filter.ts",{"_index":2073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.mimetype",{"_index":827,"title":{},"body":{"injectables/FilerService.html":{},"injectables/ProfileService.html":{}}}],["file.originalname",{"_index":812,"title":{},"body":{"injectables/FilerService.html":{},"injectables/MessengerService.html":{},"injectables/ProfileService.html":{}}}],["file.originalname.match(/^.*\\.(jpg|webp|png|jpeg",{"_index":2281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.size",{"_index":959,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/ResumesService.html":{}}}],["filelink",{"_index":1106,"title":{},"body":{"injectables/MessengerService.html":{}}}],["filemimetypefilter",{"_index":2064,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filemimetypefilter(...mimetypes",{"_index":2163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filename",{"_index":810,"title":{},"body":{"injectables/FilerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filenames",{"_index":2147,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filer.config",{"_index":785,"title":{},"body":{"modules/FilerModule.html":{},"injectables/FilerService.html":{}}}],["filer.config.ts",{"_index":1932,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filer.module",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"modules/MessengerModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{}}}],["filer.module.ts",{"_index":782,"title":{},"body":{"modules/FilerModule.html":{}}}],["filer.service",{"_index":783,"title":{},"body":{"modules/FilerModule.html":{},"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/ResumesService.html":{}}}],["filer.service.ts",{"_index":786,"title":{},"body":{"injectables/FilerService.html":{},"coverage.html":{}}}],["filer.service.ts:11",{"_index":796,"title":{},"body":{"injectables/FilerService.html":{}}}],["filer.service.ts:8",{"_index":790,"title":{},"body":{"injectables/FilerService.html":{}}}],["filer/digitalocean",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/FilerModule.html":{},"injectables/FilerService.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"interfaces/UploadedMulterFileI.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filermodule",{"_index":165,"title":{"modules/FilerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilerModule.html":{},"modules/ImagesModule.html":{},"modules/MessengerModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["filerservice",{"_index":780,"title":{"injectables/FilerService.html":{}},"body":{"modules/FilerModule.html":{},"injectables/FilerService.html":{},"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["files",{"_index":808,"title":{},"body":{"injectables/FilerService.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["files[0",{"_index":1101,"title":{},"body":{"injectables/MessengerService.html":{}}}],["filling",{"_index":2202,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1509,"title":{},"body":{"injectables/PostService.html":{}}}],["filter.dto",{"_index":1376,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["filter.dto.ts",{"_index":1425,"title":{},"body":{"classes/PostFilterDto.html":{},"coverage.html":{}}}],["filter.dto.ts:18",{"_index":1443,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["filter.dto.ts:25",{"_index":1444,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["filter.dto.ts:30",{"_index":1447,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["filter.dto.ts:35",{"_index":1442,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["filter.dto.ts:40",{"_index":1427,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["filter.dto.ts:47",{"_index":1439,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["filter.dto.ts:52",{"_index":1437,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["filter.dto.ts:57",{"_index":1429,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["filter.dto.ts:61",{"_index":1431,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["filter.dto.ts:66",{"_index":1434,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["filter.ts",{"_index":2063,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filterdto",{"_index":1349,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["filterdto.extra.join",{"_index":1531,"title":{},"body":{"injectables/PostService.html":{}}}],["filterdto?.contract",{"_index":1528,"title":{},"body":{"injectables/PostService.html":{}}}],["filterdto?.extra",{"_index":1530,"title":{},"body":{"injectables/PostService.html":{}}}],["filterdto?.jobstartdate",{"_index":1526,"title":{},"body":{"injectables/PostService.html":{}}}],["filterdto?.paiement",{"_index":1529,"title":{},"body":{"injectables/PostService.html":{}}}],["filterdto?.postcode",{"_index":1525,"title":{},"body":{"injectables/PostService.html":{}}}],["filterdto?.price",{"_index":1527,"title":{},"body":{"injectables/PostService.html":{}}}],["filterdto?.priority",{"_index":1524,"title":{},"body":{"injectables/PostService.html":{}}}],["filterdto?.type",{"_index":1523,"title":{},"body":{"injectables/PostService.html":{}}}],["filtered",{"_index":1482,"title":{},"body":{"injectables/PostService.html":{}}}],["filtred",{"_index":1354,"title":{},"body":{"controllers/PostController.html":{}}}],["findalluserposts",{"_index":1314,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["findalluserposts(user",{"_index":1335,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["findfilteredposts",{"_index":1455,"title":{},"body":{"injectables/PostService.html":{}}}],["findfilteredposts(searchquery",{"_index":1467,"title":{},"body":{"injectables/PostService.html":{}}}],["findone",{"_index":1456,"title":{},"body":{"injectables/PostService.html":{}}}],["findone(id",{"_index":1469,"title":{},"body":{"injectables/PostService.html":{}}}],["finds",{"_index":1480,"title":{},"body":{"injectables/PostService.html":{}}}],["firstname",{"_index":694,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/PostService.html":{},"classes/SetUserSettingsDto.html":{},"classes/User-1.html":{}}}],["fns",{"_index":1213,"title":{},"body":{"injectables/PayementService.html":{},"dependencies.html":{}}}],["forbiddenexception",{"_index":1491,"title":{},"body":{"injectables/PostService.html":{},"injectables/RtStrategy.html":{}}}],["forbiddenexception('refresh",{"_index":1876,"title":{},"body":{"injectables/RtStrategy.html":{}}}],["forbiddenexception('resource",{"_index":1548,"title":{},"body":{"injectables/PostService.html":{}}}],["format",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["found'})@apitags('register')@get('verify/:token",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["found'})@httpcode(200)@get('changeemail/:token",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["found'})@httpcode(200)@useguards(undefined)@patch('changeemail",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["found'})@httpcode(200)@useguards(undefined)@patch('changepwd",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["found.guard",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["found.guard.ts",{"_index":2001,"title":{},"body":{"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"coverage.html":{}}}],["found.guard.ts:10",{"_index":2003,"title":{},"body":{"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["found.guard.ts:13",{"_index":2005,"title":{},"body":{"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["front",{"_index":1199,"title":{},"body":{"injectables/PayementService.html":{}}}],["frontend",{"_index":2175,"title":{},"body":{"index.html":{}}}],["function",{"_index":736,"title":{},"body":{"interfaces/CustomValidationArguments.html":{},"injectables/NewrelicInterceptor.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["functions",{"_index":2137,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gallery",{"_index":1758,"title":{},"body":{"injectables/ProfileService.html":{}}}],["gallery.dto",{"_index":1752,"title":{},"body":{"injectables/ProfileService.html":{}}}],["gallery.dto.ts",{"_index":759,"title":{},"body":{"classes/DeleteUserGalleryDto.html":{},"coverage.html":{}}}],["gallery.dto.ts:7",{"_index":761,"title":{},"body":{"classes/DeleteUserGalleryDto.html":{}}}],["gender",{"_index":695,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/User-1.html":{}}}],["general",{"_index":2192,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1197,"title":{},"body":{"injectables/PayementService.html":{}}}],["generateresetpwd",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["generateresetpwd(@body",{"_index":423,"title":{},"body":{"controllers/AuthController.html":{}}}],["generateresetpwd(resetpwddto",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["generator",{"_index":2096,"title":{},"body":{"dependencies.html":{}}}],["get('/allposts",{"_index":1392,"title":{},"body":{"controllers/PostController.html":{}}}],["get('/getbookmarks",{"_index":1402,"title":{},"body":{"controllers/PostController.html":{}}}],["get('/getuser",{"_index":433,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/getuser/:id",{"_index":437,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":1411,"title":{},"body":{"controllers/PostController.html":{}}}],["get('authorization",{"_index":1873,"title":{},"body":{"injectables/RtStrategy.html":{}}}],["get('changeemail/:token",{"_index":453,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('filtered",{"_index":1409,"title":{},"body":{"controllers/PostController.html":{}}}],["get('products",{"_index":1185,"title":{},"body":{"controllers/PayementController.html":{}}}],["get('verify/:token",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@healthcheck",{"_index":884,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["getallposts",{"_index":1315,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["getallposts(@query",{"_index":1393,"title":{},"body":{"controllers/PostController.html":{}}}],["getallposts(selectallpostsdto",{"_index":1339,"title":{},"body":{"controllers/PostController.html":{}}}],["getallposts(type",{"_index":1471,"title":{},"body":{"injectables/PostService.html":{}}}],["getbookmarkedprofiles",{"_index":1700,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getbookmarkedprofiles(user",{"_index":1721,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getbookmarks",{"_index":1316,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["getbookmarks(user",{"_index":1344,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["getbookmarksresponse",{"_index":834,"title":{"classes/GetBookmarksResponse.html":{}},"body":{"classes/GetBookmarksResponse.html":{},"controllers/PostController.html":{},"coverage.html":{}}}],["getbookmarksresponse})@get('/getbookmarks",{"_index":1345,"title":{},"body":{"controllers/PostController.html":{}}}],["getconversations",{"_index":1024,"title":{},"body":{"controllers/MessengerController.html":{},"injectables/MessengerService.html":{}}}],["getconversations(@currentuser",{"_index":1060,"title":{},"body":{"controllers/MessengerController.html":{}}}],["getconversations(user",{"_index":1032,"title":{},"body":{"controllers/MessengerController.html":{},"injectables/MessengerService.html":{}}}],["getfilteredposts",{"_index":1317,"title":{},"body":{"controllers/PostController.html":{}}}],["getfilteredposts(searchquery",{"_index":1347,"title":{},"body":{"controllers/PostController.html":{}}}],["gethello",{"_index":155,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getpost",{"_index":1318,"title":{},"body":{"controllers/PostController.html":{}}}],["getpost(@param",{"_index":1412,"title":{},"body":{"controllers/PostController.html":{}}}],["getpost(getpostdto",{"_index":1355,"title":{},"body":{"controllers/PostController.html":{}}}],["getpostdto",{"_index":840,"title":{"classes/GetPostDto.html":{}},"body":{"classes/GetPostDto.html":{},"controllers/PostController.html":{},"coverage.html":{}}}],["getpostdto.id",{"_index":1416,"title":{},"body":{"controllers/PostController.html":{}}}],["getpostsresponse",{"_index":846,"title":{"classes/GetPostsResponse.html":{}},"body":{"classes/GetPostsResponse.html":{},"controllers/PostController.html":{},"coverage.html":{}}}],["getpostsresponse})@get",{"_index":1337,"title":{},"body":{"controllers/PostController.html":{}}}],["getpostsresponse})@get('/allposts",{"_index":1342,"title":{},"body":{"controllers/PostController.html":{}}}],["getpostsresponse})@get('filtered",{"_index":1351,"title":{},"body":{"controllers/PostController.html":{}}}],["getproducts",{"_index":1161,"title":{},"body":{"controllers/PayementController.html":{},"injectables/PayementService.html":{}}}],["getprofocus",{"_index":1701,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofocus(user",{"_index":1723,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getting",{"_index":2165,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["getuser(@currentuser",{"_index":434,"title":{},"body":{"controllers/AuthController.html":{}}}],["getuser(user",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["getuserbyid",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["getuserbyid(@currentuser",{"_index":438,"title":{},"body":{"controllers/AuthController.html":{}}}],["getuserbyid(user",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{}}}],["getuserdto",{"_index":293,"title":{"classes/GetUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/GetUserDto.html":{},"coverage.html":{}}}],["getuserdto.id",{"_index":440,"title":{},"body":{"controllers/AuthController.html":{}}}],["getusergallery",{"_index":946,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProfileService.html":{}}}],["getusergallery(user",{"_index":951,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ProfileService.html":{}}}],["getusergallerybyid",{"_index":1702,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getusergallerybyid(user",{"_index":1726,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getuserresumebyid",{"_index":1703,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getuserresumebyid(user",{"_index":1728,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getuserresumes",{"_index":1704,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/ResumesService.html":{}}}],["getuserresumes(user",{"_index":1730,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/ResumesService.html":{}}}],["given",{"_index":1483,"title":{},"body":{"injectables/PostService.html":{}}}],["globalexceptionfilter",{"_index":854,"title":{"classes/GlobalExceptionFilter.html":{}},"body":{"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["graphql",{"_index":2114,"title":{},"body":{"dependencies.html":{}}}],["gt",{"_index":1497,"title":{},"body":{"injectables/PostService.html":{}}}],["guard",{"_index":1998,"title":{"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1999,"title":{},"body":{"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"overview.html":{}}}],["guards/user",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["guidelines",{"_index":2199,"title":{},"body":{"index.html":{}}}],["handle",{"_index":452,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlechangeemail",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlechangeemail(tokendto",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlechangeemaildto",{"_index":297,"title":{"classes/HandleChangeEmailDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/HandleChangeEmailDto.html":{},"coverage.html":{}}}],["handler.decorator.ts",{"_index":2066,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["has_more",{"_index":1650,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["hash",{"_index":763,"title":{},"body":{"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hash(password",{"_index":2158,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashstring",{"_index":2043,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["hashstring(s",{"_index":2161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["having",{"_index":806,"title":{},"body":{"injectables/FilerService.html":{}}}],["header",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{}}}],["health",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["health/cpu.health",{"_index":894,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["health/cpu.health.ts",{"_index":578,"title":{},"body":{"injectables/CpuHealthIndicator.html":{},"coverage.html":{}}}],["health/cpu.health.ts:14",{"_index":583,"title":{},"body":{"injectables/CpuHealthIndicator.html":{}}}],["health/cpu.health.ts:9",{"_index":582,"title":{},"body":{"injectables/CpuHealthIndicator.html":{}}}],["health/prisma.heatlth",{"_index":892,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["health/prisma.heatlth.ts",{"_index":1576,"title":{},"body":{"injectables/PrismaHealthIndicator.html":{},"coverage.html":{}}}],["health/prisma.heatlth.ts:10",{"_index":1578,"title":{},"body":{"injectables/PrismaHealthIndicator.html":{}}}],["health/prisma.heatlth.ts:15",{"_index":1580,"title":{},"body":{"injectables/PrismaHealthIndicator.html":{}}}],["healthcheck",{"_index":887,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["healthcheckcontroller",{"_index":881,"title":{"controllers/HealthCheckController.html":{}},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{}}}],["healthcheckerror",{"_index":584,"title":{},"body":{"injectables/CpuHealthIndicator.html":{},"injectables/PrismaHealthIndicator.html":{}}}],["healthcheckerror('prisma",{"_index":1583,"title":{},"body":{"injectables/PrismaHealthIndicator.html":{}}}],["healthcheckmodule",{"_index":166,"title":{"modules/HealthCheckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthCheckModule.html":{},"modules.html":{},"overview.html":{}}}],["healthcheckservice",{"_index":888,"title":{"injectables/HealthCheckService.html":{}},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/HealthCheckService.html":{},"coverage.html":{},"overview.html":{}}}],["healthindicator",{"_index":579,"title":{},"body":{"injectables/CpuHealthIndicator.html":{},"injectables/PrismaHealthIndicator.html":{}}}],["healthindicatorresult",{"_index":585,"title":{},"body":{"injectables/CpuHealthIndicator.html":{},"injectables/PrismaHealthIndicator.html":{}}}],["hello",{"_index":208,"title":{},"body":{"injectables/AppService.html":{}}}],["host",{"_index":861,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":867,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["http",{"_index":896,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["http://localhost:3011",{"_index":903,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["httpcode",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{}}}],["httpcode(200",{"_index":441,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{}}}],["httpcode(200)@apiokresponse({type",{"_index":1341,"title":{},"body":{"controllers/PostController.html":{}}}],["httpcode(httpstatus.ok",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@apiokresponse({description",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@apitags('reset",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":865,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"injectables/ImagesService.html":{},"injectables/PayementService.html":{},"injectables/ResumesService.html":{}}}],["httpexception('file",{"_index":961,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ResumesService.html":{}}}],["httpexception('no",{"_index":957,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ResumesService.html":{}}}],["httphealthindicator",{"_index":889,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["httpmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cc",{"_index":1780,"title":{},"body":{"injectables/ProfileService.html":{}}}],["https://codecooperation.atlassian.net/l/cp/c4oahc2e",{"_index":2194,"title":{},"body":{"index.html":{}}}],["https://github.com/codecooperation/cc",{"_index":2198,"title":{},"body":{"index.html":{}}}],["https://tippjob",{"_index":2170,"title":{},"body":{"index.html":{}}}],["https://tippjob.ccdev.space",{"_index":2169,"title":{},"body":{"index.html":{}}}],["https://tooling.ccdev.space",{"_index":2178,"title":{},"body":{"index.html":{}}}],["https://www.figma.com/file/0koinuerdzunens0cv5uig/tippjob?node",{"_index":2185,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.conflict",{"_index":1568,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["id",{"_index":83,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"controllers/AuthController.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"classes/GetPostDto.html":{},"classes/GetUserDto.html":{},"classes/Image.html":{},"classes/Message-1.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra-1.html":{},"injectables/PostService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile-2.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/Resume-1.html":{},"injectables/ResumesService.html":{},"classes/User-1.html":{}}}],["id=167%3a1399&t=7axrxxyjwcxyxm4y",{"_index":2186,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":1939,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"coverage.html":{}}}],["idsarray",{"_index":760,"title":{},"body":{"classes/DeleteUserGalleryDto.html":{}}}],["image",{"_index":128,"title":{"classes/Image.html":{},"classes/Image-1.html":{}},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/CreatePostDto.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image.html":{},"classes/Image-1.html":{},"injectables/ImagesService.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra.html":{},"injectables/PostService.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["image.imageurl",{"_index":1757,"title":{},"body":{"injectables/ProfileService.html":{}}}],["image/bmp",{"_index":2248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/gif",{"_index":2247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/heic",{"_index":2250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/jpeg",{"_index":2243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/png",{"_index":2246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/svg+xml",{"_index":2249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/tiff",{"_index":2245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/webp",{"_index":2244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imagefilefilter",{"_index":2074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["imagelinkafterupload",{"_index":963,"title":{},"body":{"injectables/ImagesService.html":{}}}],["images",{"_index":935,"title":{},"body":{"controllers/ImagesController.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"injectables/ProfileService.html":{}}}],["images.controller",{"_index":943,"title":{},"body":{"modules/ImagesModule.html":{}}}],["images.service",{"_index":937,"title":{},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{}}}],["images/images.module",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["images/images.service",{"_index":1453,"title":{},"body":{"modules/PostModule.html":{},"injectables/PostService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["imagescontroller",{"_index":933,"title":{"controllers/ImagesController.html":{}},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"coverage.html":{}}}],["imagesmodule",{"_index":167,"title":{"modules/ImagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"modules.html":{},"overview.html":{}}}],["imagesservice",{"_index":936,"title":{"injectables/ImagesService.html":{}},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["imageurl",{"_index":921,"title":{},"body":{"classes/Image.html":{},"injectables/ImagesService.html":{}}}],["image})@httpcode(200)@apiimagefile('image')@post('/addimage",{"_index":1321,"title":{},"body":{"controllers/PostController.html":{}}}],["implements",{"_index":857,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"injectables/NewrelicInterceptor.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["import",{"_index":9,"title":{},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"injectables/CpuHealthIndicator.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"modules/FilerModule.html":{},"injectables/FilerService.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/HealthCheckService.html":{},"classes/Image.html":{},"classes/Image-1.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MailjetModule.html":{},"injectables/MailjetService.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"modules/PayementModule.html":{},"injectables/PayementService.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume.html":{},"classes/Resume-1.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdatePwdDto.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"classes/sendFiileDto.html":{}}}],["imports",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"modules/MessengerModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{}}}],["in'})@apiokresponse({type",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["in'})@apiunauthorizedresponse({description",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["include",{"_index":1094,"title":{},"body":{"injectables/MessengerService.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["including",{"_index":1220,"title":{},"body":{"injectables/PayementService.html":{}}}],["incorrect",{"_index":445,"title":{},"body":{"controllers/AuthController.html":{}}}],["incorrect'})@apibadrequestresponse({description",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["index",{"_index":42,"title":{"index.html":{}},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"injectables/CpuHealthIndicator.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"injectables/FilerService.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"controllers/HealthCheckController.html":{},"classes/Image.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks-1.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume-1.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdatePwdDto.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"miscellaneous/functions.html":{},"classes/sendFiileDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":1611,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["individual",{"_index":749,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["industry",{"_index":77,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/CreateActivityDto.html":{}}}],["inestapplication",{"_index":1595,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"injectables/CpuHealthIndicator.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"modules/FilerModule.html":{},"injectables/FilerService.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/HealthCheckService.html":{},"classes/Image.html":{},"classes/Image-1.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MailjetModule.html":{},"injectables/MailjetService.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"modules/PayementModule.html":{},"injectables/PayementService.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume.html":{},"classes/Resume-1.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdatePwdDto.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"classes/sendFiileDto.html":{}}}],["information",{"_index":2204,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":1770,"title":{},"body":{"injectables/ProfileService.html":{}}}],["inject",{"_index":798,"title":{},"body":{"injectables/FilerService.html":{}}}],["injectable",{"_index":39,"title":{"injectables/ActivitiesService.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"injectables/CpuHealthIndicator.html":{},"injectables/FilerService.html":{},"injectables/HealthCheckService.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{}},"body":{"injectables/ActivitiesService.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"injectables/CpuHealthIndicator.html":{},"injectables/FilerService.html":{},"injectables/HealthCheckService.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":40,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"injectables/CpuHealthIndicator.html":{},"injectables/FilerService.html":{},"injectables/HealthCheckService.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"overview.html":{}}}],["injection",{"_index":1941,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["instance",{"_index":965,"title":{},"body":{"injectables/ImagesService.html":{},"interfaces/UploadedMulterFileI.html":{}}}],["instanceof",{"_index":874,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["intercept",{"_index":1113,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["intercept(context",{"_index":1114,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["interceptor",{"_index":1138,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["interface",{"_index":725,"title":{"interfaces/CustomValidationArguments.html":{},"interfaces/UploadedMulterFileI.html":{}},"body":{"interfaces/CustomValidationArguments.html":{},"interfaces/UploadedMulterFileI.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interfaces",{"_index":727,"title":{},"body":{"interfaces/CustomValidationArguments.html":{},"interfaces/UploadedMulterFileI.html":{},"overview.html":{}}}],["internal",{"_index":872,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["invalid",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{},"classes/PostFilterDto.html":{}}}],["isarray",{"_index":574,"title":{},"body":{"classes/Conversation.html":{},"classes/CreatePostDto.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostsResponse.html":{},"controllers/MessengerController.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"classes/User-1.html":{}}}],["isboolean",{"_index":1919,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["isboolean()@apipropertyoptional()@isoptional",{"_index":1912,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["iscompanynamevalid",{"_index":718,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["iscompanynamevalid(validationoptions",{"_index":741,"title":{},"body":{"interfaces/CustomValidationArguments.html":{},"miscellaneous/functions.html":{}}}],["isemail",{"_index":494,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/ResetPwdDto.html":{}}}],["isemail()@apiproperty",{"_index":605,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/ResetPwdDto.html":{}}}],["isenum",{"_index":599,"title":{},"body":{"classes/CreateActivityDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/PostFilterDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SetUserSettingsDto.html":{}}}],["isenum(gender",{"_index":720,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SetUserSettingsDto.html":{}}}],["isenum(gender)@apiproperty",{"_index":707,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum(gender)@apipropertyoptional()@isoptional",{"_index":1909,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["isenum(industry",{"_index":602,"title":{},"body":{"classes/CreateActivityDto.html":{}}}],["isenum(job",{"_index":601,"title":{},"body":{"classes/CreateActivityDto.html":{}}}],["isenum(jobcontract",{"_index":662,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PostFilterDto.html":{}}}],["isenum(jobextra",{"_index":663,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PostFilterDto.html":{}}}],["isenum(jobpaiement",{"_index":664,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PostFilterDto.html":{}}}],["isenum(jobpriority",{"_index":661,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PostFilterDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["isenum(jobtype",{"_index":660,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PostFilterDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["isenum(tags",{"_index":690,"title":{},"body":{"classes/CreateTagsDto.html":{}}}],["isenum(type",{"_index":721,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum(type)@apiproperty",{"_index":714,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum(visibility",{"_index":1920,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["isenum(visibility)@apipropertyoptional()@isoptional()@isstring",{"_index":1916,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["isgalleryimage",{"_index":922,"title":{},"body":{"classes/Image.html":{},"injectables/ImagesService.html":{}}}],["ishealthy",{"_index":581,"title":{},"body":{"injectables/CpuHealthIndicator.html":{},"injectables/PrismaHealthIndicator.html":{}}}],["ishealthy(key",{"_index":1579,"title":{},"body":{"injectables/PrismaHealthIndicator.html":{}}}],["isint",{"_index":1154,"title":{},"body":{"classes/PaginationDto.html":{},"classes/PostFilterDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["isnan(skip",{"_index":967,"title":{},"body":{"injectables/ImagesService.html":{}}}],["isnan(take",{"_index":968,"title":{},"body":{"injectables/ImagesService.html":{}}}],["isoptional",{"_index":600,"title":{},"body":{"classes/CreateActivityDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateTagsDto.html":{},"classes/PaginationDto.html":{},"classes/PostFilterDto.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SetUserSettingsDto.html":{}}}],["ispostimage",{"_index":923,"title":{},"body":{"classes/Image.html":{},"injectables/ImagesService.html":{}}}],["isstring",{"_index":495,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/GetPostDto.html":{},"classes/GetUserDto.html":{},"classes/HandleChangeEmailDto.html":{},"classes/PostFilterDto.html":{},"classes/SearchQueryDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{}}}],["isuserprofilepicture",{"_index":924,"title":{},"body":{"classes/Image.html":{},"injectables/ImagesService.html":{}}}],["isuuid",{"_index":472,"title":{},"body":{"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/CreatePayementDto.html":{},"classes/SendMessageDto.html":{},"classes/sendFiileDto.html":{}}}],["item",{"_index":1223,"title":{},"body":{"injectables/PayementService.html":{}}}],["item.unit_amount",{"_index":1226,"title":{},"body":{"injectables/PayementService.html":{}}}],["items",{"_index":2193,"title":{},"body":{"index.html":{}}}],["iterate",{"_index":1511,"title":{},"body":{"injectables/PostService.html":{}}}],["job",{"_index":75,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/CreateActivityDto.html":{},"classes/PostFilterDto.html":{}}}],["job_ad",{"_index":1500,"title":{},"body":{"injectables/PostService.html":{}}}],["jobcontract",{"_index":633,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{}}}],["jobcontract'})@isenum(jobcontract",{"_index":635,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PostFilterDto.html":{}}}],["jobextra",{"_index":640,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{}}}],["jobextra'})@isenum(jobextra",{"_index":641,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PostFilterDto.html":{}}}],["jobpaiement",{"_index":649,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{}}}],["jobpaiement'})@isenum(jobpaiement",{"_index":1432,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["jobpaiement'})@isenum(jobpaiement)@isoptional",{"_index":650,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["jobpriority",{"_index":653,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["jobpriority'})@isenum(jobpriority",{"_index":654,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["jobpriority})@isenum(jobpriority",{"_index":1440,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["jobpriority})@isoptional()@isenum(jobpriority",{"_index":1885,"title":{},"body":{"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["jobstartdate",{"_index":625,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{}}}],["jobtitle",{"_index":79,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/CreateActivityDto.html":{}}}],["jobtype",{"_index":657,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["jobtype'})@isenum(jobtype",{"_index":658,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["jobtype})@isenum(jobtype",{"_index":1445,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["jobtype})@isoptional()@isenum(jobtype",{"_index":1889,"title":{},"body":{"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["js",{"_index":2093,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["json'})@apiconflictresponse({description",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["justs",{"_index":1210,"title":{},"body":{"injectables/PayementService.html":{}}}],["jwt",{"_index":224,"title":{},"body":{"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"injectables/ProfileService.html":{},"injectables/RtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":228,"title":{},"body":{"injectables/AtStrategy.html":{},"injectables/RtStrategy.html":{}}}],["jwtmodule",{"_index":461,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":465,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":216,"title":{},"body":{"injectables/AtStrategy.html":{},"injectables/RtStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["jwtpayloadwithrt",{"_index":1870,"title":{},"body":{"injectables/RtStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["key",{"_index":555,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/FilerService.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":1641,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["large",{"_index":962,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/ResumesService.html":{}}}],["last",{"_index":1643,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["lastname",{"_index":696,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/PostService.html":{},"classes/SetUserSettingsDto.html":{},"classes/User-1.html":{}}}],["layer",{"_index":1942,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["legend",{"_index":25,"title":{},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilerModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"modules/MailjetModule.html":{},"modules/MessengerModule.html":{},"modules/PayementModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"overview.html":{}}}],["length",{"_index":675,"title":{},"body":{"classes/CreateProFocusDto.html":{},"classes/CreateUserDto.html":{}}}],["length(0",{"_index":677,"title":{},"body":{"classes/CreateProFocusDto.html":{}}}],["length(3",{"_index":704,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lib:do",{"_index":1943,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":2216,"title":{},"body":{"properties.html":{}}}],["line",{"_index":1127,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["line_items",{"_index":508,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["link",{"_index":420,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{}}}],["list",{"_index":1474,"title":{},"body":{"injectables/PostService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["literal",{"_index":532,"title":{},"body":{"classes/CheckoutSession.html":{},"classes/ProductDto.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":1623,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["livemode",{"_index":1604,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["locale",{"_index":509,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["localoptions",{"_index":2152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["location",{"_index":1879,"title":{},"body":{"classes/SearchQueryDto.html":{}}}],["lodash",{"_index":2119,"title":{},"body":{"dependencies.html":{}}}],["logged",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["login",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["login(@body",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(createauthdto",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@currentuser",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(user",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["loop",{"_index":1773,"title":{},"body":{"injectables/ProfileService.html":{}}}],["mailjet",{"_index":986,"title":{},"body":{"injectables/MailjetService.html":{},"dependencies.html":{}}}],["mailjet.client",{"_index":985,"title":{},"body":{"injectables/MailjetService.html":{}}}],["mailjet.sendemailv3_1.body",{"_index":992,"title":{},"body":{"injectables/MailjetService.html":{}}}],["mailjet.service",{"_index":977,"title":{},"body":{"modules/MailjetModule.html":{}}}],["mailjet/mailjet.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["mailjet/mailjet.service",{"_index":464,"title":{},"body":{"modules/AuthModule.html":{}}}],["mailjetmodule",{"_index":168,"title":{"modules/MailjetModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailjetModule.html":{},"modules.html":{},"overview.html":{}}}],["mailjetservice",{"_index":457,"title":{"injectables/MailjetService.html":{}},"body":{"modules/AuthModule.html":{},"modules/MailjetModule.html":{},"injectables/MailjetService.html":{},"coverage.html":{},"overview.html":{}}}],["malformed",{"_index":1877,"title":{},"body":{"injectables/RtStrategy.html":{}}}],["mark",{"_index":1816,"title":{},"body":{"injectables/ProfileService.html":{}}}],["matches",{"_index":676,"title":{},"body":{"classes/CreateProFocusDto.html":{}}}],["matches(/^[^,]*$/gm",{"_index":678,"title":{},"body":{"classes/CreateProFocusDto.html":{}}}],["matching",{"_index":20,"title":{},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"injectables/CpuHealthIndicator.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"modules/FilerModule.html":{},"injectables/FilerService.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/HealthCheckService.html":{},"classes/Image.html":{},"classes/Image-1.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MailjetModule.html":{},"injectables/MailjetService.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"modules/PayementModule.html":{},"injectables/PayementService.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume.html":{},"classes/Resume-1.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdatePwdDto.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/sendFiileDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matroska",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":716,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(12",{"_index":722,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(12)@apiproperty",{"_index":712,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(20",{"_index":724,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["memory",{"_index":899,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["memoryhealthindicator",{"_index":890,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["message",{"_index":87,"title":{"classes/Message.html":{},"classes/Message-1.html":{}},"body":{"injectables/ActivitiesService.html":{},"classes/Activity-1.html":{},"controllers/AuthController.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"classes/CreateProFocusDto.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/PostFilterDto.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message.dto",{"_index":1051,"title":{},"body":{"controllers/MessengerController.html":{},"injectables/MessengerService.html":{}}}],["message.dto.ts",{"_index":1896,"title":{},"body":{"classes/SendMessageDto.html":{},"coverage.html":{}}}],["message.dto.ts:10",{"_index":1898,"title":{},"body":{"classes/SendMessageDto.html":{}}}],["message.dto.ts:7",{"_index":1897,"title":{},"body":{"classes/SendMessageDto.html":{}}}],["messages",{"_index":557,"title":{},"body":{"classes/Conversation.html":{},"injectables/MailjetService.html":{},"injectables/MessengerService.html":{},"classes/User-1.html":{}}}],["messenger",{"_index":1022,"title":{},"body":{"controllers/MessengerController.html":{}}}],["messenger.controller",{"_index":1074,"title":{},"body":{"modules/MessengerModule.html":{}}}],["messenger.service",{"_index":1048,"title":{},"body":{"controllers/MessengerController.html":{},"modules/MessengerModule.html":{}}}],["messenger/messenger.module",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["messengercontroller",{"_index":1020,"title":{"controllers/MessengerController.html":{}},"body":{"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"coverage.html":{}}}],["messengermodule",{"_index":169,"title":{"modules/MessengerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MessengerModule.html":{},"modules.html":{},"overview.html":{}}}],["messengerservice",{"_index":1047,"title":{"injectables/MessengerService.html":{}},"body":{"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"coverage.html":{},"overview.html":{}}}],["metadata",{"_index":510,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"dependencies.html":{}}}],["methoddecorator",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":43,"title":{},"body":{"injectables/ActivitiesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"injectables/CpuHealthIndicator.html":{},"injectables/FilerService.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/HealthCheckController.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["mimetype",{"_index":1776,"title":{},"body":{"injectables/ProfileService.html":{},"interfaces/UploadedMulterFileI.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mimetypes",{"_index":2164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["min",{"_index":1155,"title":{},"body":{"classes/PaginationDto.html":{},"classes/PostFilterDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["min(0",{"_index":1156,"title":{},"body":{"classes/PaginationDto.html":{},"classes/PostFilterDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["min(1",{"_index":1157,"title":{},"body":{"classes/PaginationDto.html":{},"classes/PostFilterDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["minlength",{"_index":717,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":723,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6)@maxlength(20)@apiproperty",{"_index":710,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":2136,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":511,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["module",{"_index":21,"title":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilerModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"modules/MailjetModule.html":{},"modules/MessengerModule.html":{},"modules/PayementModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{}},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilerModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"modules/MailjetModule.html":{},"modules/MessengerModule.html":{},"modules/PayementModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"overview.html":{}}}],["modules",{"_index":23,"title":{"modules.html":{}},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilerModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"modules/MailjetModule.html":{},"modules/MessengerModule.html":{},"modules/PayementModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":2121,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1518,"title":{},"body":{"injectables/PostService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["msvideo",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multererror",{"_index":2280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multererror('limit_unexpected_file",{"_index":2284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multeroptions",{"_index":2153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":52,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"classes/Conversation.html":{},"interfaces/CustomValidationArguments.html":{},"injectables/FilerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":149,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["nestinterceptor",{"_index":1121,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["nestjs",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/axios",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/CpuHealthIndicator.html":{},"modules/FilerModule.html":{},"injectables/FilerService.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/HealthCheckService.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MailjetModule.html":{},"injectables/MailjetService.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"controllers/PayementController.html":{},"modules/PayementModule.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"interfaces/UploadedMulterFileI.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":2081,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":1562,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":2083,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":220,"title":{},"body":{"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{},"injectables/RtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2087,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":112,"title":{},"body":{"classes/Activity.html":{},"controllers/AuthController.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/HandleChangeEmailDto.html":{},"classes/Image.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks-1.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume-1.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdatePwdDto.html":{},"classes/User-1.html":{},"dependencies.html":{},"classes/sendFiileDto.html":{}}}],["nestjs/terminus",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"injectables/CpuHealthIndicator.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/PrismaHealthIndicator.html":{},"dependencies.html":{}}}],["new",{"_index":70,"title":{},"body":{"injectables/ActivitiesService.html":{},"controllers/AuthController.html":{},"injectables/FilerService.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"interfaces/UploadedMulterFileI.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newemail",{"_index":489,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/EmailChange.html":{}}}],["newexpirationdate",{"_index":1254,"title":{},"body":{"injectables/PayementService.html":{}}}],["newpassword",{"_index":498,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["newrelic",{"_index":1134,"title":{},"body":{"injectables/NewrelicInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["newrelic.gettransaction",{"_index":1143,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["newrelic.startwebtransaction(context.gethandler().name",{"_index":1141,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["newrelicinterceptor",{"_index":1111,"title":{"injectables/NewrelicInterceptor.html":{}},"body":{"injectables/NewrelicInterceptor.html":{},"coverage.html":{}}}],["newsletter",{"_index":1901,"title":{},"body":{"classes/SetUserSettingsDto.html":{},"classes/User-1.html":{}}}],["next",{"_index":1116,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["next.handle().pipe",{"_index":1144,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["node",{"_index":987,"title":{},"body":{"injectables/MailjetService.html":{},"dependencies.html":{},"index.html":{}}}],["notfoundexception",{"_index":2015,"title":{},"body":{"guards/UserNotFoundGuard.html":{}}}],["notfoundexception('user",{"_index":2017,"title":{},"body":{"guards/UserNotFoundGuard.html":{}}}],["nothing",{"_index":1209,"title":{},"body":{"injectables/PayementService.html":{}}}],["now",{"_index":1956,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["null",{"_index":750,"title":{},"body":{"interfaces/CustomValidationArguments.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":766,"title":{},"body":{"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostsResponse.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"classes/PaginationDto.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":1485,"title":{},"body":{"injectables/PostService.html":{}}}],["obj[prop",{"_index":1515,"title":{},"body":{"injectables/PostService.html":{}}}],["object",{"_index":512,"title":{},"body":{"classes/CheckoutSession.html":{},"interfaces/CustomValidationArguments.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"injectables/ProfileService.html":{},"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["object.constructor",{"_index":744,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["object.keys(criteria).length",{"_index":1535,"title":{},"body":{"injectables/PostService.html":{}}}],["object.keys(obj[prop]).length",{"_index":1519,"title":{},"body":{"injectables/PostService.html":{}}}],["object.values(body",{"_index":1800,"title":{},"body":{"injectables/ProfileService.html":{}}}],["objects",{"_index":1481,"title":{},"body":{"injectables/PostService.html":{}}}],["observable",{"_index":1120,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["offer_service/urgent",{"_index":1627,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["officedocument.presentationml.presentation",{"_index":2241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officedocument.spreadsheetml.sheet",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officedocument.wordprocessingml.document",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["old",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["optional",{"_index":54,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/CreatePostDto.html":{},"interfaces/CustomValidationArguments.html":{},"injectables/FilerService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/Image.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"classes/Profile-2.html":{},"injectables/ProfileService.html":{},"classes/Resume-1.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":745,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["orderby",{"_index":971,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/PostService.html":{}}}],["originalname",{"_index":1936,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["orm",{"_index":2183,"title":{},"body":{"index.html":{}}}],["os",{"_index":586,"title":{},"body":{"injectables/CpuHealthIndicator.html":{}}}],["os.cpus().length",{"_index":591,"title":{},"body":{"injectables/CpuHealthIndicator.html":{}}}],["os.loadavg",{"_index":588,"title":{},"body":{"injectables/CpuHealthIndicator.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilerModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"modules/MailjetModule.html":{},"modules/MessengerModule.html":{},"modules/PayementModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"overview.html":{}}}],["overview",{"_index":2211,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownerid",{"_index":925,"title":{},"body":{"classes/Image.html":{},"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/ProfileService.html":{},"classes/Resume-1.html":{},"injectables/ResumesService.html":{}}}],["p2002",{"_index":1566,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["p2023",{"_index":1569,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["package",{"_index":1630,"title":{"dependencies.html":{},"properties.html":{}},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["package_dimensions",{"_index":1605,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["paginationdto",{"_index":1148,"title":{"classes/PaginationDto.html":{}},"body":{"classes/PaginationDto.html":{},"controllers/PostController.html":{},"coverage.html":{}}}],["paginationdto.skip",{"_index":1405,"title":{},"body":{"controllers/PostController.html":{}}}],["paginationdto.take",{"_index":1404,"title":{},"body":{"controllers/PostController.html":{}}}],["paid",{"_index":541,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{}}}],["paiement",{"_index":626,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{}}}],["paiement'})@isoptional",{"_index":1433,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["pair",{"_index":1513,"title":{},"body":{"injectables/PostService.html":{}}}],["param",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"injectables/FilerService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":818,"title":{},"body":{"injectables/FilerService.html":{}}}],["params.contenttype",{"_index":826,"title":{},"body":{"injectables/FilerService.html":{}}}],["parent",{"_index":1137,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["parms",{"_index":2008,"title":{},"body":{"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["partialtype",{"_index":1922,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{}}}],["partialtype(createauthdto",{"_index":1923,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["partialtype(createpayementdto",{"_index":1926,"title":{},"body":{"classes/UpdatePayementDto.html":{}}}],["partialtype(createpostdto",{"_index":1928,"title":{},"body":{"classes/UpdatePostDto.html":{}}}],["partialtype(createprofiledto",{"_index":1931,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["passport",{"_index":223,"title":{},"body":{"injectables/AtStrategy.html":{},"injectables/RtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":219,"title":{},"body":{"injectables/AtStrategy.html":{},"injectables/RtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":226,"title":{},"body":{"injectables/AtStrategy.html":{},"injectables/RtStrategy.html":{}}}],["passreqtocallback",{"_index":1872,"title":{},"body":{"injectables/RtStrategy.html":{}}}],["password",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangeEmailDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdatePwdDto.html":{},"classes/User-1.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["password')@post('reset",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["password')@post('reset/:token",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PostController.html":{}}}],["patch(':id",{"_index":1414,"title":{},"body":{"controllers/PostController.html":{}}}],["patch('changeemail",{"_index":448,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('changepwd",{"_index":446,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('readmessages",{"_index":1062,"title":{},"body":{"controllers/MessengerController.html":{}}}],["patch('settings",{"_index":442,"title":{},"body":{"controllers/AuthController.html":{}}}],["path",{"_index":908,"title":{},"body":{"controllers/HealthCheckController.html":{},"injectables/ProfileService.html":{}}}],["pay",{"_index":548,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["payement",{"_index":1160,"title":{},"body":{"controllers/PayementController.html":{},"injectables/PayementService.html":{}}}],["payement.controller",{"_index":1190,"title":{},"body":{"modules/PayementModule.html":{}}}],["payement.dto",{"_index":1175,"title":{},"body":{"controllers/PayementController.html":{},"injectables/PayementService.html":{},"classes/UpdatePayementDto.html":{}}}],["payement.dto.ts",{"_index":614,"title":{},"body":{"classes/CreatePayementDto.html":{},"classes/UpdatePayementDto.html":{},"coverage.html":{}}}],["payement.dto.ts:5",{"_index":617,"title":{},"body":{"classes/CreatePayementDto.html":{}}}],["payement.dto.ts:6",{"_index":616,"title":{},"body":{"classes/CreatePayementDto.html":{}}}],["payement.service",{"_index":1174,"title":{},"body":{"controllers/PayementController.html":{},"modules/PayementModule.html":{}}}],["payement/payement.module",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["payementcontroller",{"_index":1158,"title":{"controllers/PayementController.html":{}},"body":{"controllers/PayementController.html":{},"modules/PayementModule.html":{},"coverage.html":{}}}],["payementmodule",{"_index":170,"title":{"modules/PayementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PayementModule.html":{},"modules.html":{},"overview.html":{}}}],["payementservice",{"_index":1173,"title":{"injectables/PayementService.html":{}},"body":{"controllers/PayementController.html":{},"modules/PayementModule.html":{},"injectables/PayementService.html":{},"coverage.html":{},"overview.html":{}}}],["payload",{"_index":218,"title":{},"body":{"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"injectables/RtStrategy.html":{}}}],["payload'})@apinotfoundresponse({description",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload'})@httpcode(200)@useguards(undefined)@patch('settings",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{}}}],["payment",{"_index":534,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["payment_intent",{"_index":513,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["payment_method_types",{"_index":514,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["payment_status",{"_index":515,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["pdf",{"_index":1774,"title":{},"body":{"injectables/ProfileService.html":{}}}],["period",{"_index":1647,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["plain",{"_index":2160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["please",{"_index":2200,"title":{},"body":{"index.html":{}}}],["ports",{"_index":2173,"title":{},"body":{"index.html":{}}}],["post",{"_index":144,"title":{"classes/Post.html":{},"classes/Post-1.html":{}},"body":{"classes/Activity-1.html":{},"controllers/AuthController.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/GetPostsResponse.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra.html":{},"injectables/PostService.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["post('/addimage",{"_index":1390,"title":{},"body":{"controllers/PostController.html":{}}}],["post('/bookmark",{"_index":1399,"title":{},"body":{"controllers/PostController.html":{}}}],["post('login",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":422,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset/:token",{"_index":428,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('send",{"_index":998,"title":{},"body":{"injectables/MailjetService.html":{}}}],["post('sendfile",{"_index":1067,"title":{},"body":{"controllers/MessengerController.html":{}}}],["post('sendmessage",{"_index":1058,"title":{},"body":{"controllers/MessengerController.html":{}}}],["post('webhook",{"_index":1170,"title":{},"body":{"controllers/PayementController.html":{}}}],["post.controller",{"_index":1452,"title":{},"body":{"modules/PostModule.html":{}}}],["post.dto",{"_index":1368,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/UpdatePostDto.html":{}}}],["post.dto.ts",{"_index":620,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetPostDto.html":{},"classes/SelectPostsDto.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["post.dto.ts:12",{"_index":1891,"title":{},"body":{"classes/SelectPostsDto.html":{}}}],["post.dto.ts:13",{"_index":659,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:17",{"_index":655,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:19",{"_index":1892,"title":{},"body":{"classes/SelectPostsDto.html":{}}}],["post.dto.ts:21",{"_index":636,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:24",{"_index":1894,"title":{},"body":{"classes/SelectPostsDto.html":{}}}],["post.dto.ts:25",{"_index":656,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:29",{"_index":638,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/SelectPostsDto.html":{}}}],["post.dto.ts:34",{"_index":644,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/SelectPostsDto.html":{}}}],["post.dto.ts:38",{"_index":648,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:43",{"_index":651,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:48",{"_index":631,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:53",{"_index":632,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:58",{"_index":646,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:65",{"_index":652,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:9",{"_index":844,"title":{},"body":{"classes/GetPostDto.html":{}}}],["post.service",{"_index":1367,"title":{},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{}}}],["post/post.module",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["post?.id",{"_index":1257,"title":{},"body":{"injectables/PayementService.html":{}}}],["post?.user.id",{"_index":1546,"title":{},"body":{"injectables/PostService.html":{}}}],["post_extra",{"_index":148,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["postclass",{"_index":849,"title":{},"body":{"classes/GetPostsResponse.html":{},"controllers/PostController.html":{}}}],["postclass})@delete(':id",{"_index":1359,"title":{},"body":{"controllers/PostController.html":{}}}],["postclass})@get(':id",{"_index":1356,"title":{},"body":{"controllers/PostController.html":{}}}],["postclass})@patch(':id",{"_index":1363,"title":{},"body":{"controllers/PostController.html":{}}}],["postclass})@post",{"_index":1329,"title":{},"body":{"controllers/PostController.html":{}}}],["postcode",{"_index":697,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/SetUserSettingsDto.html":{},"classes/User-1.html":{}}}],["postcontroller",{"_index":1309,"title":{"controllers/PostController.html":{}},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{},"coverage.html":{}}}],["postextra",{"_index":146,"title":{"classes/PostExtra.html":{},"classes/PostExtra-1.html":{}},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/PostExtra-1.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["postfilterdto",{"_index":1350,"title":{"classes/PostFilterDto.html":{}},"body":{"controllers/PostController.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"coverage.html":{}}}],["postid",{"_index":468,"title":{},"body":{"classes/BookmarkDto.html":{},"classes/Bookmarks.html":{},"classes/CreatePayementDto.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{}}}],["postid_userid",{"_index":1507,"title":{},"body":{"injectables/PostService.html":{}}}],["postmodule",{"_index":171,"title":{"modules/PostModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["posts",{"_index":848,"title":{},"body":{"classes/GetPostsResponse.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/User-1.html":{}}}],["posts.dto",{"_index":1373,"title":{},"body":{"controllers/PostController.html":{}}}],["posts.dto.ts",{"_index":1884,"title":{},"body":{"classes/SelectAllPostsDto.html":{},"coverage.html":{}}}],["posts.dto.ts:12",{"_index":1887,"title":{},"body":{"classes/SelectAllPostsDto.html":{}}}],["posts.dto.ts:19",{"_index":1888,"title":{},"body":{"classes/SelectAllPostsDto.html":{}}}],["posts.dto.ts:24",{"_index":1890,"title":{},"body":{"classes/SelectAllPostsDto.html":{}}}],["posts.dto.ts:29",{"_index":1886,"title":{},"body":{"classes/SelectAllPostsDto.html":{}}}],["postservice",{"_index":1366,"title":{"injectables/PostService.html":{}},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"coverage.html":{},"overview.html":{}}}],["powerpoint",{"_index":2240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pr_1234",{"_index":1237,"title":{},"body":{"injectables/PayementService.html":{}}}],["practices",{"_index":2197,"title":{},"body":{"index.html":{}}}],["precaution",{"_index":804,"title":{},"body":{"injectables/FilerService.html":{}}}],["prefer",{"_index":2187,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/ImagesController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{},"controllers/ResumesController.html":{}}}],["price",{"_index":627,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PayementService.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["price'})@isoptional",{"_index":1438,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["price.product.metadata['period",{"_index":1252,"title":{},"body":{"injectables/PayementService.html":{}}}],["price_1n8oxegfeno2ku7nazl8s0gi",{"_index":1617,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["priority",{"_index":628,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["priority'})@isoptional",{"_index":1441,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["prisma",{"_index":55,"title":{},"body":{"injectables/ActivitiesService.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":1560,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["prisma.service",{"_index":1590,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":68,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"controllers/AuthController.html":{},"classes/CreateActivityDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/ImagesService.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/Profile-2.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/User-1.html":{},"dependencies.html":{}}}],["prisma/prisma.service",{"_index":38,"title":{},"body":{"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"modules/PayementModule.html":{},"injectables/PayementService.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["prismaclient",{"_index":1592,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientexceptionfilter",{"_index":353,"title":{"classes/PrismaClientExceptionFilter.html":{}},"body":{"controllers/AuthController.html":{},"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["prismahealthindicator",{"_index":891,"title":{"injectables/PrismaHealthIndicator.html":{}},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/PrismaHealthIndicator.html":{},"coverage.html":{},"overview.html":{}}}],["prismamodel",{"_index":150,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["prismamodule",{"_index":1585,"title":{"modules/PrismaModule.html":{}},"body":{"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":32,"title":{"injectables/PrismaService.html":{}},"body":{"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"modules/PayementModule.html":{},"injectables/PayementService.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":803,"title":{},"body":{"injectables/FilerService.html":{},"controllers/HealthCheckController.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{}}}],["process.env.digital_ocean_spaces_bucket",{"_index":821,"title":{},"body":{"injectables/FilerService.html":{}}}],["process.env.digital_ocean_spaces_instance_link}/${filename",{"_index":831,"title":{},"body":{"injectables/FilerService.html":{}}}],["process.env.digital_ocean_spaces_key",{"_index":1953,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["process.env.digital_ocean_spaces_secret",{"_index":1955,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_refresh_secret",{"_index":1871,"title":{},"body":{"injectables/RtStrategy.html":{}}}],["process.env.jwt_secret",{"_index":231,"title":{},"body":{"injectables/AtStrategy.html":{}}}],["process.env.mj_apikey_private",{"_index":991,"title":{},"body":{"injectables/MailjetService.html":{}}}],["process.env.mj_apikey_public",{"_index":989,"title":{},"body":{"injectables/MailjetService.html":{}}}],["process.env.server_url",{"_index":902,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["process.env.stripe_key",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.stripe_success_payement_url}?tab=advert&payment=error",{"_index":1244,"title":{},"body":{"injectables/PayementService.html":{}}}],["process.env.stripe_success_payement_url}?tab=advert&payment=success",{"_index":1243,"title":{},"body":{"injectables/PayementService.html":{}}}],["process.env.stripe_webhook_secret",{"_index":1262,"title":{},"body":{"injectables/PayementService.html":{}}}],["prod_nudo1sxnkt98li",{"_index":1620,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["product",{"_index":1238,"title":{},"body":{"injectables/PayementService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["productdto",{"_index":1600,"title":{"classes/ProductDto.html":{}},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"coverage.html":{}}}],["productid",{"_index":1204,"title":{},"body":{"injectables/PayementService.html":{}}}],["productlistresponsedto",{"_index":1178,"title":{"classes/ProductListResponseDto.html":{}},"body":{"controllers/PayementController.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"coverage.html":{}}}],["productlistresponsedto})@get('products",{"_index":1166,"title":{},"body":{"controllers/PayementController.html":{}}}],["productpriceid",{"_index":615,"title":{},"body":{"classes/CreatePayementDto.html":{}}}],["products",{"_index":1202,"title":{},"body":{"injectables/PayementService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["professionalfocus",{"_index":1656,"title":{"classes/ProfessionalFocus.html":{}},"body":{"classes/ProfessionalFocus.html":{},"coverage.html":{}}}],["profile",{"_index":63,"title":{"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{}},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"injectables/MessengerService.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profile.controller",{"_index":1693,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":1754,"title":{},"body":{"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts",{"_index":476,"title":{},"body":{"classes/BookmarkProfileDto.html":{},"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:7",{"_index":478,"title":{},"body":{"classes/BookmarkProfileDto.html":{}}}],["profile.id",{"_index":92,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["profile.profocus.split",{"_index":1813,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile.service",{"_index":1692,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile/decorators/api",{"_index":1054,"title":{},"body":{"controllers/MessengerController.html":{},"controllers/PostController.html":{}}}],["profile/dto/create",{"_index":66,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["profile/dto/pagination.dto",{"_index":1369,"title":{},"body":{"controllers/PostController.html":{}}}],["profile/profile.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["profile?.profocus",{"_index":1812,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile?.profocus?.split",{"_index":1810,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile_bookmarks",{"_index":126,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["profilebookmarks",{"_index":124,"title":{"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{}},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profilecontroller",{"_index":1691,"title":{},"body":{"modules/ProfileModule.html":{},"coverage.html":{}}}],["profileid",{"_index":91,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/ProfessionalFocus.html":{}}}],["profileimage",{"_index":1664,"title":{},"body":{"classes/Profile-2.html":{},"injectables/ProfileService.html":{}}}],["profilemodule",{"_index":172,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profiles",{"_index":1823,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profileservice",{"_index":1688,"title":{"injectables/ProfileService.html":{}},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["profocus",{"_index":1665,"title":{},"body":{"classes/Profile-2.html":{},"injectables/ProfileService.html":{}}}],["profocus.dto",{"_index":1750,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profocus.dto.ts",{"_index":666,"title":{},"body":{"classes/CreateProFocusDto.html":{},"coverage.html":{}}}],["profocus.dto.ts:12",{"_index":674,"title":{},"body":{"classes/CreateProFocusDto.html":{}}}],["profocusarray",{"_index":667,"title":{},"body":{"classes/CreateProFocusDto.html":{}}}],["project",{"_index":2206,"title":{},"body":{"index.html":{}}}],["promise",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CpuHealthIndicator.html":{},"injectables/FilerService.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":816,"title":{},"body":{"injectables/FilerService.html":{}}}],["promise.all",{"_index":1494,"title":{},"body":{"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["prop",{"_index":1514,"title":{},"body":{"injectables/PostService.html":{}}}],["properties",{"_index":97,"title":{"properties.html":{}},"body":{"classes/Activity.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/HandleChangeEmailDto.html":{},"classes/Image.html":{},"injectables/MailjetService.html":{},"classes/Message-1.html":{},"classes/PaginationDto.html":{},"injectables/PayementService.html":{},"classes/Post-1.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks-1.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume-1.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdatePwdDto.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User-1.html":{},"properties.html":{},"classes/sendFiileDto.html":{},"miscellaneous/variables.html":{}}}],["properties[filename",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["property",{"_index":730,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["propertydescriptor",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertyname",{"_index":742,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["provide",{"_index":1234,"title":{},"body":{"injectables/PayementService.html":{},"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/ResumesService.html":{}}}],["provider",{"_index":1937,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":28,"title":{},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilerModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"modules/MailjetModule.html":{},"modules/MessengerModule.html":{},"modules/PayementModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"overview.html":{}}}],["public",{"_index":580,"title":{},"body":{"injectables/CpuHealthIndicator.html":{},"injectables/FilerService.html":{},"injectables/ProfileService.html":{}}}],["pwd.dto",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["pwd.dto.ts",{"_index":496,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPwdDto.html":{},"classes/UpdatePwdDto.html":{},"coverage.html":{}}}],["pwd.dto.ts:4",{"_index":499,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdatePwdDto.html":{}}}],["pwd.dto.ts:5",{"_index":500,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPwdDto.html":{}}}],["python",{"_index":2268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quantity",{"_index":1241,"title":{},"body":{"injectables/PayementService.html":{}}}],["query",{"_index":1045,"title":{},"body":{"controllers/MessengerController.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["query(\"receiverid",{"_index":1068,"title":{},"body":{"controllers/MessengerController.html":{}}}],["query.replace(/[^a",{"_index":1554,"title":{},"body":{"injectables/PostService.html":{}}}],["rar",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["raw",{"_index":1272,"title":{},"body":{"injectables/PayementService.html":{}}}],["rawbody",{"_index":1268,"title":{},"body":{"injectables/PayementService.html":{}}}],["rawbodyrequest",{"_index":1169,"title":{},"body":{"controllers/PayementController.html":{},"injectables/PayementService.html":{}}}],["read",{"_index":825,"title":{},"body":{"injectables/FilerService.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{}}}],["read'})@patch('readmessages",{"_index":1037,"title":{},"body":{"controllers/MessengerController.html":{}}}],["readme",{"_index":2188,"title":{},"body":{"index.html":{}}}],["readmessages",{"_index":1025,"title":{},"body":{"controllers/MessengerController.html":{},"injectables/MessengerService.html":{}}}],["readmessages(@currentuser",{"_index":1063,"title":{},"body":{"controllers/MessengerController.html":{}}}],["readmessages(user",{"_index":1035,"title":{},"body":{"controllers/MessengerController.html":{},"injectables/MessengerService.html":{}}}],["readonly",{"_index":18,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/FilerService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/ProfileService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["receivedpassword",{"_index":2157,"title":{},"body":{"miscellaneous/functions.html":{}}}],["receiver",{"_index":1085,"title":{},"body":{"injectables/MessengerService.html":{}}}],["receiverid",{"_index":1041,"title":{},"body":{"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"classes/SendMessageDto.html":{},"classes/sendFiileDto.html":{}}}],["record",{"_index":735,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["recursively",{"_index":1510,"title":{},"body":{"injectables/PostService.html":{}}}],["redirect",{"_index":1198,"title":{},"body":{"injectables/PayementService.html":{}}}],["reflect",{"_index":2131,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RtStrategy.html":{}}}],["refresh_token",{"_index":143,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["refreshtoken",{"_index":141,"title":{"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{}},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"injectables/RtStrategy.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshtokens",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(@currentuser",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(user",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["register",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdecorator",{"_index":739,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["reject",{"_index":817,"title":{},"body":{"injectables/FilerService.html":{}}}],["reject(new",{"_index":832,"title":{},"body":{"injectables/FilerService.html":{}}}],["related",{"_index":2205,"title":{},"body":{"index.html":{}}}],["relevant",{"_index":2203,"title":{},"body":{"index.html":{}}}],["remove",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["remove(@param",{"_index":1418,"title":{},"body":{"controllers/PostController.html":{}}}],["remove(currentuser",{"_index":1476,"title":{},"body":{"injectables/PostService.html":{}}}],["remove(getpostdto",{"_index":1358,"title":{},"body":{"controllers/PostController.html":{}}}],["removeundefinedvalues",{"_index":1457,"title":{},"body":{"injectables/PostService.html":{}}}],["removeundefinedvalues(obj",{"_index":1478,"title":{},"body":{"injectables/PostService.html":{}}}],["replace('bearer",{"_index":1874,"title":{},"body":{"injectables/RtStrategy.html":{}}}],["repo",{"_index":2189,"title":{},"body":{"index.html":{}}}],["represent",{"_index":1462,"title":{},"body":{"injectables/PostService.html":{}}}],["represents",{"_index":1960,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["req",{"_index":1172,"title":{},"body":{"controllers/PayementController.html":{},"injectables/RtStrategy.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"injectables/RtStrategy.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"miscellaneous/variables.html":{}}}],["request(data",{"_index":1001,"title":{},"body":{"injectables/MailjetService.html":{}}}],["request.body.email",{"_index":2010,"title":{},"body":{"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["request.headers['stripe",{"_index":1266,"title":{},"body":{"injectables/PayementService.html":{}}}],["request.params.email",{"_index":2009,"title":{},"body":{"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["request.rawbody",{"_index":1269,"title":{},"body":{"injectables/PayementService.html":{}}}],["request.user",{"_index":2278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user.email",{"_index":2016,"title":{},"body":{"guards/UserNotFoundGuard.html":{}}}],["request?.user?.email",{"_index":2011,"title":{},"body":{"guards/UserFoundGuard.html":{}}}],["require('newrelic",{"_index":1135,"title":{},"body":{"injectables/NewrelicInterceptor.html":{},"miscellaneous/variables.html":{}}}],["require('util",{"_index":1133,"title":{},"body":{"injectables/NewrelicInterceptor.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":522,"title":{},"body":{"classes/CheckoutSession.html":{},"interfaces/CustomValidationArguments.html":{},"classes/GetPostDto.html":{},"classes/GetUserDto.html":{},"classes/HandleChangeEmailDto.html":{},"classes/PaginationDto.html":{},"injectables/PayementService.html":{},"classes/PostFilterDto.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["requires",{"_index":1131,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["res",{"_index":1550,"title":{},"body":{"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/FilerModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"modules/MailjetModule.html":{},"modules/MessengerModule.html":{},"modules/PayementModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"overview.html":{}}}],["reset_password",{"_index":140,"title":{},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["resetpassword",{"_index":138,"title":{"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{}},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpwd",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpwd(@param('token",{"_index":429,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpwd(token",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpwddto",{"_index":281,"title":{"classes/ResetPwdDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPwdDto.html":{},"coverage.html":{}}}],["resolve",{"_index":830,"title":{},"body":{"injectables/FilerService.html":{}}}],["resolves",{"_index":813,"title":{},"body":{"injectables/FilerService.html":{},"injectables/PostService.html":{}}}],["response",{"_index":868,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["response.status(409).json",{"_index":1572,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["response.status(httpstatus.conflict).json",{"_index":1567,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["response.status(status).json",{"_index":1570,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["response.status(statuscode).json(errorresponse",{"_index":878,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["result",{"_index":997,"title":{},"body":{"injectables/MailjetService.html":{},"injectables/PostService.html":{}}}],["result.response",{"_index":1003,"title":{},"body":{"injectables/MailjetService.html":{}}}],["results",{"_index":19,"title":{},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"injectables/CpuHealthIndicator.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"modules/FilerModule.html":{},"injectables/FilerService.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/HealthCheckService.html":{},"classes/Image.html":{},"classes/Image-1.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MailjetModule.html":{},"injectables/MailjetService.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"modules/PayementModule.html":{},"injectables/PayementService.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume.html":{},"classes/Resume-1.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdatePwdDto.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/sendFiileDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":130,"title":{"classes/Resume.html":{},"classes/Resume-1.html":{}},"body":{"classes/Activity-1.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation-1.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Post.html":{},"classes/PostExtra.html":{},"classes/Profile-1.html":{},"classes/ProfileBookmarks.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/ResetPassword.html":{},"classes/Resume.html":{},"classes/Resume-1.html":{},"injectables/ResumesService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.id",{"_index":1790,"title":{},"body":{"injectables/ProfileService.html":{}}}],["resumeids",{"_index":1861,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1769,"title":{},"body":{"injectables/ProfileService.html":{},"controllers/ResumesController.html":{}}}],["resumes.controller",{"_index":1852,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1846,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["resumes/resumes.service",{"_index":1694,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["resumescontroller",{"_index":1844,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumeservice",{"_index":1712,"title":{},"body":{"injectables/ProfileService.html":{}}}],["resumesmodule",{"_index":173,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1689,"title":{"injectables/ResumesService.html":{}},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["resumeurl",{"_index":1109,"title":{},"body":{"injectables/MessengerService.html":{},"injectables/ProfileService.html":{},"classes/Resume-1.html":{},"injectables/ResumesService.html":{}}}],["return",{"_index":86,"title":{},"body":{"injectables/ActivitiesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"interfaces/CustomValidationArguments.html":{},"injectables/FilerService.html":{},"controllers/HealthCheckController.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"miscellaneous/variables.html":{}}}],["returning",{"_index":1946,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["returns",{"_index":60,"title":{},"body":{"injectables/ActivitiesService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"injectables/CpuHealthIndicator.html":{},"injectables/FilerService.html":{},"classes/GlobalExceptionFilter.html":{},"controllers/HealthCheckController.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"miscellaneous/functions.html":{}}}],["reusmelink",{"_index":1863,"title":{},"body":{"injectables/ResumesService.html":{}}}],["rtstrategy",{"_index":458,"title":{"injectables/RtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/RtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["rxjs",{"_index":1122,"title":{},"body":{"injectables/NewrelicInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1124,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["s",{"_index":2162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["s3",{"_index":791,"title":{},"body":{"injectables/FilerService.html":{},"interfaces/UploadedMulterFileI.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["salt",{"_index":2046,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["same",{"_index":809,"title":{},"body":{"injectables/FilerService.html":{},"injectables/ProfileService.html":{}}}],["sanitizedquery",{"_index":1553,"title":{},"body":{"injectables/PostService.html":{}}}],["schema",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sdk",{"_index":800,"title":{},"body":{"injectables/FilerService.html":{},"interfaces/UploadedMulterFileI.html":{},"dependencies.html":{}}}],["search",{"_index":1552,"title":{},"body":{"injectables/PostService.html":{},"classes/SearchQueryDto.html":{}}}],["search.dto",{"_index":1379,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["search.dto.ts",{"_index":1878,"title":{},"body":{"classes/SearchQueryDto.html":{},"coverage.html":{}}}],["search.dto.ts:10",{"_index":1882,"title":{},"body":{"classes/SearchQueryDto.html":{}}}],["search.dto.ts:16",{"_index":1881,"title":{},"body":{"classes/SearchQueryDto.html":{}}}],["searchposts",{"_index":1458,"title":{},"body":{"injectables/PostService.html":{}}}],["searchposts(query",{"_index":1486,"title":{},"body":{"injectables/PostService.html":{}}}],["searchquery",{"_index":1353,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{}}}],["searchquery?.location",{"_index":1522,"title":{},"body":{"injectables/PostService.html":{}}}],["searchquery?.search",{"_index":1521,"title":{},"body":{"injectables/PostService.html":{}}}],["searchquerydto",{"_index":1348,"title":{"classes/SearchQueryDto.html":{}},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/SearchQueryDto.html":{},"coverage.html":{}}}],["secretaccesskey",{"_index":1954,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":230,"title":{},"body":{"injectables/AtStrategy.html":{},"injectables/RtStrategy.html":{}}}],["select",{"_index":1218,"title":{},"body":{"injectables/PayementService.html":{},"injectables/PostService.html":{}}}],["selectallpostsdto",{"_index":1340,"title":{"classes/SelectAllPostsDto.html":{}},"body":{"controllers/PostController.html":{},"classes/SelectAllPostsDto.html":{},"coverage.html":{}}}],["selectallpostsdto.priority",{"_index":1396,"title":{},"body":{"controllers/PostController.html":{}}}],["selectallpostsdto.skip",{"_index":1398,"title":{},"body":{"controllers/PostController.html":{}}}],["selectallpostsdto.take",{"_index":1397,"title":{},"body":{"controllers/PostController.html":{}}}],["selectallpostsdto.type",{"_index":1395,"title":{},"body":{"controllers/PostController.html":{}}}],["selectpostsdto",{"_index":1336,"title":{"classes/SelectPostsDto.html":{}},"body":{"controllers/PostController.html":{},"classes/SelectPostsDto.html":{},"coverage.html":{}}}],["selectpostsdto.priority",{"_index":1386,"title":{},"body":{"controllers/PostController.html":{}}}],["selectpostsdto.skip",{"_index":1388,"title":{},"body":{"controllers/PostController.html":{}}}],["selectpostsdto.take",{"_index":1387,"title":{},"body":{"controllers/PostController.html":{}}}],["selectpostsdto.type",{"_index":1385,"title":{},"body":{"controllers/PostController.html":{}}}],["selectpostsdto.userid",{"_index":1384,"title":{},"body":{"controllers/PostController.html":{}}}],["sell",{"_index":1240,"title":{},"body":{"injectables/PayementService.html":{}}}],["send",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemail",{"_index":979,"title":{},"body":{"injectables/MailjetService.html":{}}}],["sendemail(email",{"_index":981,"title":{},"body":{"injectables/MailjetService.html":{}}}],["sendfiiledto",{"_index":2049,"title":{"classes/sendFiileDto.html":{}},"body":{"coverage.html":{},"classes/sendFiileDto.html":{}}}],["sendfile",{"_index":1026,"title":{},"body":{"controllers/MessengerController.html":{},"injectables/MessengerService.html":{}}}],["sendfile(files",{"_index":1039,"title":{},"body":{"controllers/MessengerController.html":{},"injectables/MessengerService.html":{}}}],["sendmessage",{"_index":1077,"title":{},"body":{"injectables/MessengerService.html":{}}}],["sendmessage(user",{"_index":1082,"title":{},"body":{"injectables/MessengerService.html":{}}}],["sendmessagedto",{"_index":1028,"title":{"classes/SendMessageDto.html":{}},"body":{"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"classes/SendMessageDto.html":{},"coverage.html":{}}}],["sendmessagedto.content",{"_index":1093,"title":{},"body":{"injectables/MessengerService.html":{}}}],["sendmessagedto.receiverid",{"_index":1090,"title":{},"body":{"injectables/MessengerService.html":{}}}],["sent",{"_index":426,"title":{},"body":{"controllers/AuthController.html":{}}}],["sentry/node",{"_index":65,"title":{},"body":{"injectables/ActivitiesService.html":{},"dependencies.html":{}}}],["server",{"_index":873,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"controllers/HealthCheckController.html":{}}}],["service",{"_index":1084,"title":{},"body":{"injectables/MessengerService.html":{},"injectables/PostService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"injectables/ProfileService.html":{},"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["session",{"_index":1196,"title":{},"body":{"injectables/PayementService.html":{}}}],["session.type.ts",{"_index":1260,"title":{},"body":{"injectables/PayementService.html":{}}}],["set",{"_index":88,"title":{},"body":{"injectables/ActivitiesService.html":{},"controllers/AuthController.html":{},"injectables/ProfileService.html":{}}}],["set'})@apiunauthorizedresponse({description",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["set(values).size",{"_index":1801,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setprofocus",{"_index":1705,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setprofocus(user",{"_index":1732,"title":{},"body":{"injectables/ProfileService.html":{}}}],["settings",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["settings')@apibearerauth('jwt",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["settings')@apiokresponse({description",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["settings.dto",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{}}}],["settings.dto.ts",{"_index":1900,"title":{},"body":{"classes/SetUserSettingsDto.html":{},"coverage.html":{}}}],["settings.dto.ts:10",{"_index":1905,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["settings.dto.ts:11",{"_index":1915,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["settings.dto.ts:12",{"_index":1907,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["settings.dto.ts:13",{"_index":1914,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["settings.dto.ts:18",{"_index":1918,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["settings.dto.ts:23",{"_index":1917,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["settings.dto.ts:27",{"_index":1913,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["settings.dto.ts:6",{"_index":1908,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["settings.dto.ts:7",{"_index":1911,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["settings.dto.ts:8",{"_index":1906,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["settings.dto.ts:9",{"_index":1910,"title":{},"body":{"classes/SetUserSettingsDto.html":{}}}],["setup",{"_index":535,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["setup_intent",{"_index":516,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["setuseractivity",{"_index":1706,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setuseractivity(user",{"_index":1735,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setuserbio",{"_index":1707,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setuserbio(user",{"_index":1737,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setusersettingsdto",{"_index":324,"title":{"classes/SetUserSettingsDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SetUserSettingsDto.html":{},"coverage.html":{}}}],["setusertags",{"_index":1708,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setusertags(user",{"_index":1739,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shippable",{"_index":1606,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["shipping_address_collection",{"_index":517,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["sig",{"_index":1265,"title":{},"body":{"injectables/PayementService.html":{}}}],["signature",{"_index":1267,"title":{},"body":{"injectables/PayementService.html":{}}}],["simple",{"_index":1959,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["size",{"_index":956,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/ResumesService.html":{},"interfaces/UploadedMulterFileI.html":{}}}],["skip",{"_index":953,"title":{},"body":{"injectables/ImagesService.html":{},"classes/PaginationDto.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtStrategy.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"injectables/CpuHealthIndicator.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"modules/FilerModule.html":{},"injectables/FilerService.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/HealthCheckService.html":{},"classes/Image.html":{},"classes/Image-1.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MailjetModule.html":{},"injectables/MailjetService.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"modules/PayementModule.html":{},"injectables/PayementService.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume.html":{},"classes/Resume-1.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePayementDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdatePwdDto.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"classes/sendFiileDto.html":{}}}],["space",{"_index":2191,"title":{},"body":{"index.html":{}}}],["spaces",{"_index":1944,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["spacesendpoint",{"_index":1948,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spacesendpoint.href",{"_index":1950,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["specific",{"_index":1475,"title":{},"body":{"injectables/PostService.html":{}}}],["src/.../allowedfiletypes.ts",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":2138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../argon.ts",{"_index":2142,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../bcrypt.ts",{"_index":2141,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../digitalocean",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":2143,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../fileupload",{"_index":2139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../image",{"_index":2231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../iscompanynamevalid.ts",{"_index":2144,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../jwtpayload.type.ts",{"_index":2221,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../jwtpayloadwithrt.type.ts",{"_index":2222,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":2140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../newrelic.interceptor.ts",{"_index":2232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tokens.type.ts",{"_index":2223,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../upload",{"_index":2233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/_gen/prisma",{"_index":95,"title":{},"body":{"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"classes/Image.html":{},"classes/Image-1.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"classes/PostExtra.html":{},"classes/PostExtra-1.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/Resume.html":{},"classes/Resume-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/activities/activities.controller.ts",{"_index":6,"title":{},"body":{"controllers/ActivitiesController.html":{},"coverage.html":{}}}],["src/activities/activities.module.ts",{"_index":36,"title":{},"body":{"modules/ActivitiesModule.html":{}}}],["src/activities/activities.service.ts",{"_index":41,"title":{},"body":{"injectables/ActivitiesService.html":{},"coverage.html":{}}}],["src/activities/activities.service.ts:11",{"_index":59,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/activities.service.ts:35",{"_index":64,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/activities.service.ts:8",{"_index":50,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/app.controller.ts",{"_index":154,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":156,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":206,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":207,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:111",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:118",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:133",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:148",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:161",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:180",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:197",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:213",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:57",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:70",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:82",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:89",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:98",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":2035,"title":{},"body":{"coverage.html":{}}}],["src/auth/decorators/current",{"_index":2037,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/change",{"_index":487,"title":{},"body":{"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/create",{"_index":603,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/get",{"_index":853,"title":{},"body":{"classes/GetUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/handle",{"_index":879,"title":{},"body":{"classes/HandleChangeEmailDto.html":{},"coverage.html":{}}}],["src/auth/dto/iscompanynamevalid.ts",{"_index":728,"title":{},"body":{"interfaces/CustomValidationArguments.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/auth/dto/reset",{"_index":1838,"title":{},"body":{"classes/ResetPwdDto.html":{},"coverage.html":{}}}],["src/auth/dto/update",{"_index":1899,"title":{},"body":{"classes/SetUserSettingsDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdatePwdDto.html":{},"coverage.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":233,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/auth/guards/user",{"_index":2000,"title":{},"body":{"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/access",{"_index":211,"title":{},"body":{"injectables/AtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/refresh",{"_index":1866,"title":{},"body":{"injectables/RtStrategy.html":{},"coverage.html":{}}}],["src/auth/types/jwtpayload.type.ts",{"_index":2224,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/auth/types/jwtpayloadwithrt.type.ts",{"_index":2225,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/auth/types/tokens.type.ts",{"_index":2226,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/auth/utils/argon.ts",{"_index":2041,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/auth/utils/bcrypt.ts",{"_index":2044,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/digitalocean",{"_index":781,"title":{},"body":{"modules/FilerModule.html":{},"injectables/FilerService.html":{},"interfaces/UploadedMulterFileI.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/exceptions/global",{"_index":855,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["src/health",{"_index":576,"title":{},"body":{"injectables/CpuHealthIndicator.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"injectables/HealthCheckService.html":{},"injectables/PrismaHealthIndicator.html":{},"coverage.html":{}}}],["src/images/images.controller.ts",{"_index":934,"title":{},"body":{"controllers/ImagesController.html":{},"coverage.html":{}}}],["src/images/images.module.ts",{"_index":942,"title":{},"body":{"modules/ImagesModule.html":{}}}],["src/images/images.service.ts",{"_index":944,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["src/images/images.service.ts:12",{"_index":950,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:41",{"_index":954,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:7",{"_index":947,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/mailjet/mailjet.module.ts",{"_index":976,"title":{},"body":{"modules/MailjetModule.html":{}}}],["src/mailjet/mailjet.service.ts",{"_index":978,"title":{},"body":{"injectables/MailjetService.html":{},"coverage.html":{}}}],["src/mailjet/mailjet.service.ts:12",{"_index":984,"title":{},"body":{"injectables/MailjetService.html":{}}}],["src/mailjet/mailjet.service.ts:5",{"_index":980,"title":{},"body":{"injectables/MailjetService.html":{}}}],["src/main.ts",{"_index":2047,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/messenger/dto/send",{"_index":1895,"title":{},"body":{"classes/SendMessageDto.html":{},"coverage.html":{},"classes/sendFiileDto.html":{}}}],["src/messenger/messenger.controller.ts",{"_index":1021,"title":{},"body":{"controllers/MessengerController.html":{},"coverage.html":{}}}],["src/messenger/messenger.controller.ts:31",{"_index":1031,"title":{},"body":{"controllers/MessengerController.html":{}}}],["src/messenger/messenger.controller.ts:45",{"_index":1034,"title":{},"body":{"controllers/MessengerController.html":{}}}],["src/messenger/messenger.controller.ts:54",{"_index":1038,"title":{},"body":{"controllers/MessengerController.html":{}}}],["src/messenger/messenger.controller.ts:63",{"_index":1044,"title":{},"body":{"controllers/MessengerController.html":{}}}],["src/messenger/messenger.module.ts",{"_index":1073,"title":{},"body":{"modules/MessengerModule.html":{}}}],["src/messenger/messenger.service.ts",{"_index":1076,"title":{},"body":{"injectables/MessengerService.html":{},"coverage.html":{}}}],["src/messenger/messenger.service.ts:10",{"_index":1078,"title":{},"body":{"injectables/MessengerService.html":{}}}],["src/messenger/messenger.service.ts:125",{"_index":1080,"title":{},"body":{"injectables/MessengerService.html":{}}}],["src/messenger/messenger.service.ts:148",{"_index":1081,"title":{},"body":{"injectables/MessengerService.html":{}}}],["src/messenger/messenger.service.ts:22",{"_index":1083,"title":{},"body":{"injectables/MessengerService.html":{}}}],["src/messenger/messenger.service.ts:86",{"_index":1079,"title":{},"body":{"injectables/MessengerService.html":{}}}],["src/messenger/types/allowedfiletypes.ts",{"_index":2052,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/newrelic/newrelic.interceptor.ts",{"_index":1112,"title":{},"body":{"injectables/NewrelicInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/newrelic/newrelic.interceptor.ts:16",{"_index":1118,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["src/payement/dto/create",{"_index":613,"title":{},"body":{"classes/CreatePayementDto.html":{},"coverage.html":{}}}],["src/payement/dto/update",{"_index":1925,"title":{},"body":{"classes/UpdatePayementDto.html":{},"coverage.html":{}}}],["src/payement/entities/payement.entity.ts",{"_index":502,"title":{},"body":{"classes/CheckoutSession.html":{},"coverage.html":{}}}],["src/payement/entities/payement.entity.ts:10",{"_index":523,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:12",{"_index":524,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:14",{"_index":525,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:16",{"_index":526,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:18",{"_index":527,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:20",{"_index":530,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:22",{"_index":531,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:24",{"_index":537,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:26",{"_index":539,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:28",{"_index":540,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:30",{"_index":543,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:32",{"_index":544,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:34",{"_index":545,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:38",{"_index":549,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:40",{"_index":550,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:42",{"_index":551,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:44",{"_index":533,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:48",{"_index":552,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:6",{"_index":528,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/payement.entity.ts:8",{"_index":538,"title":{},"body":{"classes/CheckoutSession.html":{}}}],["src/payement/entities/productres.ts",{"_index":1601,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"coverage.html":{}}}],["src/payement/entities/productres.ts:106",{"_index":1654,"title":{},"body":{"classes/ProductListResponseDto.html":{}}}],["src/payement/entities/productres.ts:109",{"_index":1652,"title":{},"body":{"classes/ProductListResponseDto.html":{}}}],["src/payement/entities/productres.ts:115",{"_index":1653,"title":{},"body":{"classes/ProductListResponseDto.html":{}}}],["src/payement/entities/productres.ts:121",{"_index":1655,"title":{},"body":{"classes/ProductListResponseDto.html":{}}}],["src/payement/entities/productres.ts:13",{"_index":1629,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:19",{"_index":1612,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:26",{"_index":1613,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:32",{"_index":1616,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:38",{"_index":1618,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:41",{"_index":1619,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:44",{"_index":1622,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:50",{"_index":1624,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:56",{"_index":1626,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:62",{"_index":1628,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:68",{"_index":1632,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:7",{"_index":1621,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:74",{"_index":1633,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:80",{"_index":1636,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:83",{"_index":1638,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:86",{"_index":1639,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:89",{"_index":1642,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:95",{"_index":1645,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/entities/productres.ts:98",{"_index":1646,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/payement/payement.controller.ts",{"_index":1159,"title":{},"body":{"controllers/PayementController.html":{},"coverage.html":{}}}],["src/payement/payement.controller.ts:31",{"_index":1165,"title":{},"body":{"controllers/PayementController.html":{}}}],["src/payement/payement.controller.ts:39",{"_index":1171,"title":{},"body":{"controllers/PayementController.html":{}}}],["src/payement/payement.controller.ts:50",{"_index":1167,"title":{},"body":{"controllers/PayementController.html":{}}}],["src/payement/payement.module.ts",{"_index":1189,"title":{},"body":{"modules/PayementModule.html":{}}}],["src/payement/payement.service.ts",{"_index":1191,"title":{},"body":{"injectables/PayementService.html":{},"coverage.html":{}}}],["src/payement/payement.service.ts:10",{"_index":1193,"title":{},"body":{"injectables/PayementService.html":{}}}],["src/payement/payement.service.ts:116",{"_index":1208,"title":{},"body":{"injectables/PayementService.html":{}}}],["src/payement/payement.service.ts:173",{"_index":1201,"title":{},"body":{"injectables/PayementService.html":{}}}],["src/payement/payement.service.ts:24",{"_index":1195,"title":{},"body":{"injectables/PayementService.html":{}}}],["src/payement/payement.service.ts:81",{"_index":1205,"title":{},"body":{"injectables/PayementService.html":{}}}],["src/post/dto/bookmark.dto.ts",{"_index":467,"title":{},"body":{"classes/BookmarkDto.html":{},"coverage.html":{}}}],["src/post/dto/bookmark.dto.ts:7",{"_index":470,"title":{},"body":{"classes/BookmarkDto.html":{}}}],["src/post/dto/bookmark.dto.ts:8",{"_index":471,"title":{},"body":{"classes/BookmarkDto.html":{}}}],["src/post/dto/create",{"_index":619,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/SearchQueryDto.html":{},"coverage.html":{}}}],["src/post/dto/get",{"_index":841,"title":{},"body":{"classes/GetPostDto.html":{},"coverage.html":{}}}],["src/post/dto/post",{"_index":1424,"title":{},"body":{"classes/PostFilterDto.html":{},"coverage.html":{}}}],["src/post/dto/select",{"_index":1883,"title":{},"body":{"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"coverage.html":{}}}],["src/post/dto/update",{"_index":1927,"title":{},"body":{"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["src/post/entities/getbookmarksresponse.ts",{"_index":835,"title":{},"body":{"classes/GetBookmarksResponse.html":{},"coverage.html":{}}}],["src/post/entities/getbookmarksresponse.ts:5",{"_index":837,"title":{},"body":{"classes/GetBookmarksResponse.html":{}}}],["src/post/entities/getbookmarksresponse.ts:7",{"_index":838,"title":{},"body":{"classes/GetBookmarksResponse.html":{}}}],["src/post/entities/getpostsresponse.ts",{"_index":847,"title":{},"body":{"classes/GetPostsResponse.html":{},"coverage.html":{}}}],["src/post/entities/getpostsresponse.ts:5",{"_index":850,"title":{},"body":{"classes/GetPostsResponse.html":{}}}],["src/post/entities/getpostsresponse.ts:7",{"_index":851,"title":{},"body":{"classes/GetPostsResponse.html":{}}}],["src/post/post.controller.ts",{"_index":1310,"title":{},"body":{"controllers/PostController.html":{},"coverage.html":{}}}],["src/post/post.controller.ts:120",{"_index":1326,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:136",{"_index":1346,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:159",{"_index":1333,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:172",{"_index":1352,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:194",{"_index":1357,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:205",{"_index":1364,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:220",{"_index":1360,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:47",{"_index":1330,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:60",{"_index":1338,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:82",{"_index":1322,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.controller.ts:99",{"_index":1343,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.module.ts",{"_index":1451,"title":{},"body":{"modules/PostModule.html":{}}}],["src/post/post.service.ts",{"_index":1454,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["src/post/post.service.ts:114",{"_index":1472,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:17",{"_index":1459,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:193",{"_index":1460,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:202",{"_index":1461,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:215",{"_index":1473,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:22",{"_index":1464,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:248",{"_index":1465,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:263",{"_index":1479,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:280",{"_index":1468,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:342",{"_index":1470,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:360",{"_index":1489,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:387",{"_index":1477,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:410",{"_index":1487,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:45",{"_index":1466,"title":{},"body":{"injectables/PostService.html":{}}}],["src/prisma",{"_index":1558,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["src/prisma/prisma.module.ts",{"_index":1589,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":1591,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":1596,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/profile/decorators/api",{"_index":2060,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/profile/decorators/file",{"_index":2062,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/profile/decorators/fileupload",{"_index":2065,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/profile/decorators/upload",{"_index":2069,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/profile/dto/bookmark",{"_index":475,"title":{},"body":{"classes/BookmarkProfileDto.html":{},"coverage.html":{}}}],["src/profile/dto/create",{"_index":592,"title":{},"body":{"classes/CreateActivityDto.html":{},"classes/CreateBioDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateTagsDto.html":{},"coverage.html":{}}}],["src/profile/dto/delete",{"_index":758,"title":{},"body":{"classes/DeleteUserGalleryDto.html":{},"coverage.html":{}}}],["src/profile/dto/pagination.dto.ts",{"_index":1149,"title":{},"body":{"classes/PaginationDto.html":{},"coverage.html":{}}}],["src/profile/dto/pagination.dto.ts:11",{"_index":1151,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/profile/dto/pagination.dto.ts:18",{"_index":1153,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/profile/dto/update",{"_index":1930,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profile/entities/profile.entity.ts",{"_index":1662,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/profile/filters/image",{"_index":2072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/profile/profile.controller.ts",{"_index":2075,"title":{},"body":{"coverage.html":{}}}],["src/profile/profile.module.ts",{"_index":1690,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":1696,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:122",{"_index":1746,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:169",{"_index":1731,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:174",{"_index":1729,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:18",{"_index":1714,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:213",{"_index":1736,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:229",{"_index":1738,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:249",{"_index":1740,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:26",{"_index":1744,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:282",{"_index":1734,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:304",{"_index":1724,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:314",{"_index":1718,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:325",{"_index":1716,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:354",{"_index":1722,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:52",{"_index":1742,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:59",{"_index":1725,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:67",{"_index":1720,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:82",{"_index":1727,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1845,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1851,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1853,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:12",{"_index":1858,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:29",{"_index":1860,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:41",{"_index":1862,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:7",{"_index":1856,"title":{},"body":{"injectables/ResumesService.html":{}}}],["stack",{"_index":2182,"title":{},"body":{"index.html":{}}}],["started",{"_index":2166,"title":{"index.html":{}},"body":{}}],["statement",{"_index":1634,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["statement_descriptor",{"_index":1607,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["statements",{"_index":2020,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1002,"title":{},"body":{"injectables/MailjetService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["status.status",{"_index":1004,"title":{},"body":{"injectables/MailjetService.html":{}}}],["statuscode",{"_index":870,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["storage",{"_index":898,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["storage.fra1.digitaloceanspaces.com/tippjob",{"_index":1782,"title":{},"body":{"injectables/ProfileService.html":{}}}],["store",{"_index":1771,"title":{},"body":{"injectables/ProfileService.html":{}}}],["strategies",{"_index":463,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":222,"title":{},"body":{"injectables/AtStrategy.html":{},"injectables/RtStrategy.html":{}}}],["string",{"_index":98,"title":{},"body":{"classes/Activity.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"classes/GetPostDto.html":{},"classes/GetUserDto.html":{},"classes/HandleChangeEmailDto.html":{},"classes/Image.html":{},"injectables/MailjetService.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks-1.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume-1.html":{},"injectables/ResumesService.html":{},"classes/SearchQueryDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdatePwdDto.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User-1.html":{},"miscellaneous/functions.html":{},"classes/sendFiileDto.html":{},"miscellaneous/variables.html":{}}}],["string'})@isoptional()@isstring",{"_index":1893,"title":{},"body":{"classes/SelectPostsDto.html":{}}}],["stringindexedobject",{"_index":2292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string})@isoptional()@isstring",{"_index":645,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["string})@isstring",{"_index":637,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["string})@isstring()@isoptional",{"_index":630,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["string})@isstring({message",{"_index":1435,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["stripe",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"classes/CheckoutSession.html":{},"injectables/PayementService.html":{},"dependencies.html":{}}}],["stripe(process.env.stripe_key",{"_index":1215,"title":{},"body":{"injectables/PayementService.html":{}}}],["stripe.lineitem",{"_index":529,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["stripe.price",{"_index":1248,"title":{},"body":{"injectables/PayementService.html":{}}}],["stripe.product",{"_index":1249,"title":{},"body":{"injectables/PayementService.html":{}}}],["stripe/stripe",{"_index":2092,"title":{},"body":{"dependencies.html":{}}}],["stripemodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["stripemodule.forroot",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["submit_type",{"_index":518,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["subscription",{"_index":519,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["subscription_update",{"_index":536,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["success",{"_index":1207,"title":{},"body":{"injectables/PayementService.html":{}}}],["success_url",{"_index":520,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["successfully",{"_index":89,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/ProfileService.html":{}}}],["super",{"_index":227,"title":{},"body":{"injectables/AtStrategy.html":{},"injectables/CpuHealthIndicator.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/RtStrategy.html":{}}}],["super.catch(exception",{"_index":1574,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["support",{"_index":2208,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2209,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1275,"title":{},"body":{"injectables/PayementService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["t",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":2078,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2077,"title":{},"body":{"coverage.html":{}}}],["tag(s",{"_index":1808,"title":{},"body":{"injectables/ProfileService.html":{}}}],["tag_1",{"_index":682,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/Profile-2.html":{},"injectables/ProfileService.html":{}}}],["tag_2",{"_index":683,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/Profile-2.html":{},"injectables/ProfileService.html":{}}}],["tag_3",{"_index":684,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/Profile-2.html":{},"injectables/ProfileService.html":{}}}],["tags",{"_index":685,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/Profile-2.html":{},"injectables/ProfileService.html":{}}}],["tags.dto",{"_index":1748,"title":{},"body":{"injectables/ProfileService.html":{}}}],["tags.dto.ts",{"_index":681,"title":{},"body":{"classes/CreateTagsDto.html":{},"coverage.html":{}}}],["tags.dto.ts:6",{"_index":687,"title":{},"body":{"classes/CreateTagsDto.html":{}}}],["tags.dto.ts:7",{"_index":688,"title":{},"body":{"classes/CreateTagsDto.html":{}}}],["tags.dto.ts:8",{"_index":689,"title":{},"body":{"classes/CreateTagsDto.html":{}}}],["take",{"_index":952,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"classes/PaginationDto.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{}}}],["takes",{"_index":1768,"title":{},"body":{"injectables/ProfileService.html":{}}}],["tap",{"_index":1123,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["tar",{"_index":2265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":743,"title":{},"body":{"interfaces/CustomValidationArguments.html":{},"miscellaneous/variables.html":{}}}],["targetname",{"_index":731,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["targettype",{"_index":732,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["tax",{"_index":1637,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["tax_code",{"_index":1608,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["tech",{"_index":2181,"title":{},"body":{"index.html":{}}}],["templateid",{"_index":983,"title":{},"body":{"injectables/MailjetService.html":{}}}],["templatelanguage",{"_index":993,"title":{},"body":{"injectables/MailjetService.html":{}}}],["terminusmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthCheckModule.html":{}}}],["text",{"_index":1009,"title":{},"body":{"classes/Message-1.html":{},"injectables/MessengerService.html":{}}}],["text/css",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/csv",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/html",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/markdown",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/plain",{"_index":2242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.$on('beforeexit",{"_index":1598,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.activityservice.createactivity(user",{"_index":1797,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.activityservice.upsertactivity",{"_index":1796,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.appservice.gethello",{"_index":159,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.changeemail(user",{"_index":449,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.changepassword(user",{"_index":447,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.create(createuserdto",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.generateresetpwd(resetpwddto.email",{"_index":424,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getuser(user",{"_index":435,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getuserbyid(user",{"_index":439,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.handlechangeemail(tokendto.token",{"_index":454,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(createauthdto",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(userid",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtokens",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.resetpwd(token",{"_index":430,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.updatesettings(user",{"_index":443,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.verifyuser(token",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.client",{"_index":988,"title":{},"body":{"injectables/MailjetService.html":{}}}],["this.cpu.ishealthy",{"_index":913,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.db.ishealthy('database",{"_index":904,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.filerservice.uploadfile(file",{"_index":964,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/ResumesService.html":{}}}],["this.getstatus(key",{"_index":1582,"title":{},"body":{"injectables/PrismaHealthIndicator.html":{}}}],["this.healthcheckservice.check",{"_index":900,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.http.pingcheck",{"_index":901,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.imagesservice.createimage(file",{"_index":1501,"title":{},"body":{"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["this.imagesservice.getusergallery(dbuser",{"_index":1765,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.imagesservice.getusergallery(user",{"_index":1759,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.memory.checkheap('memory_heap",{"_index":909,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.memory.checkrss('memory_rss",{"_index":912,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.messengerservice.getconversations(user",{"_index":1061,"title":{},"body":{"controllers/MessengerController.html":{}}}],["this.messengerservice.readmessages(user",{"_index":1065,"title":{},"body":{"controllers/MessengerController.html":{}}}],["this.messengerservice.sendfile(files",{"_index":1069,"title":{},"body":{"controllers/MessengerController.html":{}}}],["this.messengerservice.sendmessage(user",{"_index":1059,"title":{},"body":{"controllers/MessengerController.html":{}}}],["this.payementservice.create(createpayementdto",{"_index":1182,"title":{},"body":{"controllers/PayementController.html":{}}}],["this.payementservice.getproducts",{"_index":1186,"title":{},"body":{"controllers/PayementController.html":{}}}],["this.payementservice.webhook(request",{"_index":1184,"title":{},"body":{"controllers/PayementController.html":{}}}],["this.postservice.addimage(file",{"_index":1391,"title":{},"body":{"controllers/PostController.html":{}}}],["this.postservice.bookmarkpost(user",{"_index":1401,"title":{},"body":{"controllers/PostController.html":{}}}],["this.postservice.create(createpostdto",{"_index":1382,"title":{},"body":{"controllers/PostController.html":{}}}],["this.postservice.deletebookmark(user",{"_index":1408,"title":{},"body":{"controllers/PostController.html":{}}}],["this.postservice.findalluserposts",{"_index":1383,"title":{},"body":{"controllers/PostController.html":{}}}],["this.postservice.findfilteredposts",{"_index":1410,"title":{},"body":{"controllers/PostController.html":{}}}],["this.postservice.findone(getpostdto.id",{"_index":1413,"title":{},"body":{"controllers/PostController.html":{}}}],["this.postservice.getallposts",{"_index":1394,"title":{},"body":{"controllers/PostController.html":{}}}],["this.postservice.getbookmarks",{"_index":1403,"title":{},"body":{"controllers/PostController.html":{}}}],["this.postservice.remove(user",{"_index":1419,"title":{},"body":{"controllers/PostController.html":{}}}],["this.postservice.update(user",{"_index":1415,"title":{},"body":{"controllers/PostController.html":{}}}],["this.prisma.activity.create",{"_index":73,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["this.prisma.activity.upsert",{"_index":90,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["this.prisma.bookmarks.count",{"_index":1505,"title":{},"body":{"injectables/PostService.html":{}}}],["this.prisma.bookmarks.create",{"_index":1502,"title":{},"body":{"injectables/PostService.html":{}}}],["this.prisma.bookmarks.delete",{"_index":1506,"title":{},"body":{"injectables/PostService.html":{}}}],["this.prisma.bookmarks.findmany",{"_index":1504,"title":{},"body":{"injectables/PostService.html":{}}}],["this.prisma.conversation.create",{"_index":1096,"title":{},"body":{"injectables/MessengerService.html":{}}}],["this.prisma.conversation.findfirst",{"_index":1089,"title":{},"body":{"injectables/MessengerService.html":{}}}],["this.prisma.conversation.findmany",{"_index":1097,"title":{},"body":{"injectables/MessengerService.html":{}}}],["this.prisma.conversation.update",{"_index":1091,"title":{},"body":{"injectables/MessengerService.html":{}}}],["this.prisma.image.create",{"_index":966,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.prisma.image.deletemany",{"_index":1760,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.image.findmany",{"_index":969,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.prisma.post.count",{"_index":1499,"title":{},"body":{"injectables/PostService.html":{}}}],["this.prisma.post.create",{"_index":1492,"title":{},"body":{"injectables/PostService.html":{}}}],["this.prisma.post.delete",{"_index":1551,"title":{},"body":{"injectables/PostService.html":{}}}],["this.prisma.post.findmany",{"_index":1495,"title":{},"body":{"injectables/PostService.html":{}}}],["this.prisma.post.findunique",{"_index":1253,"title":{},"body":{"injectables/PayementService.html":{},"injectables/PostService.html":{}}}],["this.prisma.post.update",{"_index":1543,"title":{},"body":{"injectables/PostService.html":{}}}],["this.prisma.post.updatemany",{"_index":1256,"title":{},"body":{"injectables/PayementService.html":{}}}],["this.prisma.profile.findfirst",{"_index":1811,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.findunique",{"_index":1795,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.upsert",{"_index":1756,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profilebookmarks.count",{"_index":1825,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profilebookmarks.create",{"_index":1822,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profilebookmarks.delete",{"_index":1819,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profilebookmarks.findfirst",{"_index":1817,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profilebookmarks.findmany",{"_index":1824,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.resume.create",{"_index":1108,"title":{},"body":{"injectables/MessengerService.html":{},"injectables/ResumesService.html":{}}}],["this.prisma.resume.deletemany",{"_index":1864,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.prisma.resume.findfirst",{"_index":1779,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.resume.findmany",{"_index":1865,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.prisma.user.delete",{"_index":1815,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.user.findfirst",{"_index":2012,"title":{},"body":{"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["this.prisma.user.findunique",{"_index":1217,"title":{},"body":{"injectables/PayementService.html":{},"injectables/ProfileService.html":{}}}],["this.prismaservice.$queryraw`select",{"_index":1581,"title":{},"body":{"injectables/PrismaHealthIndicator.html":{}}}],["this.removeundefinedvalues(obj[prop",{"_index":1517,"title":{},"body":{"injectables/PostService.html":{}}}],["this.removeundefinedvalues(where",{"_index":1532,"title":{},"body":{"injectables/PostService.html":{}}}],["this.resumeservice.createresume(file",{"_index":1784,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.resumeservice.deleteresumes",{"_index":1788,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.resumeservice.getuserresumes(dbuser",{"_index":1794,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.resumeservice.getuserresumes(user",{"_index":1791,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.s3.putobject(params",{"_index":828,"title":{},"body":{"injectables/FilerService.html":{}}}],["this.storage.checkstorage('storage",{"_index":905,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.stripe",{"_index":1214,"title":{},"body":{"injectables/PayementService.html":{}}}],["this.stripe.checkout.sessions.create",{"_index":1232,"title":{},"body":{"injectables/PayementService.html":{}}}],["this.stripe.prices.retrieve",{"_index":1224,"title":{},"body":{"injectables/PayementService.html":{}}}],["this.stripe.prices.retrieve(productid",{"_index":1246,"title":{},"body":{"injectables/PayementService.html":{}}}],["this.stripe.products.list",{"_index":1289,"title":{},"body":{"injectables/PayementService.html":{}}}],["this.stripe.webhooks.constructevent(rawbody",{"_index":1273,"title":{},"body":{"injectables/PayementService.html":{}}}],["this.updatepostpayement",{"_index":1227,"title":{},"body":{"injectables/PayementService.html":{}}}],["thresholdpercent",{"_index":906,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["through",{"_index":1512,"title":{},"body":{"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["throw",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{}}}],["throws",{"_index":1537,"title":{},"body":{"injectables/PostService.html":{}}}],["timestamp",{"_index":1614,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["tippjob",{"_index":822,"title":{},"body":{"injectables/FilerService.html":{},"index.html":{}}}],["title",{"_index":629,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post-1.html":{},"injectables/PostService.html":{}}}],["token",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"classes/HandleChangeEmailDto.html":{},"injectables/RtStrategy.html":{}}}],["token.strategy.ts",{"_index":212,"title":{},"body":{"injectables/AtStrategy.html":{},"injectables/RtStrategy.html":{},"coverage.html":{}}}],["token.strategy.ts:15",{"_index":217,"title":{},"body":{"injectables/AtStrategy.html":{}}}],["token.strategy.ts:17",{"_index":1869,"title":{},"body":{"injectables/RtStrategy.html":{}}}],["token.strategy.ts:7",{"_index":214,"title":{},"body":{"injectables/AtStrategy.html":{}}}],["token.strategy.ts:8",{"_index":1867,"title":{},"body":{"injectables/RtStrategy.html":{}}}],["tokendto",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokens",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/typealiases.html":{}}}],["tokens'})@apiunauthorizedresponse({description",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["tooling",{"_index":2177,"title":{},"body":{"index.html":{}}}],["totalcount",{"_index":836,"title":{},"body":{"classes/GetBookmarksResponse.html":{},"classes/GetPostsResponse.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["transaction",{"_index":1142,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["transaction.end",{"_index":1147,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["transformer",{"_index":845,"title":{},"body":{"classes/GetPostDto.html":{},"classes/GetUserDto.html":{},"classes/HandleChangeEmailDto.html":{},"classes/PaginationDto.html":{},"classes/PostFilterDto.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"dependencies.html":{}}}],["trigger",{"_index":1211,"title":{},"body":{"injectables/PayementService.html":{}}}],["triggered",{"_index":1206,"title":{},"body":{"injectables/PayementService.html":{}}}],["trim",{"_index":1875,"title":{},"body":{"injectables/RtStrategy.html":{}}}],["true",{"_index":566,"title":{},"body":{"classes/Conversation.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/HandleChangeEmailDto.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"classes/Post-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"injectables/PrismaHealthIndicator.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"injectables/ProfileService.html":{},"injectables/RtStrategy.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"miscellaneous/variables.html":{}}}],["true})@get",{"_index":1033,"title":{},"body":{"controllers/MessengerController.html":{}}}],["true})@isoptional",{"_index":643,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@length(0",{"_index":669,"title":{},"body":{"classes/CreateProFocusDto.html":{}}}],["true})@matches(/^[^,]*$/gm",{"_index":671,"title":{},"body":{"classes/CreateProFocusDto.html":{}}}],["true})@type(undefined)@isstring",{"_index":843,"title":{},"body":{"classes/GetPostDto.html":{},"classes/GetUserDto.html":{},"classes/HandleChangeEmailDto.html":{}}}],["try",{"_index":1264,"title":{},"body":{"injectables/PayementService.html":{},"injectables/PrismaHealthIndicator.html":{}}}],["tuvshinb4y4r/prisma",{"_index":2095,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":53,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/Bookmarks.html":{},"classes/ChangeEmailDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CheckoutSession.html":{},"classes/Conversation.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"injectables/FilerService.html":{},"classes/GetBookmarksResponse.html":{},"classes/GetPostDto.html":{},"classes/GetPostsResponse.html":{},"classes/GetUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/HandleChangeEmailDto.html":{},"classes/Image.html":{},"injectables/ImagesService.html":{},"injectables/MailjetService.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/NewrelicInterceptor.html":{},"classes/PaginationDto.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra-1.html":{},"classes/PostFilterDto.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaHealthIndicator.html":{},"injectables/PrismaService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"classes/ProfessionalFocus.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks-1.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"classes/ResetPwdDto.html":{},"classes/Resume-1.html":{},"injectables/ResumesService.html":{},"injectables/RtStrategy.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"classes/UpdatePwdDto.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"classes/sendFiileDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type'})@isoptional",{"_index":1446,"title":{},"body":{"classes/PostFilterDto.html":{}}}],["type.individual",{"_index":1995,"title":{},"body":{"classes/User-1.html":{}}}],["typealiases",{"_index":2219,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":751,"title":{},"body":{"interfaces/CustomValidationArguments.html":{},"injectables/PostService.html":{}}}],["types",{"_index":225,"title":{},"body":{"injectables/AtStrategy.html":{},"controllers/AuthController.html":{},"injectables/RtStrategy.html":{}}}],["types/allowedfiletypes",{"_index":1088,"title":{},"body":{"injectables/MessengerService.html":{}}}],["types/bcryptjs",{"_index":2098,"title":{},"body":{"dependencies.html":{}}}],["types/multer",{"_index":2100,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":2102,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1128,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["uname",{"_index":982,"title":{},"body":{"injectables/MailjetService.html":{}}}],["unauthorized",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorized'})@apibadrequestresponse({description",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception",{"_index":1747,"title":{},"body":{"injectables/ProfileService.html":{}}}],["unauthorizedexception('unauthorized",{"_index":1792,"title":{},"body":{"injectables/ProfileService.html":{}}}],["unbookmarked",{"_index":1821,"title":{},"body":{"injectables/ProfileService.html":{}}}],["undefined",{"_index":1496,"title":{},"body":{"injectables/PostService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"miscellaneous/functions.html":{}}}],["unique",{"_index":1938,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{}}}],["unit",{"_index":1640,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["unit_label",{"_index":1609,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["unknown",{"_index":61,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":2217,"title":{},"body":{"properties.html":{}}}],["unpaid",{"_index":542,"title":{},"body":{"classes/CheckoutSession.html":{},"injectables/PayementService.html":{}}}],["update",{"_index":93,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/MessengerService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{}}}],["update(getpostdto",{"_index":1361,"title":{},"body":{"controllers/PostController.html":{}}}],["update(user",{"_index":1488,"title":{},"body":{"injectables/PostService.html":{}}}],["updateauthdto",{"_index":1921,"title":{"classes/UpdateAuthDto.html":{}},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["updated",{"_index":1086,"title":{},"body":{"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{},"injectables/ProfileService.html":{}}}],["updatedat",{"_index":558,"title":{},"body":{"classes/Conversation.html":{},"classes/Message-1.html":{},"injectables/MessengerService.html":{},"classes/User-1.html":{}}}],["updatedpost",{"_index":1255,"title":{},"body":{"injectables/PayementService.html":{}}}],["updatemany",{"_index":1099,"title":{},"body":{"injectables/MessengerService.html":{}}}],["updatepayementdto",{"_index":1924,"title":{"classes/UpdatePayementDto.html":{}},"body":{"classes/UpdatePayementDto.html":{},"coverage.html":{}}}],["updatepostdto",{"_index":1362,"title":{"classes/UpdatePostDto.html":{}},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["updatepostdto.extra",{"_index":1544,"title":{},"body":{"injectables/PostService.html":{}}}],["updatepostdto.extra.join",{"_index":1545,"title":{},"body":{"injectables/PostService.html":{}}}],["updatepostpayement",{"_index":1192,"title":{},"body":{"injectables/PayementService.html":{}}}],["updatepostpayement(postid",{"_index":1203,"title":{},"body":{"injectables/PayementService.html":{}}}],["updateprofiledto",{"_index":1929,"title":{"classes/UpdateProfileDto.html":{}},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updatepwddto",{"_index":264,"title":{"classes/UpdatePwdDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/UpdatePwdDto.html":{},"coverage.html":{}}}],["updatesettings",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["updatesettings(user",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["upload",{"_index":814,"title":{},"body":{"injectables/FilerService.html":{},"injectables/ProfileService.html":{}}}],["uploaded",{"_index":1323,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{},"interfaces/UploadedMulterFileI.html":{}}}],["uploadedfile",{"_index":1107,"title":{},"body":{"injectables/MessengerService.html":{},"controllers/PostController.html":{}}}],["uploadedfile.resumeurl",{"_index":1110,"title":{},"body":{"injectables/MessengerService.html":{}}}],["uploadedfiles",{"_index":1046,"title":{},"body":{"controllers/MessengerController.html":{}}}],["uploadedmulterfilei",{"_index":793,"title":{"interfaces/UploadedMulterFileI.html":{}},"body":{"injectables/FilerService.html":{},"interfaces/UploadedMulterFileI.html":{},"coverage.html":{}}}],["uploadfile",{"_index":787,"title":{},"body":{"injectables/FilerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadfile(file",{"_index":792,"title":{},"body":{"injectables/FilerService.html":{}}}],["uploadfile2",{"_index":2071,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadgalleryimage",{"_index":1709,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadgalleryimage(file",{"_index":1741,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadprofileimage",{"_index":1710,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadprofileimage(file",{"_index":1743,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadresume",{"_index":1711,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadresume(files",{"_index":1745,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadsvisibility",{"_index":1902,"title":{},"body":{"classes/SetUserSettingsDto.html":{},"classes/User-1.html":{}}}],["uppdated",{"_index":1490,"title":{},"body":{"injectables/PostService.html":{}}}],["upsertactivity",{"_index":46,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["upsertactivity(profile",{"_index":62,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["url",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{},"classes/CheckoutSession.html":{},"injectables/PayementService.html":{},"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["usefilters",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["usefilters(prismaclientexceptionfilter",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{}}}],["useguards(authguard('jwt",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{}}}],["useguards(undefined)@httpcode(httpstatus.ok)@apiunauthorizedresponse({description",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(userfoundguard",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":57,"title":{"classes/User.html":{},"classes/User-1.html":{}},"body":{"injectables/ActivitiesService.html":{},"classes/Activity-1.html":{},"controllers/AuthController.html":{},"classes/Bookmarks.html":{},"classes/Bookmarks-1.html":{},"classes/Conversation.html":{},"classes/Conversation-1.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/EmailChange.html":{},"classes/EmailChange-1.html":{},"classes/EmailVerification.html":{},"classes/EmailVerification-1.html":{},"classes/Image-1.html":{},"injectables/ImagesService.html":{},"classes/Message.html":{},"classes/Message-1.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"controllers/PayementController.html":{},"injectables/PayementService.html":{},"classes/Post.html":{},"classes/Post-1.html":{},"controllers/PostController.html":{},"classes/PostExtra.html":{},"injectables/PostService.html":{},"classes/Profile-1.html":{},"classes/Profile-2.html":{},"classes/ProfileBookmarks.html":{},"classes/ProfileBookmarks-1.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword.html":{},"classes/ResetPassword-1.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/SetUserSettingsDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"guards/UserFoundGuard.html":{},"guards/UserNotFoundGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user,@query(\"conversationid",{"_index":1064,"title":{},"body":{"controllers/MessengerController.html":{}}}],["user.decorator",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/PayementController.html":{},"controllers/PostController.html":{}}}],["user.decorator.ts",{"_index":2038,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.dto.ts",{"_index":691,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":715,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:11",{"_index":700,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:12",{"_index":699,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:13",{"_index":702,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":713,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:15",{"_index":711,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":703,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":706,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":709,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":708,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{}}}],["user.id",{"_index":84,"title":{},"body":{"injectables/ActivitiesService.html":{},"controllers/AuthController.html":{},"injectables/ImagesService.html":{},"injectables/MessengerService.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{},"injectables/ResumesService.html":{}}}],["user.refreshtoken",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.refreshtoken.tostring",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["usera",{"_index":559,"title":{},"body":{"classes/Conversation.html":{},"injectables/MessengerService.html":{}}}],["useraid",{"_index":560,"title":{},"body":{"classes/Conversation.html":{},"injectables/MessengerService.html":{}}}],["userb",{"_index":561,"title":{},"body":{"classes/Conversation.html":{},"injectables/MessengerService.html":{}}}],["userbid",{"_index":562,"title":{},"body":{"classes/Conversation.html":{},"injectables/MessengerService.html":{}}}],["userclass",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["userclass})@apibearerauth('jwt",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["userclass})@apiunauthorizedresponse({description",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["useremail",{"_index":1216,"title":{},"body":{"injectables/PayementService.html":{}}}],["useremail?.email",{"_index":1233,"title":{},"body":{"injectables/PayementService.html":{}}}],["userfoundguard",{"_index":350,"title":{"guards/UserFoundGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/UserFoundGuard.html":{},"coverage.html":{}}}],["userid",{"_index":85,"title":{},"body":{"injectables/ActivitiesService.html":{},"controllers/AuthController.html":{},"classes/BookmarkDto.html":{},"classes/Bookmarks.html":{},"classes/EmailChange.html":{},"classes/EmailVerification.html":{},"injectables/PayementService.html":{},"classes/Post-1.html":{},"injectables/PostService.html":{},"classes/Profile-2.html":{},"injectables/ProfileService.html":{},"classes/RefreshToken-1.html":{},"classes/ResetPassword-1.html":{},"injectables/ResumesService.html":{},"classes/SelectPostsDto.html":{}}}],["username",{"_index":995,"title":{},"body":{"injectables/MailjetService.html":{}}}],["usernotfoundguard",{"_index":2014,"title":{"guards/UserNotFoundGuard.html":{}},"body":{"guards/UserNotFoundGuard.html":{},"coverage.html":{}}}],["users",{"_index":756,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["usertype",{"_index":698,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/User-1.html":{}}}],["usevalue",{"_index":1958,"title":{},"body":{"interfaces/UploadedMulterFileI.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":436,"title":{},"body":{"controllers/AuthController.html":{}}}],["util",{"_index":1132,"title":{},"body":{"injectables/NewrelicInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["util.inspect",{"_index":1145,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["util.inspect(context.gethandler().name",{"_index":1140,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["uuid",{"_index":2135,"title":{},"body":{"dependencies.html":{}}}],["v1/products",{"_index":1651,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductListResponseDto.html":{}}}],["v3.1",{"_index":1000,"title":{},"body":{"injectables/MailjetService.html":{}}}],["valid",{"_index":1549,"title":{},"body":{"injectables/PostService.html":{}}}],["validate",{"_index":213,"title":{},"body":{"injectables/AtStrategy.html":{},"injectables/RtStrategy.html":{}}}],["validate(payload",{"_index":215,"title":{},"body":{"injectables/AtStrategy.html":{}}}],["validate(req",{"_index":1868,"title":{},"body":{"injectables/RtStrategy.html":{}}}],["validate(value",{"_index":746,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["validating",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["validationoptions",{"_index":733,"title":{},"body":{"interfaces/CustomValidationArguments.html":{},"miscellaneous/functions.html":{}}}],["validator",{"_index":473,"title":{},"body":{"classes/BookmarkDto.html":{},"classes/BookmarkProfileDto.html":{},"classes/ChangeEmailDto.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBioDto.html":{},"classes/CreatePayementDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateProFocusDto.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CustomValidationArguments.html":{},"classes/DeleteUserGalleryDto.html":{},"classes/GetPostDto.html":{},"classes/GetUserDto.html":{},"classes/HandleChangeEmailDto.html":{},"classes/PaginationDto.html":{},"classes/PostFilterDto.html":{},"classes/ResetPwdDto.html":{},"classes/SearchQueryDto.html":{},"classes/SelectAllPostsDto.html":{},"classes/SelectPostsDto.html":{},"classes/SendMessageDto.html":{},"classes/SetUserSettingsDto.html":{},"dependencies.html":{},"classes/sendFiileDto.html":{}}}],["value",{"_index":734,"title":{},"body":{"interfaces/CustomValidationArguments.html":{},"injectables/PostService.html":{},"interfaces/UploadedMulterFileI.html":{},"classes/User-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.trim().length",{"_index":752,"title":{},"body":{"interfaces/CustomValidationArguments.html":{}}}],["values",{"_index":1799,"title":{},"body":{"injectables/ProfileService.html":{}}}],["values.length",{"_index":1802,"title":{},"body":{"injectables/ProfileService.html":{}}}],["var",{"_index":1130,"title":{},"body":{"injectables/NewrelicInterceptor.html":{}}}],["variable",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":994,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/MailjetService.html":{},"miscellaneous/variables.html":{}}}],["verificationlink",{"_index":996,"title":{},"body":{"injectables/MailjetService.html":{}}}],["verified",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["verified'})@apinotfoundresponse({description",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["verify",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["verify(@param('token",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{}}}],["verify(token",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifying",{"_index":1775,"title":{},"body":{"injectables/ProfileService.html":{}}}],["version",{"_index":999,"title":{},"body":{"injectables/MailjetService.html":{},"properties.html":{}}}],["video/mp4",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/quicktime",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/x",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visibility",{"_index":1903,"title":{},"body":{"classes/SetUserSettingsDto.html":{},"classes/User-1.html":{}}}],["visibility.public",{"_index":1993,"title":{},"body":{"classes/User-1.html":{}}}],["void",{"_index":740,"title":{},"body":{"interfaces/CustomValidationArguments.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/PostService.html":{},"classes/PrismaClientExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":1239,"title":{},"body":{"injectables/PayementService.html":{}}}],["webhook",{"_index":1162,"title":{},"body":{"controllers/PayementController.html":{},"injectables/PayementService.html":{}}}],["webhook(@req",{"_index":1183,"title":{},"body":{"controllers/PayementController.html":{}}}],["webhook(request",{"_index":1168,"title":{},"body":{"controllers/PayementController.html":{},"injectables/PayementService.html":{}}}],["where.and",{"_index":1533,"title":{},"body":{"injectables/PostService.html":{}}}],["where.and.filter((criteria",{"_index":1534,"title":{},"body":{"injectables/PostService.html":{}}}],["without",{"_index":1230,"title":{},"body":{"injectables/PayementService.html":{}}}],["world",{"_index":209,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":797,"title":{},"body":{"injectables/FilerService.html":{},"injectables/ImagesService.html":{},"injectables/PayementService.html":{},"injectables/PostService.html":{},"injectables/ProfileService.html":{},"miscellaneous/functions.html":{}}}],["z0",{"_index":1556,"title":{},"body":{"injectables/PostService.html":{}}}],["za",{"_index":1555,"title":{},"body":{"injectables/PostService.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilerModule.html":{},"modules/HealthCheckModule.html":{},"modules/ImagesModule.html":{},"modules/MailjetModule.html":{},"modules/MessengerModule.html":{},"modules/PayementModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/ResumesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/ActivitiesController.html":{"url":"controllers/ActivitiesController.html","title":"controller - ActivitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ActivitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/activities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                activities\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ActivitiesService } from './activities.service';\n\n@Controller('activities')\nexport class ActivitiesController {\n  constructor(private readonly activitiesService: ActivitiesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActivitiesModule.html":{"url":"modules/ActivitiesModule.html","title":"module - ActivitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    ActivitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActivitiesModule\n\n\n\ncluster_ActivitiesModule_providers\n\n\n\n\nActivitiesService\n\nActivitiesService\n\n\n\nActivitiesModule\n\nActivitiesModule\n\nActivitiesModule -->\n\nActivitiesService->ActivitiesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nActivitiesModule -->\n\nPrismaService->ActivitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/activities/activities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ActivitiesService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ActivitiesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ActivitiesService } from './activities.service';\nimport { ActivitiesController } from './activities.controller';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Module({\n  controllers: [ActivitiesController],\n  providers: [ActivitiesService, PrismaService],\n})\nexport class ActivitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActivitiesService.html":{"url":"injectables/ActivitiesService.html","title":"injectable - ActivitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActivitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/activities.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createActivity\n                            \n                            \n                                    Async\n                                upsertActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/activities/activities.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createActivity\n                        \n                    \n                \n            \n            \n                \n                    \n                    createActivity(user: User, createActivityDto: CreateActivityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/activities/activities.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createActivityDto\n                                    \n                                                CreateActivityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        upsertActivity\n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertActivity(profile: Profile, createActivityDto: CreateActivityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/activities/activities.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                Profile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createActivityDto\n                                    \n                                                CreateActivityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { User } from '@sentry/node';\nimport { CreateActivityDto } from '../profile/dto/create-activity.dto';\nimport { Profile } from '@prisma/client';\n\n@Injectable()\nexport class ActivitiesService {\n  constructor(private readonly prisma: PrismaService) {}\n  //CREATE NEW ACTIVITY FOR A USER\n  async createActivity(user: User, createActivityDto: CreateActivityDto) {\n    await this.prisma.activity.create({\n      data: {\n        job: createActivityDto.job,\n        industry: createActivityDto.industry,\n        jobTitle: createActivityDto.jobTitle,\n        profile: {\n          connectOrCreate: {\n            create: {\n              user: {\n                connect: {\n                  id: user.id,\n                },\n              },\n            },\n            where: {\n              userId: user.id,\n            },\n          },\n        },\n      },\n    });\n    return { message: 'Activity set successfully' };\n  }\n  async upsertActivity(profile: Profile, createActivityDto: CreateActivityDto) {\n    await this.prisma.activity.upsert({\n      where: { profileId: profile.id },\n      update: {\n        job: createActivityDto.job,\n        industry: createActivityDto.industry,\n        jobTitle: createActivityDto.jobTitle,\n      },\n      create: {\n        profile: {\n          connect: {\n            id: profile.id,\n          },\n        },\n        job: createActivityDto.job,\n        industry: createActivityDto.industry,\n        jobTitle: createActivityDto.jobTitle,\n      },\n    });\n    return { message: 'Activity set successfully' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Activity.html":{"url":"classes/Activity.html","title":"class - Activity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Activity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/activity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                industry\n                            \n                            \n                                    \n                                    Optional\n                                job\n                            \n                            \n                                    \n                                    Optional\n                                jobTitle\n                            \n                            \n                                    \n                                profile\n                            \n                            \n                                    \n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/activity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        industry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Industry\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Industry, enumName: 'Industry'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/activity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Job\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Job, enumName: 'Job'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/activity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        jobTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/activity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Profile})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/activity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/activity.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Profile } from './profile';\nimport { Job, Industry } from '@prisma/client';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class Activity {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiPropertyOptional({ enum: Job, enumName: 'Job' })\n  job?: Job;\n\n  @ApiPropertyOptional({ enum: Industry, enumName: 'Industry' })\n  industry?: Industry;\n\n  @ApiPropertyOptional({ type: String })\n  jobTitle?: string;\n\n  @ApiProperty({ type: () => Profile })\n  profile: Profile;\n\n  @ApiProperty({ type: String })\n  profileId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Activity-1.html":{"url":"classes/Activity-1.html","title":"class - Activity-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Activity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _Activity\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nActivitiesModule\n\nActivitiesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActivitiesModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFilerModule\n\nFilerModule\n\nAppModule -->\n\nFilerModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nMailjetModule\n\nMailjetModule\n\nAppModule -->\n\nMailjetModule->AppModule\n\n\n\n\n\nMessengerModule\n\nMessengerModule\n\nAppModule -->\n\nMessengerModule->AppModule\n\n\n\n\n\nPayementModule\n\nPayementModule\n\nAppModule -->\n\nPayementModule->AppModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActivitiesModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            FilerModule\n                        \n                        \n                            HealthCheckModule\n                        \n                        \n                            ImagesModule\n                        \n                        \n                            MailjetModule\n                        \n                        \n                            MessengerModule\n                        \n                        \n                            PayementModule\n                        \n                        \n                            PostModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            ResumesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { PrismaService } from './prisma/prisma.service';\nimport { MailjetModule } from './mailjet/mailjet.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { FilerModule } from './digitalocean-filer/digitalocean-filer.module';\nimport { ImagesModule } from './images/images.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { ActivitiesModule } from './activities/activities.module';\nimport { HealthCheckModule } from './health-check/health-check.module';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { PostModule } from './post/post.module';\nimport { MessengerModule } from './messenger/messenger.module';\nimport { StripeModule } from 'nestjs-stripe';\nimport { PayementModule } from './payement/payement.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    MailjetModule,\n    ProfileModule,\n    FilerModule,\n    ImagesModule,\n    ResumesModule,\n    ActivitiesModule,\n    HealthCheckModule,\n    TerminusModule,\n    HttpModule,\n    PostModule,\n    MessengerModule,\n    StripeModule.forRoot({\n      apiKey: process.env.STRIPE_KEY || '',\n      apiVersion: '2022-11-15',\n    }),\n    PayementModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, PrismaService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AtStrategy.html":{"url":"injectables/AtStrategy.html","title":"injectable - AtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/access-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/access-token.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/access-token.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         JwtPayload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { JwtPayload } from '../types';\n\n@Injectable()\nexport class AtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  validate(payload: JwtPayload) {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                changeEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                changePwd\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                generateResetPwd\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getUserById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleChangeEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                logout\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                refreshTokens\n                            \n                            \n                                    \n                                    \n                                    \n                                resetPwd\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                updateSettings\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        changeEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeEmail(user: User, changeEmailDto: ChangeEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('User Settings')@ApiBearerAuth('JWT-auth')@ApiUnauthorizedResponse({description: 'Unauthorized / Old password is incorrect'})@ApiBadRequestResponse({description: 'Bad request payload'})@ApiNotFoundResponse({description: 'User not found'})@HttpCode(200)@UseGuards(undefined)@Patch('changeEmail')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changeEmailDto\n                                    \n                                                ChangeEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        changePwd\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePwd(user: User, updatePwdDto: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('User Settings')@ApiBearerAuth('JWT-auth')@ApiOkResponse({type: UserClass})@ApiUnauthorizedResponse({description: 'Unauthorized / Old password is incorrect'})@ApiBadRequestResponse({description: 'Bad request payload'})@ApiNotFoundResponse({description: 'User not found'})@HttpCode(200)@UseGuards(undefined)@Patch('changepwd')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePwdDto\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('Register')@ApiCreatedResponse({description: 'User created'})@ApiBadRequestResponse({description: 'Check the error message: Error in validating your json'})@ApiConflictResponse({description: 'User with this data exist'})@UseGuards(UserFoundGuard)@Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        generateResetPwd\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateResetPwd(resetPwdDto: ResetPwdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@ApiTags('Reset Password')@Post('reset')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPwdDto\n                                    \n                                                ResetPwdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@HttpCode(HttpStatus.OK)@ApiUnauthorizedResponse({description: 'Not logged in'})@ApiOkResponse({type: UserClass})@ApiBearerAuth('JWT-auth')@ApiTags('User')@Get('/getuser')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(user: User, getUserDto: GetUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@HttpCode(HttpStatus.OK)@ApiUnauthorizedResponse({description: 'Not logged in'})@ApiOkResponse({type: UserClass})@ApiBearerAuth('JWT-auth')@ApiTags('User')@Get('/getuser/:id')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    getUserDto\n                                    \n                                                GetUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        handleChangeEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleChangeEmail(tokenDto: HandleChangeEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('User Settings')@ApiOkResponse({description: 'new tokens'})@ApiUnauthorizedResponse({description: 'Unauthorized'})@ApiBadRequestResponse({description: 'Bad request payload'})@ApiNotFoundResponse({description: 'User not found'})@HttpCode(200)@Get('changeEmail/:token')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokenDto\n                                    \n                                                HandleChangeEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(createAuthDto: CreateAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'User logged in'})@ApiUnauthorizedResponse({description: 'Invalid credentials'})@ApiTags('Login')@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAuthDto\n                                    \n                                                CreateAuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('Login')@UseGuards(undefined)@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshTokens(user: UserClass)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('Login')@ApiBearerAuth('JWT-auth')@UseGuards(undefined)@Post('refresh')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            UserClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        resetPwd\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPwd(token: string, updatePwdDto: UpdatePwdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@ApiTags('Reset Password')@Post('reset/:token')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePwdDto\n                                    \n                                                UpdatePwdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        updateSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSettings(user: User, setUserSettingsDto: SetUserSettingsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('User Settings')@ApiBearerAuth('JWT-auth')@ApiOkResponse({description: 'User Settings set'})@ApiUnauthorizedResponse({description: 'Unauthorized'})@ApiBadRequestResponse({description: 'Bad request payload'})@HttpCode(200)@UseGuards(undefined)@Patch('settings')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    setUserSettingsDto\n                                    \n                                                SetUserSettingsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@ApiOkResponse({description: 'User verified'})@ApiNotFoundResponse({description: 'Token not found'})@ApiTags('Register')@Get('verify/:token')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Get,\n  Body,\n  Param,\n  UseFilters,\n  UseGuards,\n  HttpCode,\n  HttpStatus,\n  BadRequestException,\n  Patch,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { CreateAuthDto } from './dto/create-auth.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Tokens } from './types';\nimport { UserFoundGuard } from './guards/user-found.guard';\nimport { PrismaClientExceptionFilter } from '../prisma-client-exception/prisma-client-exception.filter';\nimport { UpdatePwdDto } from './dto/update-pwd.dto';\nimport { ResetPwdDto } from './dto/reset-pwd.dto';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiConflictResponse,\n  ApiCreatedResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { CurrentUser } from './decorators/current-user.decorator';\nimport { User as UserClass } from '../_gen/prisma-class/user';\nimport { User } from '@prisma/client';\nimport { GetUserDto } from './dto/get-user.dto';\nimport { SetUserSettingsDto } from './dto/update-user-settings.dto';\nimport { ChangePasswordDto } from './dto/change-pwd.dto';\nimport { ChangeEmailDto } from './dto/change-email.dto';\nimport { HandleChangeEmailDto } from './dto/handle-change-email.dto';\n\n@Controller('auth')\n@UseFilters(PrismaClientExceptionFilter)\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n  //ENDPOINT TO REGISTER A USER\n  @ApiTags('Register')\n  @ApiCreatedResponse({ description: 'User created' })\n  @ApiBadRequestResponse({\n    description: 'Check the error message: Error in validating your json',\n  })\n  @ApiConflictResponse({\n    description: 'User with this data exist',\n  })\n  @UseGuards(UserFoundGuard)\n  @Post('register')\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.authService.create(createUserDto);\n  }\n  //ENDPOINT TO VERIFY USER EMAIL\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({\n    description: 'User verified',\n  })\n  @ApiNotFoundResponse({\n    description: 'Token not found',\n  })\n  @ApiTags('Register')\n  @Get('verify/:token')\n  verify(@Param('token') token: string) {\n    return this.authService.verifyUser(token);\n  }\n  //ENDPOINT TO LOGIN THE USER\n  @ApiOkResponse({\n    description: 'User logged in',\n  })\n  @ApiUnauthorizedResponse({\n    description: 'Invalid credentials',\n  })\n  @ApiTags('Login')\n  @Post('login')\n  login(@Body() createAuthDto: CreateAuthDto) {\n    return this.authService.login(createAuthDto);\n  }\n  //ENDPOINT TO REMOVE THE TOKENS AND LOGOUT THE USER\n  @ApiTags('Login')\n  @UseGuards(AuthGuard('jwt'))\n  @Post('logout')\n  logout(@CurrentUser() user: User): Promise {\n    const userId = user.id;\n    return this.authService.logout(userId);\n  }\n  //ENDPOINT TO REFRESH TOKENS\n  @ApiTags('Login')\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt-refresh'))\n  @Post('refresh')\n  refreshTokens(@CurrentUser() user: UserClass): Promise {\n    const userId = user.id;\n    if (user.refreshToken)\n      return this.authService.refreshTokens(\n        userId,\n        user.refreshToken.toString(),\n      );\n    throw new BadRequestException('Not Refresh token provided ');\n  }\n  //ENDPOINT TO SEND PASSWORD RESET LINK\n  @HttpCode(HttpStatus.OK)\n  @ApiTags('Reset Password')\n  @Post('reset')\n  generateResetPwd(@Body() resetPwdDto: ResetPwdDto) {\n    return this.authService.generateResetPwd(resetPwdDto.email);\n  }\n  //ENDPOINT TO RESET (CHANGE) THE PASSWORD BASED ON TOKEN SENT IN URL AND NEW PASSWORD SENT IN BODY\n  @HttpCode(HttpStatus.OK)\n  @ApiTags('Reset Password')\n  @Post('reset/:token')\n  resetPwd(@Param('token') token: string, @Body() updatePwdDto: UpdatePwdDto) {\n    return this.authService.resetPwd(token, updatePwdDto);\n  }\n  //ENDPOINT TO GET THE CURRENT USER BASED ON JWT SENT IN HEADER\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(HttpStatus.OK)\n  @ApiUnauthorizedResponse({\n    description: 'Not logged in',\n  })\n  @ApiOkResponse({\n    type: UserClass,\n  })\n  @ApiBearerAuth('JWT-auth')\n  @ApiTags('User')\n  @Get('/getuser')\n  getUser(@CurrentUser() user: User) {\n    return this.authService.getUser(user);\n  }\n  //ENDPOINT TO GET USER USING ID\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(HttpStatus.OK)\n  @ApiUnauthorizedResponse({\n    description: 'Not logged in',\n  })\n  @ApiOkResponse({\n    type: UserClass,\n  })\n  @ApiBearerAuth('JWT-auth')\n  @ApiTags('User')\n  @Get('/getuser/:id')\n  getUserById(@CurrentUser() user: User, @Param() getUserDto: GetUserDto) {\n    return this.authService.getUserById(user, getUserDto.id);\n  }\n\n  //ENDPOINT TO GET USER INFO\n  @ApiTags('User Settings')\n  @ApiBearerAuth('JWT-auth')\n  @ApiOkResponse({ description: 'User Settings set' })\n  @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n  @ApiBadRequestResponse({ description: 'Bad request payload' })\n  @HttpCode(200)\n  @UseGuards(AuthGuard('jwt'))\n  @Patch('settings')\n  updateSettings(\n    @CurrentUser() user: User,\n    @Body() setUserSettingsDto: SetUserSettingsDto,\n  ) {\n    return this.authService.updateSettings(user, setUserSettingsDto);\n  }\n\n  //ENPOINT TO CHANGE USER PASSWORD BASED ON OLD PASSWORD\n  @ApiTags('User Settings')\n  @ApiBearerAuth('JWT-auth')\n  @ApiOkResponse({ type: UserClass })\n  @ApiUnauthorizedResponse({\n    description: 'Unauthorized / Old password is incorrect',\n  })\n  @ApiBadRequestResponse({ description: 'Bad request payload' })\n  @ApiNotFoundResponse({ description: 'User not found' })\n  @HttpCode(200)\n  @UseGuards(AuthGuard('jwt'))\n  @Patch('changepwd')\n  changePwd(\n    @CurrentUser() user: User,\n    @Body() updatePwdDto: ChangePasswordDto,\n  ): Promise {\n    return this.authService.ChangePassword(user, updatePwdDto);\n  }\n  //ENPOINT TO CHANGE USER EMAIL\n  @ApiTags('User Settings')\n  @ApiBearerAuth('JWT-auth')\n  @ApiUnauthorizedResponse({\n    description: 'Unauthorized / Old password is incorrect',\n  })\n  @ApiBadRequestResponse({ description: 'Bad request payload' })\n  @ApiNotFoundResponse({ description: 'User not found' })\n  @HttpCode(200)\n  @UseGuards(AuthGuard('jwt'))\n  @Patch('changeEmail')\n  changeEmail(\n    @CurrentUser() user: User,\n    @Body() changeEmailDto: ChangeEmailDto,\n  ): Promise {\n    return this.authService.changeEmail(user, changeEmailDto.password, changeEmailDto.newEmail);\n  }\n  //ENPOINT TO HANDLE CHANGE USER EMAIL\n  @ApiTags('User Settings')\n  @ApiOkResponse({ description: 'new tokens' })\n  @ApiUnauthorizedResponse({\n    description: 'Unauthorized',\n  })\n  @ApiBadRequestResponse({ description: 'Bad request payload' })\n  @ApiNotFoundResponse({ description: 'User not found' })\n  @HttpCode(200)\n  @Get('changeEmail/:token')\n  handleChangeEmail(\n    @Param() tokenDto: HandleChangeEmailDto,\n  ): Promise {\n    return this.authService.handleChangeEmail(tokenDto.token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAtStrategy\n\nAtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAtStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nMailjetService\n\nMailjetService\n\nAuthModule -->\n\nMailjetService->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\nRtStrategy\n\nRtStrategy\n\nAuthModule -->\n\nRtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AtStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            MailjetService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            RtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AtStrategy, RtStrategy } from './strategies';\nimport { MailjetService } from '../mailjet/mailjet.service';\n\n@Module({\n  imports: [JwtModule.register({})],\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    PrismaService,\n    AtStrategy,\n    RtStrategy,\n    MailjetService,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookmarkDto.html":{"url":"classes/BookmarkDto.html","title":"class - BookmarkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookmarkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dto/bookmark.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                postId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        postId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/bookmark.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/post/dto/bookmark.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsUUID } from 'class-validator';\n\nexport class BookmarkDto {\n  @ApiProperty()\n  @IsUUID()\n  postId: string;\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookmarkProfileDto.html":{"url":"classes/BookmarkProfileDto.html","title":"class - BookmarkProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookmarkProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/bookmark-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bookmarkedUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bookmarkedUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/bookmark-profile.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsUUID } from 'class-validator';\n\nexport class BookmarkProfileDto {\n  @ApiProperty()\n  @IsUUID()\n  bookmarkedUserId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bookmarks.html":{"url":"classes/Bookmarks.html","title":"class - Bookmarks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bookmarks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/bookmarks.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                post\n                            \n                            \n                                    \n                                postId\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/bookmarks.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Post})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/bookmarks.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/bookmarks.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/bookmarks.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/bookmarks.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Post } from './post';\nimport { User } from './user';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class Bookmarks {\n  @ApiProperty({ type: () => Post })\n  post: Post;\n\n  @ApiProperty({ type: String })\n  postId: string;\n\n  @ApiProperty({ type: () => User })\n  user: User;\n\n  @ApiProperty({ type: String })\n  userId: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bookmarks-1.html":{"url":"classes/Bookmarks-1.html","title":"class - Bookmarks-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bookmarks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _Bookmarks\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeEmailDto.html":{"url":"classes/ChangeEmailDto.html","title":"class - ChangeEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                newEmail\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-email.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-email.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString } from 'class-validator';\n\nexport class ChangeEmailDto {\n  @ApiProperty() @IsString() password: string;\n  @ApiProperty() @IsEmail() newEmail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change-pwd.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                currentPassword\n                            \n                            \n                                    \n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currentPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-pwd.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-pwd.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ChangePasswordDto {\n  @ApiProperty() currentPassword: string;\n  @ApiProperty() newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckoutSession.html":{"url":"classes/CheckoutSession.html","title":"class - CheckoutSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckoutSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payement/entities/payement.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                billing_address_collection\n                            \n                            \n                                    \n                                cancel_url\n                            \n                            \n                                    \n                                    Optional\n                                client_reference_id\n                            \n                            \n                                    \n                                    Optional\n                                customer\n                            \n                            \n                                    \n                                    Optional\n                                customer_email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                line_items\n                            \n                            \n                                    \n                                    Optional\n                                locale\n                            \n                            \n                                    \n                                    Optional\n                                metadata\n                            \n                            \n                                    \n                                mode\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                    Optional\n                                payment_intent\n                            \n                            \n                                    \n                                payment_method_types\n                            \n                            \n                                    \n                                    Optional\n                                payment_status\n                            \n                            \n                                    \n                                    Optional\n                                setup_intent\n                            \n                            \n                                    \n                                    Optional\n                                shipping_address_collection\n                            \n                            \n                                    \n                                    Optional\n                                submit_type\n                            \n                            \n                                    \n                                    Optional\n                                subscription\n                            \n                            \n                                    \n                                success_url\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        billing_address_collection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"auto\" | \"required\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cancel_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        client_reference_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        customer_email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        line_items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Stripe.LineItem[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        locale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"payment\" | \"setup\" | \"subscription\" | \"subscription_update\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        payment_intent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_method_types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        payment_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"paid\" | \"unpaid\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        setup_intent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        shipping_address_collection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        submit_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"auto\" | \"book\" | \"donate\" | \"pay\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        success_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/payement.entity.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Stripe } from 'stripe';\n\nexport class CheckoutSession {\n  @ApiProperty()\n  id: string;\n  @ApiProperty()\n  object: 'checkout.session';\n  @ApiProperty()\n  billing_address_collection?: 'auto' | 'required';\n  @ApiProperty()\n  cancel_url: string;\n  @ApiProperty()\n  client_reference_id?: string;\n  @ApiProperty()\n  customer?: string;\n  @ApiProperty()\n  customer_email?: string;\n  @ApiProperty()\n  line_items: Stripe.LineItem[];\n  @ApiProperty()\n  locale?: string;\n  @ApiProperty()\n  mode: 'payment' | 'setup' | 'subscription' | 'subscription_update';\n  @ApiProperty()\n  payment_intent?: string;\n  @ApiProperty()\n  payment_method_types: string[];\n  @ApiProperty()\n  payment_status?: 'paid' | 'unpaid';\n  @ApiProperty()\n  setup_intent?: string;\n  @ApiProperty()\n  shipping_address_collection?: {\n    allowed_countries: string[];\n  };\n  @ApiProperty()\n  submit_type?: 'auto' | 'book' | 'donate' | 'pay';\n  @ApiProperty()\n  subscription?: string;\n  @ApiProperty()\n  success_url: string;\n  @ApiProperty()\n  metadata?: {\n    [key: string]: string;\n  };\n  @ApiProperty()\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Conversation.html":{"url":"classes/Conversation.html","title":"class - Conversation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Conversation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/conversation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                messages\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                userA\n                            \n                            \n                                    \n                                userAId\n                            \n                            \n                                    \n                                userB\n                            \n                            \n                                    \n                                userBId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/conversation.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/conversation.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Message[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Message})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/conversation.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/conversation.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/conversation.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/conversation.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userAId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/conversation.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/conversation.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userBId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/conversation.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Message } from './message';\nimport { User } from './user';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class Conversation {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiPropertyOptional({ type: String })\n  name?: string;\n\n  @ApiProperty({ isArray: true, type: () => Message })\n  messages: Message[];\n\n  @ApiProperty({ type: () => User })\n  userA: User;\n\n  @ApiProperty({ type: String })\n  userAId: string;\n\n  @ApiProperty({ type: () => User })\n  userB: User;\n\n  @ApiProperty({ type: String })\n  userBId: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Conversation-1.html":{"url":"classes/Conversation-1.html","title":"class - Conversation-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Conversation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _Conversation\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CpuHealthIndicator.html":{"url":"injectables/CpuHealthIndicator.html","title":"injectable - CpuHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CpuHealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health-check/cpu-health/cpu.health.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HealthIndicator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                isHealthy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/health-check/cpu-health/cpu.health.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        isHealthy\n                        \n                    \n                \n            \n            \n                \n                    \n                    isHealthy()\n                \n            \n\n\n            \n                \n                    Defined in src/health-check/cpu-health/cpu.health.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  HealthCheckError,\n  HealthIndicator,\n  HealthIndicatorResult,\n} from '@nestjs/terminus';\nimport * as os from 'os';\n@Injectable()\nexport class CpuHealthIndicator extends HealthIndicator {\n  constructor() {\n    super();\n  }\n\n  public async isHealthy(): Promise {\n    const cpuUsage = os.loadavg();\n    const cpuPercentage = cpuUsage[0] / os.cpus().length;\n    const isHealthy = cpuPercentage \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateActivityDto.html":{"url":"classes/CreateActivityDto.html","title":"class - CreateActivityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateActivityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/create-activity.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                industry\n                            \n                            \n                                    \n                                    \n                                    \n                                job\n                            \n                            \n                                    \n                                jobTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        industry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Industry\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsEnum(Industry)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-activity.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Job\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsEnum(Job)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-activity.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-activity.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { Industry, Job } from '@prisma/client';\nimport { IsEnum, IsOptional } from 'class-validator';\n\nexport class CreateActivityDto {\n  @ApiPropertyOptional() @IsEnum(Job) @IsOptional() job: Job;\n\n  @ApiPropertyOptional() @IsEnum(Industry) @IsOptional() industry: Industry;\n\n  @ApiPropertyOptional() jobTitle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthDto.html":{"url":"classes/CreateAuthDto.html","title":"class - CreateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-auth.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail } from 'class-validator';\n\nexport class CreateAuthDto {\n  @IsEmail() @ApiProperty() email: string;\n  @ApiProperty() password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBioDto.html":{"url":"classes/CreateBioDto.html","title":"class - CreateBioDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBioDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/create-bio.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bio\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-bio.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class CreateBioDto {\n  @ApiProperty() @IsString() bio: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePayementDto.html":{"url":"classes/CreatePayementDto.html","title":"class - CreatePayementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePayementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payement/dto/create-payement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                postId\n                            \n                            \n                                    \n                                    \n                                productPriceId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        postId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/dto/create-payement.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productPriceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/dto/create-payement.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsUUID } from 'class-validator';\n\nexport class CreatePayementDto {\n  @ApiProperty() @IsString() productPriceId: string;\n  @ApiProperty() @IsUUID() postId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dto/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contact\n                            \n                            \n                                    \n                                    \n                                contract\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                extra\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                image\n                            \n                            \n                                    \n                                    \n                                jobStartDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                paiement\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-post.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-post.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contract\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobContract\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: JobContract, enumName: 'JobContract'})@IsEnum(JobContract)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-post.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-post.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        extra\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({isArray: true, enum: JobExtra, enumName: 'JobExtra'})@IsEnum(JobExtra, {each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-post.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-post.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobStartDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-post.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        paiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobPaiement\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: JobPaiement, enumName: 'JobPaiement'})@IsEnum(JobPaiement)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-post.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-post.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobPriority\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: JobPriority, enumName: 'JobPriority'})@IsEnum(JobPriority)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-post.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-post.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: JobType, enumName: 'JobType'})@IsEnum(JobType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-post.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  JobContract,\n  JobExtra,\n  JobPaiement,\n  JobPriority,\n  JobType,\n} from '@prisma/client';\nimport { IsEnum, IsOptional, IsString } from 'class-validator';\nexport class CreatePostDto {\n  @ApiProperty({ enum: JobType, enumName: 'JobType' })\n  @IsEnum(JobType)\n  type: JobType;\n\n  @ApiProperty({ enum: JobPriority, enumName: 'JobPriority' })\n  @IsEnum(JobPriority)\n  priority: JobPriority;\n\n  @ApiProperty({ enum: JobContract, enumName: 'JobContract' })\n  @IsEnum(JobContract)\n  contract: JobContract;\n\n  @ApiProperty({ type: String })\n  @IsString()\n  title: string;\n\n  @ApiPropertyOptional({ type: String })\n  @IsString()\n  description: string;\n\n  @ApiPropertyOptional({ isArray: true, enum: JobExtra, enumName: 'JobExtra' })\n  @IsEnum(JobExtra, { each: true })\n  @IsOptional()\n  extra: string[];\n\n  @ApiProperty({ type: Date })\n  @IsString()\n  jobStartDate: Date;\n\n  @ApiProperty({ enum: JobPaiement, enumName: 'JobPaiement' })\n  @IsEnum(JobPaiement)\n  @IsOptional()\n  paiement?: JobPaiement;\n\n  @ApiPropertyOptional({ type: String })\n  @IsString()\n  @IsOptional()\n  address?: string;\n\n  @ApiPropertyOptional({ type: String })\n  @IsString()\n  @IsOptional()\n  contact?: string;\n\n  @ApiPropertyOptional({ type: String })\n  @IsOptional()\n  @IsString()\n  image?: string;\n\n  @ApiPropertyOptional({\n    type: String,\n  })\n  @IsOptional()\n  @IsString()\n  price?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProFocusDto.html":{"url":"classes/CreateProFocusDto.html","title":"class - CreateProFocusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProFocusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/create-profocus.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                proFocusArray\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        proFocusArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({each: true})@Length(0, 25, {each: true})@Matches(/^[^,]*$/gm, {each: true, message: 'proFocusArray cannot contain a comma'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profocus.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, Length, Matches } from 'class-validator';\n\nexport class CreateProFocusDto {\n  @ApiProperty()\n  @IsString({ each: true })\n  @Length(0, 25, { each: true })\n  @Matches(/^[^,]*$/gm, {\n    each: true,\n    message: 'proFocusArray cannot contain a comma',\n  })\n  proFocusArray: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/create-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateProfileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTagsDto.html":{"url":"classes/CreateTagsDto.html","title":"class - CreateTagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/create-tags.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                tag_1\n                            \n                            \n                                    \n                                    \n                                    \n                                tag_2\n                            \n                            \n                                    \n                                    \n                                    \n                                tag_3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tag_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Tags\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsEnum(Tags)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-tags.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tag_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Tags\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsEnum(Tags)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-tags.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tag_3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Tags\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsEnum(Tags)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-tags.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { Tags } from '@prisma/client';\nimport { IsEnum, IsOptional } from 'class-validator';\n\nexport class CreateTagsDto {\n  @ApiPropertyOptional() @IsOptional() @IsEnum(Tags) tag_1: Tags;\n  @ApiPropertyOptional() @IsOptional() @IsEnum(Tags) tag_2: Tags;\n  @ApiPropertyOptional() @IsOptional() @IsEnum(Tags) tag_3: Tags;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                birthDate\n                            \n                            \n                                    \n                                    \n                                companyName\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                postcode\n                            \n                            \n                                    \n                                    \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsCompanyNameValid()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(3, 20)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Gender)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(3, 20)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@MaxLength(20)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        postcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MaxLength(12)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Type)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Gender, Type } from '@prisma/client';\nimport { IsEmail, Length, IsEnum, MaxLength, MinLength } from 'class-validator';\nimport { IsCompanyNameValid } from './IsCompanyNameValid';\nexport class CreateUserDto {\n  @IsEmail() @ApiProperty() email: string;\n  @Length(3, 20) @ApiProperty() firstName: string;\n  @Length(3, 20) @ApiProperty() lastName: string;\n  @IsEnum(Gender) @ApiProperty() gender: Gender;\n  @IsEnum(Type) @ApiProperty() userType: Type;\n  @ApiProperty() birthDate: Date;\n  @ApiPropertyOptional() address: string;\n  @ApiPropertyOptional() @IsCompanyNameValid() companyName: string;\n  @MaxLength(12) @ApiProperty() postcode: string;\n  @MinLength(6) @MaxLength(20) @ApiProperty() password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomValidationArguments.html":{"url":"interfaces/CustomValidationArguments.html","title":"interface - CustomValidationArguments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomValidationArguments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/IsCompanyNameValid.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            constraints\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                                \n                                        \n                                            targetName\n                                        \n                                \n                                \n                                        \n                                            targetType\n                                        \n                                \n                                \n                                        \n                                            userType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validationOptions\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        constraints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        constraints:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetType:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Additional custom properties\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validationOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validationOptions:     ValidationOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidationOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { registerDecorator, ValidationOptions } from 'class-validator';\ninterface CustomValidationArguments {\n  object: Record;\n  property: string;\n  value: any;\n  constraints: any[];\n  targetName: string;\n  targetType: () => void;\n  validationOptions?: ValidationOptions;\n  /** Additional custom properties */\n  userType: string;\n}\n\nexport function IsCompanyNameValid(validationOptions?: ValidationOptions) {\n  return function (object: any, propertyName: string) {\n    registerDecorator({\n      name: 'isCompanyNameValid',\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      validator: {\n        validate(value: any, args: CustomValidationArguments) {\n          const userType = args.object['userType'];\n          if (userType === 'INDIVIDUAL') {\n            return value == null;\n          } else {\n            return typeof value === 'string' && value.trim().length > 0;\n          }\n        },\n        defaultMessage(args: CustomValidationArguments) {\n          const userType = args.object['userType'];\n          if (userType === 'INDIVIDUAL') {\n            return `$property must be null or an empty string for INDIVIDUAL users`;\n          } else {\n            return `$property is required for ${userType} users`;\n          }\n        },\n      },\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserGalleryDto.html":{"url":"classes/DeleteUserGalleryDto.html","title":"class - DeleteUserGalleryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserGalleryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/delete-user-gallery.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                idsArray\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idsArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/delete-user-gallery.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class DeleteUserGalleryDto {\n  @ApiProperty()\n  @IsString({ each: true })\n  idsArray: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailChange.html":{"url":"classes/EmailChange.html","title":"class - EmailChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/email_change.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                newEmail\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/email_change.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/email_change.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/email_change.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        newEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/email_change.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/email_change.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/email_change.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class EmailChange {\n  @ApiProperty({ type: Number })\n  id: number;\n\n  @ApiProperty({ type: String })\n  newEmail: string;\n\n  @ApiProperty({ type: () => User })\n  user: User;\n\n  @ApiProperty({ type: String })\n  userId: string;\n\n  @ApiProperty({ type: String })\n  hash: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailChange-1.html":{"url":"classes/EmailChange-1.html","title":"class - EmailChange-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _EmailChange\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailVerification.html":{"url":"classes/EmailVerification.html","title":"class - EmailVerification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailVerification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/email_verification.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/email_verification.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/email_verification.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/email_verification.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/email_verification.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/email_verification.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class EmailVerification {\n  @ApiProperty({ type: Number })\n  id: number;\n\n  @ApiProperty({ type: () => User })\n  user: User;\n\n  @ApiProperty({ type: String })\n  userId: string;\n\n  @ApiProperty({ type: String })\n  hash: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailVerification-1.html":{"url":"classes/EmailVerification-1.html","title":"class - EmailVerification-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailVerification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _EmailVerification\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilerModule.html":{"url":"modules/FilerModule.html","title":"module - FilerModule","body":"\n                   \n\n\n\n\n    Modules\n    FilerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilerModule\n\n\n\ncluster_FilerModule_providers\n\n\n\ncluster_FilerModule_exports\n\n\n\n\nFilerService \n\nFilerService \n\n\n\nFilerModule\n\nFilerModule\n\nFilerService  -->\n\nFilerModule->FilerService \n\n\n\n\n\nFilerService\n\nFilerService\n\nFilerModule -->\n\nFilerService->FilerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/digitalocean-filer/digitalocean-filer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilerService } from './digitalocean-filer.service';\nimport { DoSpacesServiceProvider } from './digitalocean-filer.config';\n\n@Module({\n  providers: [FilerService, DoSpacesServiceProvider],\n  exports: [FilerService], \n})\nexport class FilerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilerService.html":{"url":"injectables/FilerService.html","title":"injectable - FilerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/digitalocean-filer/digitalocean-filer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(s3: AWS.S3)\n                    \n                \n                        \n                            \n                                Defined in src/digitalocean-filer/digitalocean-filer.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        s3\n                                                  \n                                                        \n                                                                        AWS.S3\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: UploadedMulterFileI, downloadable?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/digitalocean-filer/digitalocean-filer.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                UploadedMulterFileI\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    downloadable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport * as AWS from 'aws-sdk';\nimport {\n  DoSpacesServiceLib,\n  UploadedMulterFileI,\n} from './digitalocean-filer.config';\n@Injectable()\nexport class FilerService {\n  constructor(@Inject(DoSpacesServiceLib) private readonly s3: AWS.S3) {}\n\n  async uploadFile(\n    file: UploadedMulterFileI,\n    downloadable?: boolean,\n  ): Promise {\n    // Precaution to avoid having 2 files with the same name\n    const fileName = `${Date.now()}-${file.originalname}`;\n\n    // Return a promise that resolves only when the file upload is complete\n    return new Promise((resolve, reject) => {\n      const params: AWS.S3.PutObjectRequest = {\n        Bucket: process.env.DIGITAL_OCEAN_SPACES_BUCKET || '',\n        Key: 'TIPPJOB/' + fileName,\n        Body: file.buffer,\n        ACL: 'public-read',\n      };\n\n      if (!downloadable) {\n        params.ContentType = file.mimetype;\n      }\n\n      this.s3.putObject(params, (error: AWS.AWSError) => {\n        if (!error) {\n          resolve(\n            `${process.env.DIGITAL_OCEAN_SPACES_INSTANCE_LINK}/${fileName}`,\n          );\n        } else {\n          reject(new Error(`DoSpacesService_ERROR: ${error}`));\n        }\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetBookmarksResponse.html":{"url":"classes/GetBookmarksResponse.html","title":"class - GetBookmarksResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetBookmarksResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/entities/getBookmarksResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                bookmarks\n                            \n                            \n                                    \n                                totalCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookmarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Bookmarks\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/entities/getBookmarksResponse.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/entities/getBookmarksResponse.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Bookmarks } from '../../_gen/prisma-class/bookmarks';\nexport class GetBookmarksResponse {\n  @ApiProperty({ isArray: true })\n  bookmarks: Bookmarks;\n  @ApiProperty()\n  totalCount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetPostDto.html":{"url":"classes/GetPostDto.html","title":"class - GetPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dto/get-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@Type(undefined)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/get-post.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString } from 'class-validator';\n\nexport class GetPostDto {\n  @ApiProperty({ required: true })\n  @Type(() => String)\n  @IsString()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetPostsResponse.html":{"url":"classes/GetPostsResponse.html","title":"class - GetPostsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetPostsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/entities/getPostsResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                posts\n                            \n                            \n                                    \n                                totalCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PostClass\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/entities/getPostsResponse.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/entities/getPostsResponse.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Post as PostClass } from '../../_gen/prisma-class/post';\nexport class GetPostsResponse {\n  @ApiProperty({ isArray: true })\n  posts: PostClass;\n  @ApiProperty()\n  totalCount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserDto.html":{"url":"classes/GetUserDto.html","title":"class - GetUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/get-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@Type(undefined)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/get-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString } from 'class-validator';\n\nexport class GetUserDto {\n  @ApiProperty({ required: true })\n  @Type(() => String)\n  @IsString()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalExceptionFilter.html":{"url":"classes/GlobalExceptionFilter.html","title":"class - GlobalExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/global-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exceptions/global-exception.filter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n} from '@nestjs/common';\n\n@Catch()\nexport class GlobalExceptionFilter implements ExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    let statusCode = 500;\n    let message = 'Internal server error';\n\n    if (exception instanceof HttpException) {\n      statusCode = exception.getStatus();\n      message = exception.getResponse().toString();\n    }\n\n    const errorResponse = {\n      statusCode,\n      message,\n    };\n\n    response.status(statusCode).json(errorResponse);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleChangeEmailDto.html":{"url":"classes/HandleChangeEmailDto.html","title":"class - HandleChangeEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleChangeEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/handle-change-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@Type(undefined)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/handle-change-email.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString } from 'class-validator';\n\nexport class HandleChangeEmailDto {\n  @ApiProperty({ required: true })\n  @Type(() => String)\n  @IsString()\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthCheckController.html":{"url":"controllers/HealthCheckController.html","title":"controller - HealthCheckController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthCheckController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health-check/health-check.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                checkHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        checkHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health-check/health-check.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  DiskHealthIndicator,\n  HealthCheck,\n  HealthCheckService,\n  HttpHealthIndicator,\n  MemoryHealthIndicator,\n} from '@nestjs/terminus';\nimport { PrismaHealthIndicator } from './prisma-health/prisma.heatlth';\nimport { CpuHealthIndicator } from './cpu-health/cpu.health';\n\n@Controller('health')\nexport class HealthCheckController {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private db: PrismaHealthIndicator,\n    private storage: DiskHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private cpu: CpuHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  /**\n   * Controller to check for server health\n   */\n  checkHealth() {\n    return this.healthCheckService.check([\n      () =>\n        this.http.pingCheck(\n          'Http Check',\n          process.env.SERVER_URL || 'http://localhost:3011/',\n        ),\n      () => this.db.isHealthy('Database Check'),\n      () =>\n        this.storage.checkStorage('Storage Check', {\n          thresholdPercent: 0.5,\n          path: '/',\n        }),\n      () => this.memory.checkHeap('memory_heap', 300 * 1024 * 1024),\n      () => this.memory.checkRSS('memory_rss', 300 * 1024 * 1024),\n      () => this.cpu.isHealthy(),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthCheckModule.html":{"url":"modules/HealthCheckModule.html","title":"module - HealthCheckModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthCheckModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nCpuHealthIndicator\n\nCpuHealthIndicator\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nHealthCheckModule -->\n\nCpuHealthIndicator->HealthCheckModule\n\n\n\n\n\nHealthCheckService\n\nHealthCheckService\n\nHealthCheckModule -->\n\nHealthCheckService->HealthCheckModule\n\n\n\n\n\nPrismaHealthIndicator\n\nPrismaHealthIndicator\n\nHealthCheckModule -->\n\nPrismaHealthIndicator->HealthCheckModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nHealthCheckModule -->\n\nPrismaService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health-check/health-check.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CpuHealthIndicator\n                        \n                        \n                            HealthCheckService\n                        \n                        \n                            PrismaHealthIndicator\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthCheckController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthCheckService } from './health-check.service';\nimport { HealthCheckController } from './health-check.controller';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { PrismaHealthIndicator } from './prisma-health/prisma.heatlth';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { CpuHealthIndicator } from './cpu-health/cpu.health';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthCheckController],\n  providers: [\n    HealthCheckService,\n    PrismaHealthIndicator,\n    PrismaService,\n    CpuHealthIndicator,\n  ],\n})\nexport class HealthCheckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HealthCheckService.html":{"url":"injectables/HealthCheckService.html","title":"injectable - HealthCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HealthCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health-check/health-check.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class HealthCheckService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Image.html":{"url":"classes/Image.html","title":"class - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/image.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                imageUrl\n                            \n                            \n                                    \n                                    Optional\n                                isGalleryImage\n                            \n                            \n                                    \n                                    Optional\n                                isPostImage\n                            \n                            \n                                    \n                                    Optional\n                                isUserProfilePicture\n                            \n                            \n                                    \n                                    Optional\n                                ownerId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/image.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/image.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/image.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isGalleryImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/image.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isPostImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/image.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isUserProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/image.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/image.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class Image {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  imageUrl: string;\n\n  @ApiPropertyOptional({ type: Boolean })\n  isUserProfilePicture?: boolean;\n\n  @ApiPropertyOptional({ type: Boolean })\n  isGalleryImage?: boolean;\n\n  @ApiPropertyOptional({ type: Boolean })\n  isPostImage?: boolean;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiPropertyOptional({ type: String })\n  ownerId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Image-1.html":{"url":"classes/Image-1.html","title":"class - Image-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _Image\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImagesController.html":{"url":"controllers/ImagesController.html","title":"controller - ImagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/images.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                images\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ImagesService } from './images.service';\n\n@Controller('images')\nexport class ImagesController {\n  constructor(private readonly imagesService: ImagesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImagesModule.html":{"url":"modules/ImagesModule.html","title":"module - ImagesModule","body":"\n                   \n\n\n\n\n    Modules\n    ImagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_providers\n\n\n\ncluster_ImagesModule_imports\n\n\n\n\nFilerModule\n\nFilerModule\n\n\n\nImagesModule\n\nImagesModule\n\nImagesModule -->\n\nFilerModule->ImagesModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nImagesModule -->\n\nPrismaService->ImagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/images/images.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ImagesService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImagesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ImagesService } from './images.service';\nimport { ImagesController } from './images.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { FilerModule } from '../digitalocean-filer/digitalocean-filer.module';\n\n@Module({\n  imports: [FilerModule],\n  controllers: [ImagesController],\n  providers: [ImagesService, PrismaService],\n})\nexport class ImagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesService.html":{"url":"injectables/ImagesService.html","title":"injectable - ImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/images.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createImage\n                            \n                            \n                                    Async\n                                getUserGallery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, filerService: FilerService)\n                    \n                \n                        \n                            \n                                Defined in src/images/images.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filerService\n                                                  \n                                                        \n                                                                        FilerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    createImage(file: Express.Multer.File, user: User, isUserProfilePicture: boolean, isGalleryImage?: boolean, isPostImage?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/images/images.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isUserProfilePicture\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isGalleryImage\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    isPostImage\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserGallery\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserGallery(user: User, take?: number, skip?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/images/images.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { FilerService } from '../digitalocean-filer/digitalocean-filer.service';\nimport { Image, User } from '@prisma/client';\n\n@Injectable()\nexport class ImagesService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly filerService: FilerService,\n  ) {}\n  async createImage(\n    file: Express.Multer.File,\n    user: User,\n    isUserProfilePicture: boolean,\n    isGalleryImage?: boolean,\n    isPostImage?: boolean,\n  ): Promise {\n    //CHECKING FOR FILE SIZE\n    if (!file) {\n      throw new HttpException('No file provided', 413);\n    }\n    if (file.size > 4242880) {\n      throw new HttpException('File too large', 413);\n    }\n    //RETURN IMAGE LINK\n    const imageLinkAfterUpload = await this.filerService.uploadFile(file);\n\n    //CREATE IMAGE INSTANCE IN DB\n    const image = await this.prisma.image.create({\n      data: {\n        imageUrl: imageLinkAfterUpload,\n        isUserProfilePicture: isUserProfilePicture,\n        ownerId: user.id,\n        isGalleryImage,\n        isPostImage,\n      },\n    });\n    return image;\n  }\n  async getUserGallery(\n    user: User,\n    take?: number,\n    skip?: number,\n  ): Promise {\n    if ((skip && isNaN(skip)) || (take && isNaN(take))) {\n      return this.prisma.image.findMany({\n        where: {\n          ownerId: user.id,\n          isUserProfilePicture: false,\n          isGalleryImage: true,\n        },\n        orderBy: {\n          createdAt: 'desc',\n        },\n      });\n    } else {\n      return await this.prisma.image.findMany({\n        take,\n        skip,\n        where: {\n          ownerId: user.id,\n          isUserProfilePicture: false,\n          isGalleryImage: true,\n        },\n        orderBy: {\n          createdAt: 'desc',\n        },\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailjetModule.html":{"url":"modules/MailjetModule.html","title":"module - MailjetModule","body":"\n                   \n\n\n\n\n    Modules\n    MailjetModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailjetModule\n\n\n\ncluster_MailjetModule_exports\n\n\n\ncluster_MailjetModule_providers\n\n\n\n\nMailjetService \n\nMailjetService \n\n\n\nMailjetModule\n\nMailjetModule\n\nMailjetService  -->\n\nMailjetModule->MailjetService \n\n\n\n\n\nMailjetService\n\nMailjetService\n\nMailjetModule -->\n\nMailjetService->MailjetModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mailjet/mailjet.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailjetService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailjetService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailjetService } from './mailjet.service';\n\n@Module({\n  providers: [MailjetService],\n  exports: [MailjetService],\n})\nexport class MailjetModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailjetService.html":{"url":"injectables/MailjetService.html","title":"injectable - MailjetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailjetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mailjet/mailjet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/mailjet/mailjet.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmail(email: string, uname: string, link: string, templateId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/mailjet/mailjet.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    templateId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mailjet.Client\n\n                    \n                \n                    \n                        \n                                Defined in src/mailjet/mailjet.service.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as mailjet from 'node-mailjet';\n@Injectable()\nexport class MailjetService {\n  private client: mailjet.Client;\n  constructor() {\n    this.client = new mailjet.Client({\n      apiKey: process.env.MJ_APIKEY_PUBLIC,\n      apiSecret: process.env.MJ_APIKEY_PRIVATE,\n    });\n  }\n  async sendEmail(\n    email: string,\n    uname: string,\n    link: string,\n    templateId: number,\n  ): Promise {\n    const data: mailjet.SendEmailV3_1.Body = {\n      Messages: [\n        {\n          From: {\n            Email: '',\n            Name: '',\n          },\n          To: [\n            {\n              Email: email,\n              Name: uname,\n            },\n          ],\n          TemplateID: templateId,\n          TemplateLanguage: true,\n          Variables: {\n            username: uname,\n            verificationLink: link,\n          },\n        },\n      ],\n    };\n    const result = await this.client\n      .post('send', { version: 'v3.1' })\n      .request(data);\n    const status = result.response;\n    return status.status;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _Message\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message-1.html":{"url":"classes/Message-1.html","title":"class - Message-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/message.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                author\n                            \n                            \n                                    \n                                authorId\n                            \n                            \n                                    \n                                conversation\n                            \n                            \n                                    \n                                conversationId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                file\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                read\n                            \n                            \n                                    \n                                text\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/message.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        authorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/message.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Conversation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Conversation})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/message.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        conversationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/message.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/message.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/message.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/message.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        read\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/message.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/message.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/message.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\nimport { Conversation } from './conversation';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class Message {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  text: string;\n\n  @ApiProperty({ type: Boolean })\n  read: boolean;\n\n  @ApiProperty({ type: Boolean })\n  file: boolean;\n\n  @ApiProperty({ type: String })\n  authorId: string;\n\n  @ApiProperty({ type: () => User })\n  author: User;\n\n  @ApiProperty({ type: () => Conversation })\n  conversation: Conversation;\n\n  @ApiProperty({ type: String })\n  conversationId: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MessengerController.html":{"url":"controllers/MessengerController.html","title":"controller - MessengerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MessengerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messenger/messenger.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                messenger\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                createMessage\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getConversations\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                readMessages\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                sendFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        createMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMessage(user: User, sendMessageDto: SendMessageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@HttpCode(200)@ApiOkResponse({type: Conversation})@Post('sendMessage')\n                \n            \n\n            \n                \n                    Defined in src/messenger/messenger.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sendMessageDto\n                                    \n                                                SendMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        getConversations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConversations(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@HttpCode(200)@ApiOkResponse({type: Conversation, isArray: true})@Get('')\n                \n            \n\n            \n                \n                    Defined in src/messenger/messenger.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        readMessages\n                        \n                    \n                \n            \n            \n                \n                    \n                    readMessages(user: User, conversationId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@HttpCode(200)@ApiOkResponse({description: 'read'})@Patch('readMessages')\n                \n            \n\n            \n                \n                    Defined in src/messenger/messenger.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conversationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        sendFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendFile(files: Array, user: User, receiverId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiPdfFile(['document'])@ApiOkResponse({type: Conversation})@HttpCode(200)@Post('sendFile')\n                \n            \n\n            \n                \n                    Defined in src/messenger/messenger.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    receiverId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  HttpCode,\n  UseGuards,\n  Query,\n  Patch,\n  UploadedFiles,\n} from '@nestjs/common';\nimport { MessengerService } from './messenger.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { CurrentUser } from '../auth/decorators/current-user.decorator';\nimport { User } from '../_gen/prisma-class/user';\nimport { SendMessageDto } from './dto/send-message.dto';\nimport { Conversation } from '../_gen/prisma-class/conversation';\nimport { ApiPdfFile } from '../profile/decorators/api-file-decorator';\n@ApiTags('MESSENGER')\n@Controller('messenger')\nexport class MessengerController {\n  constructor(private readonly messengerService: MessengerService) {}\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: Conversation,\n  })\n  @Post('sendMessage')\n  createMessage(\n    @CurrentUser() user: User,\n    @Body() sendMessageDto: SendMessageDto,\n  ) {\n    return this.messengerService.sendMessage(user, sendMessageDto);\n  }\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: Conversation,\n    isArray: true,\n  })\n  @Get('')\n  getConversations(@CurrentUser() user: User) {\n    return this.messengerService.getConversations(user);\n  }\n\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(200)\n  @ApiOkResponse({description : \"read\"})\n  @Patch('readMessages')\n  readMessages(@CurrentUser() user: User,@Query(\"conversationID\") conversationId: string) {\n    return this.messengerService.readMessages(user, conversationId);\n  }\n\n\n  @ApiPdfFile(['document'])\n  @ApiOkResponse({ type: Conversation })\n  @HttpCode(200)\n  @Post('sendFile')\n  sendFile(\n    @UploadedFiles() files: Array,\n    @CurrentUser() user: User,\n    @Query(\"receiverId\") receiverId: string,\n  ) {\n    return this.messengerService.sendFile(files, user, receiverId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessengerModule.html":{"url":"modules/MessengerModule.html","title":"module - MessengerModule","body":"\n                   \n\n\n\n\n    Modules\n    MessengerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessengerModule\n\n\n\ncluster_MessengerModule_imports\n\n\n\ncluster_MessengerModule_providers\n\n\n\n\nFilerModule\n\nFilerModule\n\n\n\nMessengerModule\n\nMessengerModule\n\nMessengerModule -->\n\nFilerModule->MessengerModule\n\n\n\n\n\nMessengerService\n\nMessengerService\n\nMessengerModule -->\n\nMessengerService->MessengerModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nMessengerModule -->\n\nPrismaService->MessengerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/messenger/messenger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MessengerService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MessengerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MessengerService } from './messenger.service';\nimport { MessengerController } from './messenger.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { FilerModule } from '../digitalocean-filer/digitalocean-filer.module';\n\n@Module({\n  imports: [FilerModule], // Import the FilerModule that exports DownloadableFilerService\n  controllers: [MessengerController],\n  providers: [MessengerService, PrismaService],\n})\nexport class MessengerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessengerService.html":{"url":"injectables/MessengerService.html","title":"injectable - MessengerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessengerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messenger/messenger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getConversations\n                            \n                            \n                                    Async\n                                readMessages\n                            \n                            \n                                    Async\n                                sendFile\n                            \n                            \n                                    Async\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, filerService: FilerService)\n                    \n                \n                        \n                            \n                                Defined in src/messenger/messenger.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filerService\n                                                  \n                                                        \n                                                                        FilerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getConversations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConversations(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/messenger/messenger.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readMessages\n                        \n                    \n                \n            \n            \n                \n                    \n                    readMessages(user: User, conversationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/messenger/messenger.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conversationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendFile(files: Array, user: User, receiverId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/messenger/messenger.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    receiverId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(user: User, sendMessageDto: SendMessageDto)\n                \n            \n\n\n            \n                \n                    Defined in src/messenger/messenger.service.ts:22\n                \n            \n\n\n            \n                \n                    This service create or update a conversation based on the user and the receiver\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sendMessageDto\n                                    \n                                                SendMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A created or updated Conversation\nThis service create or update a conversation based on the user and the receiver\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { User } from '../_gen/prisma-class/user';\nimport { SendMessageDto } from './dto/send-message.dto';\nimport { FilerService } from '../digitalocean-filer/digitalocean-filer.service';\nimport { AllowedFileTypes } from './types/allowedFileTypes'\n\n\n@Injectable()\nexport class MessengerService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly filerService: FilerService,\n  ) { }\n  /**\n   *\n   * @param user\n   * @param sendMessageDto\n   * @returns A created or updated Conversation\n   * This service create or update a conversation based on the user and the receiver\n   */\n  async sendMessage(user: User, sendMessageDto: SendMessageDto) {\n    const conversationId = await this.prisma.conversation.findFirst({\n      where: {\n        OR: [\n          {\n            userAId: user.id,\n            userBId: sendMessageDto.receiverId,\n          },\n          {\n            userAId: sendMessageDto.receiverId,\n            userBId: user.id,\n          },\n        ],\n      },\n    });\n    if (conversationId) {\n      return await this.prisma.conversation.update({\n        where: {\n          id: conversationId.id,\n        },\n        data: {\n          messages: {\n            create: {\n              text: sendMessageDto.content,\n              authorId: user.id,\n            },\n          },\n        },\n        include: {\n          messages: {\n            orderBy: {\n              createdAt: 'asc',\n            },\n            include: {\n              author: true,\n            },\n          },\n        },\n      });\n    } else {\n      return await this.prisma.conversation.create({\n        data: {\n          userAId: user.id,\n          userBId: sendMessageDto.receiverId,\n          messages: {\n            create: {\n              authorId: user.id,\n              text: sendMessageDto.content,\n            },\n          },\n        },\n        include: {\n          messages: {\n            orderBy: {\n              createdAt: 'asc',\n            },\n            include: {\n              author: true,\n            },\n          },\n        },\n      });\n    }\n  }\n  async getConversations(user: User) {\n    return await this.prisma.conversation.findMany({\n      where: {\n        OR: [\n          {\n            userAId: user.id,\n          },\n          {\n            userBId: user.id,\n          },\n        ],\n      },\n      include: {\n        messages: {\n          orderBy: {\n            createdAt: 'asc',\n          },\n          include: {\n            author: true,\n          },\n        },\n        userA: {\n          include: {\n            profile: true,\n          },\n        },\n        userB: {\n          include: {\n            profile: true,\n          },\n        },\n      },\n      take: 10,\n      orderBy: {\n        updatedAt: 'desc',\n      },\n    });\n  }\n\n  async readMessages(user: User, conversationId: string) {\n    await this.prisma.conversation.update({\n      where: {\n        id: conversationId,\n      },\n      data: {\n        messages: {\n          updateMany: {\n            where: {\n              authorId: {\n                not: user.id,\n              },\n              read: false,\n            },\n            data: {\n              read: true,\n            },\n          },\n        },\n      },\n    });\n    return \"done\"\n  }\n  async sendFile(\n    files: Array,\n    user: User,\n    receiverId: string,\n  ) {\n    const file = files[0];\n    if (!file) {\n      throw new BadRequestException('No file provided');\n    }\n    if (!AllowedFileTypes.includes(file.mimetype)) {\n      throw new BadRequestException(`Check your file ${file.originalname}`);\n    }\n    if (file.size > 4242880) {\n      throw new BadRequestException('File too large');\n    }\n    const fileLink = await this.filerService.uploadFile(file, true);\n    const Uploadedfile = await this.prisma.resume.create({\n      data: {\n        resumeUrl: fileLink,\n        ownerId: user.id,\n      },\n    });\n\n    const conversationId = await this.prisma.conversation.findFirst({\n      where: {\n        OR: [\n          {\n            userAId: user.id,\n            userBId: receiverId,\n          },\n          {\n            userAId: receiverId,\n            userBId: user.id,\n          },\n        ],\n      },\n    });\n    if (conversationId) {\n      return await this.prisma.conversation.update({\n        where: {\n          id: conversationId.id,\n        },\n        data: {\n          messages: {\n            create: {\n              text: Uploadedfile.resumeUrl,\n              authorId: user.id,\n              file: true\n            },\n          },\n        },\n        include: {\n          messages: {\n            orderBy: {\n              createdAt: 'asc',\n            },\n            include: {\n              author: true,\n            },\n          },\n        },\n      });\n    } else {\n      return await this.prisma.conversation.create({\n        data: {\n          userAId: user.id,\n          userBId: receiverId,\n          messages: {\n            create: {\n              authorId: user.id,\n              text: Uploadedfile.resumeUrl,\n              file: true\n            },\n          },\n        },\n        include: {\n          messages: {\n            orderBy: {\n              createdAt: 'asc',\n            },\n            include: {\n              author: true,\n            },\n          },\n        },\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewrelicInterceptor.html":{"url":"injectables/NewrelicInterceptor.html","title":"injectable - NewrelicInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NewrelicInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/newrelic/newrelic.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/newrelic/newrelic.interceptor.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst util = require('util');\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst newrelic = require('newrelic');\n\n@Injectable()\nexport class NewrelicInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    console.log(\n      `Parent Interceptor before: ${util.inspect(context.getHandler().name)}`,\n    );\n    return newrelic.startWebTransaction(context.getHandler().name, function () {\n      const transaction = newrelic.getTransaction();\n      return next.handle().pipe(\n        tap(() => {\n          console.log(\n            `Parent Interceptor after: ${util.inspect(\n              context.getHandler().name,\n            )}`,\n          );\n          return transaction.end();\n        }),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/pagination.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@Type(undefined)@IsOptional()@IsInt()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/pagination.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@Type(undefined)@IsOptional()@IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/pagination.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsOptional, Min } from 'class-validator';\n\nexport class PaginationDto {\n  @ApiProperty({ required: false })\n  @Type(() => Number)\n  @IsOptional()\n  @IsInt()\n  @Min(0)\n  skip?: number;\n\n  @ApiProperty({ required: false })\n  @Type(() => Number)\n  @IsOptional()\n  @IsInt()\n  @Min(1)\n  take?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PayementController.html":{"url":"controllers/PayementController.html","title":"controller - PayementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PayementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payement/payement.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payement\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getProducts\n                            \n                            \n                                    \n                                webhook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: User, createPayementDto: CreatePayementDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@HttpCode(200)@ApiOkResponse({type: CheckoutSession})@Post()\n                \n            \n\n            \n                \n                    Defined in src/payement/payement.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createPayementDto\n                                    \n                                                CreatePayementDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        getProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@HttpCode(200)@ApiOkResponse({type: ProductListResponseDto})@Get('products')\n                \n            \n\n            \n                \n                    Defined in src/payement/payement.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        webhook\n                        \n                    \n                \n            \n            \n                \n                    \n                    webhook(request: RawBodyRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('webhook')\n                \n            \n\n            \n                \n                    Defined in src/payement/payement.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            RawBodyRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  Req,\n  RawBodyRequest,\n  HttpCode,\n  UseGuards,\n  Get,\n} from '@nestjs/common';\nimport { PayementService } from './payement.service';\nimport { CreatePayementDto } from './dto/create-payement.dto';\nimport { Request } from 'express';\nimport { CurrentUser } from '../auth/decorators/current-user.decorator';\nimport { User } from '../_gen/prisma-class/user';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { CheckoutSession } from './entities/payement.entity';\nimport { ProductListResponseDto } from './entities/productRes';\n@ApiTags('payement')\n@Controller('payement')\nexport class PayementController {\n  constructor(private readonly payementService: PayementService) {}\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: CheckoutSession,\n  })\n  @Post()\n  create(\n    @CurrentUser() user: User,\n    @Body() createPayementDto: CreatePayementDto,\n  ) {\n    return this.payementService.create(createPayementDto, user);\n  }\n\n  @Post('webhook')\n  webhook(@Req() request: RawBodyRequest) {\n    return this.payementService.webhook(request);\n  }\n\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: ProductListResponseDto,\n  })\n  @Get('products')\n  getProducts() {\n    return this.payementService.getProducts();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PayementModule.html":{"url":"modules/PayementModule.html","title":"module - PayementModule","body":"\n                   \n\n\n\n\n    Modules\n    PayementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PayementModule\n\n\n\ncluster_PayementModule_providers\n\n\n\n\nPayementService\n\nPayementService\n\n\n\nPayementModule\n\nPayementModule\n\nPayementModule -->\n\nPayementService->PayementModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPayementModule -->\n\nPrismaService->PayementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payement/payement.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PayementService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PayementController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PayementService } from './payement.service';\nimport { PayementController } from './payement.controller';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Module({\n  controllers: [PayementController],\n  providers: [PayementService, PrismaService],\n})\nexport class PayementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PayementService.html":{"url":"injectables/PayementService.html","title":"injectable - PayementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PayementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payement/payement.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stripe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getProducts\n                            \n                            \n                                    Async\n                                updatePostPayement\n                            \n                            \n                                    Async\n                                webhook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/payement/payement.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPayementDto: CreatePayementDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/payement/payement.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPayementDto\n                                    \n                                                CreatePayementDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Payment session : generated url for payment that redirect to the front end\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/payement/payement.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        all products in stripe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePostPayement\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePostPayement(postId?: string, productId?: string, userId?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/payement/payement.service.ts:81\n                \n            \n\n\n            \n                \n                    This function triggered on the webhook of success payment\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    postId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        An updated post object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        webhook\n                        \n                    \n                \n            \n            \n                \n                    \n                    webhook(request: RawBodyRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/payement/payement.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            RawBodyRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Nothing it justs the webhook endpoint that trigger on success payment\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stripe\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payement/payement.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, RawBodyRequest } from '@nestjs/common';\nimport { CreatePayementDto } from './dto/create-payement.dto';\nimport Stripe from 'stripe';\nimport { Request } from 'express';\nimport { User } from '../_gen/prisma-class/user';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { addHours } from 'date-fns';\n@Injectable()\nexport class PayementService {\n  private stripe;\n\n  constructor(private readonly prisma: PrismaService) {\n    this.stripe = new Stripe(process.env.STRIPE_KEY || '', {\n      apiVersion: '2022-11-15',\n    });\n  }\n\n  /**\n   *\n   * @param createPayementDto\n   * @param user\n   * @returns Payment session : generated url for payment that redirect to the front end\n   */\n  async create(createPayementDto: CreatePayementDto, user: User) {\n    const userEmail = await this.prisma.user.findUnique({\n      where: {\n        id: user.id,\n      },\n      select: {\n        email: true,\n      },\n    });\n    /**\n     * Creating a session ( including creation of stripe account based on the user email)\n     */\n    const item = await this.stripe.prices.retrieve(\n      createPayementDto.productPriceId,\n    );\n    if (item.unit_amount == 0) {\n      await this.updatePostPayement(\n        createPayementDto.postId,\n        createPayementDto.productPriceId,\n        user.id,\n      );\n      throw new HttpException(\n        'Amount is 0 so its updated without payement',\n        201,\n      );\n    }\n    const session = await this.stripe.checkout.sessions.create({\n      customer_email: userEmail?.email,\n      line_items: [\n        {\n          // Provide the exact Price ID (for example, pr_1234) of the product you want to sell\n          price: createPayementDto.productPriceId,\n          quantity: 1,\n        },\n      ],\n      metadata: {\n        userId: user.id,\n        postId: createPayementDto.postId,\n        productId: createPayementDto.productPriceId,\n      },\n      mode: 'payment',\n      payment_method_types: ['card'],\n      success_url:\n        `${process.env.STRIPE_SUCCESS_PAYEMENT_URL}?tab=advert&payment=success` ||\n        '',\n      cancel_url: `${process.env.STRIPE_SUCCESS_PAYEMENT_URL}?tab=advert&payment=error`,\n    });\n    console.log(session);\n    return session;\n  }\n  /**\n   * This function triggered on the webhook of success payment\n   * @param postId\n   * @param productId\n   * @param userId\n   * @returns An updated post object\n   */\n  async updatePostPayement(\n    postId?: string,\n    productId?: string,\n    userId?: string,\n  ) {\n    const price = (await this.stripe.prices.retrieve(productId || '', {\n      expand: ['product'],\n    })) as Stripe.Price & { product: Stripe.Product };\n    console.log('Postid=', postId);\n    console.log('Period=', +price.product.metadata['period']);\n    const post = await this.prisma.post.findUnique({\n      where: {\n        id: postId,\n      },\n    });\n    const newExpirationDate = addHours(\n      new Date(),\n      +price.product.metadata['period'],\n    );\n    const updatedPost = await this.prisma.post.updateMany({\n      where: {\n        id: post?.id,\n        userId,\n      },\n      data: {\n        expirationDate: newExpirationDate,\n      },\n    });\n    return updatedPost;\n  }\n  /**\n   *\n   * @param request\n   * @returns Nothing it justs the webhook endpoint that trigger on success payment\n   */\n  async webhook(request: RawBodyRequest) {\n    // checkout-session.type.ts\n\n    type CheckoutSession = {\n      id: string;\n      object: 'checkout.session';\n      billing_address_collection?: 'auto' | 'required';\n      cancel_url: string;\n      client_reference_id?: string;\n      customer?: string;\n      customer_email?: string;\n      line_items: Stripe.LineItem[];\n      locale?: string;\n      mode: 'payment' | 'setup' | 'subscription' | 'subscription_update';\n      payment_intent?: string;\n      payment_method_types: string[];\n      payment_status?: 'paid' | 'unpaid';\n      setup_intent?: string;\n      shipping_address_collection?: {\n        allowed_countries: string[];\n      };\n      submit_type?: 'auto' | 'book' | 'donate' | 'pay';\n      subscription?: string;\n      success_url: string;\n      metadata?: {\n        [key: string]: string;\n      };\n    };\n\n    const endpointSecret = process.env.STRIPE_WEBHOOK_SECRET || '';\n    let event;\n\n    try {\n      const sig = request.headers['stripe-signature'] || '';\n      const rawBody = request.rawBody || ''; // Assuming you have access to the raw request body\n      event = this.stripe.webhooks.constructEvent(rawBody, sig, endpointSecret);\n    } catch (e) {}\n    switch (event?.type) {\n      case 'checkout.session.completed':\n        const checkoutSession = event.data.object as CheckoutSession;\n        if (checkoutSession.payment_status == 'paid') {\n          await this.updatePostPayement(\n            checkoutSession.metadata && checkoutSession.metadata['postId'],\n            checkoutSession.metadata && checkoutSession.metadata['productId'],\n            checkoutSession.metadata && checkoutSession.metadata['userId'],\n          );\n        }\n        break;\n      default:\n        console.log(`Unhandled event type ${event?.type}`);\n    }\n    return `This action returns nothing`;\n  }\n  /**\n   *\n   * @returns all products in stripe\n   */\n  async getProducts() {\n    return this.stripe.products.list({\n      active: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _Post\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post-1.html":{"url":"classes/Post-1.html","title":"class - Post-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/post.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                bookmarks\n                            \n                            \n                                    \n                                    Optional\n                                contact\n                            \n                            \n                                    \n                                contract\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    Optional\n                                expirationDate\n                            \n                            \n                                    \n                                    Optional\n                                extra\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                image\n                            \n                            \n                                    \n                                jobStartDate\n                            \n                            \n                                    \n                                    Optional\n                                paiement\n                            \n                            \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                priority\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookmarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Bookmarks[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Bookmarks})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contract\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobContract\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: JobContract, enumName: 'JobContract'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        expirationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        extra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobStartDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        paiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobPaiement\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: JobPaiement, enumName: 'JobPaiement'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobPriority\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: JobPriority, enumName: 'JobPriority'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: JobType, enumName: 'JobType'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\nimport { Bookmarks } from './bookmarks';\nimport { JobType, JobPriority, JobContract, JobPaiement } from '@prisma/client';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class Post {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ enum: JobType, enumName: 'JobType' })\n  type: JobType;\n\n  @ApiProperty({ enum: JobPriority, enumName: 'JobPriority' })\n  priority: JobPriority;\n\n  @ApiProperty({ enum: JobContract, enumName: 'JobContract' })\n  contract: JobContract;\n\n  @ApiProperty({ type: String })\n  title: string;\n\n  @ApiProperty({ type: String })\n  description: string;\n\n  @ApiPropertyOptional({ type: String })\n  extra?: string;\n\n  @ApiProperty({ type: Date })\n  jobStartDate: Date;\n\n  @ApiPropertyOptional({ enum: JobPaiement, enumName: 'JobPaiement' })\n  paiement?: JobPaiement;\n\n  @ApiPropertyOptional({ type: String })\n  address?: string;\n\n  @ApiPropertyOptional({ type: String })\n  contact?: string;\n\n  @ApiPropertyOptional({ type: String })\n  image?: string;\n\n  @ApiPropertyOptional({ type: String })\n  price?: string;\n\n  @ApiPropertyOptional({ type: Date })\n  expirationDate?: Date;\n\n  @ApiProperty({ type: String })\n  userId: string;\n\n  @ApiProperty({ type: () => User })\n  user: User;\n\n  @ApiProperty({ isArray: true, type: () => Bookmarks })\n  bookmarks: Bookmarks[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostController.html":{"url":"controllers/PostController.html","title":"controller - PostController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/post.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                post\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                addImage\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                bookmarkPost\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                deleteBookmark\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findAllUserPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                getAllPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getBookmarks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getFilteredPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getPost\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        addImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    addImage(file: Express.Multer.File, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@ApiOkResponse({type: Image})@HttpCode(200)@ApiImageFile('image')@Post('/addImage')\n                \n            \n\n            \n                \n                    Defined in src/post/post.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an uploaded image of a post\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        bookmarkPost\n                        \n                    \n                \n            \n            \n                \n                    \n                    bookmarkPost(user: User, bookmarkDto: BookmarkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@HttpCode(200)@ApiOkResponse({type: Bookmarks})@Post('/bookmark')\n                \n            \n\n            \n                \n                    Defined in src/post/post.controller.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookmarkDto\n                                    \n                                                BookmarkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Bookmark a post for user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPostDto: CreatePostDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@HttpCode(200)@ApiOkResponse({type: PostClass})@Post()\n                \n            \n\n            \n                \n                    Defined in src/post/post.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPostDto\n                                    \n                                                CreatePostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        deleteBookmark\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBookmark(user: User, bookmarkDto: BookmarkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@HttpCode(200)@ApiOkResponse({type: Bookmarks})@Delete('/bookmark')\n                \n            \n\n            \n                \n                    Defined in src/post/post.controller.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookmarkDto\n                                    \n                                                BookmarkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        a deleted bookmark object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        findAllUserPosts\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserPosts(user: User, selectPostsDto: SelectPostsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@HttpCode(200)@ApiOkResponse({type: GetPostsResponse})@Get()\n                \n            \n\n            \n                \n                    Defined in src/post/post.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectPostsDto\n                                    \n                                                SelectPostsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getAllPosts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPosts(selectAllPostsDto: SelectAllPostsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@ApiOkResponse({type: GetPostsResponse})@Get('/allposts')\n                \n            \n\n            \n                \n                    Defined in src/post/post.controller.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectAllPostsDto\n                                    \n                                                SelectAllPostsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        all posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        getBookmarks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBookmarks(user: User, paginationDto: PaginationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@HttpCode(200)@ApiOkResponse({type: GetBookmarksResponse})@Get('/getBookmarks')\n                \n            \n\n            \n                \n                    Defined in src/post/post.controller.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationDto\n                                    \n                                                PaginationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        All current user bookmarks\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getFilteredPosts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteredPosts(searchQuery: SearchQueryDto, filterDto: PostFilterDto, paginationDto: PaginationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@ApiOkResponse({type: GetPostsResponse})@Get('filtered')\n                \n            \n\n            \n                \n                    Defined in src/post/post.controller.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchQuery\n                                    \n                                                SearchQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filterDto\n                                    \n                                                PostFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationDto\n                                    \n                                                PaginationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        an array of Filtred posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        getPost\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPost(getPostDto: GetPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@HttpCode(200)@ApiOkResponse({type: PostClass})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/post/post.controller.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getPostDto\n                                    \n                                                GetPostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(getPostDto: GetPostDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@HttpCode(200)@ApiOkResponse({type: PostClass})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/post/post.controller.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getPostDto\n                                    \n                                                GetPostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(getPostDto: GetPostDto, updatePostDto: UpdatePostDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT-auth')@UseGuards(undefined)@HttpCode(200)@ApiOkResponse({type: PostClass})@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/post/post.controller.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getPostDto\n                                    \n                                                GetPostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePostDto\n                                    \n                                                UpdatePostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  HttpCode,\n  Query,\n  UploadedFile,\n} from '@nestjs/common';\nimport { PostService } from './post.service';\nimport { CreatePostDto } from './dto/create-post.dto';\nimport { UpdatePostDto } from './dto/update-post.dto';\nimport { ApiBearerAuth, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { CurrentUser } from '../auth/decorators/current-user.decorator';\nimport { User } from '@prisma/client';\nimport { Post as PostClass } from '../_gen/prisma-class/post';\nimport { PaginationDto } from '../profile/dto/pagination.dto';\nimport { ApiImageFile } from '../profile/decorators/api-file-decorator';\nimport { Image } from '../_gen/prisma-class/image';\nimport { SelectPostsDto } from './dto/select-post.dto';\nimport { SelectAllPostsDto } from './dto/select-all-posts.dto';\nimport { Bookmarks } from '../_gen/prisma-class/bookmarks';\nimport { BookmarkDto } from './dto/bookmark.dto';\nimport { PostFilterDto } from './dto/post-filter.dto';\nimport { GetPostDto } from './dto/get-post.dto';\nimport { GetPostsResponse } from './entities/getPostsResponse';\nimport { GetBookmarksResponse } from './entities/getBookmarksResponse';\nimport { SearchQueryDto } from './dto/create-search.dto';\n\n@ApiTags('Posts')\n@Controller('post')\nexport class PostController {\n  constructor(private readonly postService: PostService) {}\n\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: PostClass,\n  })\n  @Post()\n  create(@Body() createPostDto: CreatePostDto, @CurrentUser() user: User) {\n    return this.postService.create(createPostDto, user);\n  }\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: GetPostsResponse,\n  })\n  /**\n   * Return All current user posts\n   */\n  @Get()\n  findAllUserPosts(\n    @CurrentUser() user: User,\n    @Query() selectPostsDto: SelectPostsDto,\n  ) {\n    return this.postService.findAllUserPosts(\n      user,\n      selectPostsDto.userId,\n      selectPostsDto.type,\n      selectPostsDto.priority,\n      selectPostsDto.take && +selectPostsDto.take,\n      selectPostsDto.skip && +selectPostsDto.skip,\n    );\n  }\n  /**\n   * @return an uploaded image of a post\n   */\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiOkResponse({ type: Image })\n  @HttpCode(200)\n  @ApiImageFile('image')\n  @Post('/addImage')\n  addImage(\n    @UploadedFile()\n    file: Express.Multer.File,\n    @CurrentUser() user: User,\n  ): any {\n    return this.postService.addImage(file, user);\n  }\n  /**\n   *\n   * @param selectAllPostsDto\n   * @returns all posts\n   */\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: GetPostsResponse,\n  })\n  @Get('/allposts')\n  getAllPosts(@Query() selectAllPostsDto: SelectAllPostsDto) {\n    return this.postService.getAllPosts(\n      selectAllPostsDto.type,\n      selectAllPostsDto.priority,\n      selectAllPostsDto.take && +selectAllPostsDto.take,\n      selectAllPostsDto.skip && +selectAllPostsDto.skip,\n    );\n  }\n  /**\n   *\n   * @param user\n   * @param bookmarkDto\n   * @returns Bookmark a post for user\n   */\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: Bookmarks,\n  })\n  @Post('/bookmark')\n  bookmarkPost(@CurrentUser() user: User, @Body() bookmarkDto: BookmarkDto) {\n    return this.postService.bookmarkPost(user, bookmarkDto);\n  }\n  /**\n   *\n   * @param user\n   * @param paginationDto\n   * @returns All current user bookmarks\n   */\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: GetBookmarksResponse,\n  })\n  @Get('/getBookmarks')\n  getBookmarks(\n    @CurrentUser() user: User,\n    @Query() paginationDto: PaginationDto,\n  ) {\n    return this.postService.getBookmarks(\n      user,\n      paginationDto.take && +paginationDto.take,\n      paginationDto.skip && +paginationDto.skip,\n    );\n  }\n  /**\n   *\n   * @param user\n   * @param bookmarkDto\n   * @returns a deleted bookmark object\n   */\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: Bookmarks,\n  })\n  @Delete('/bookmark')\n  deleteBookmark(@CurrentUser() user: User, @Body() bookmarkDto: BookmarkDto) {\n    return this.postService.deleteBookmark(user, bookmarkDto);\n  }\n  /**\n   *\n   * @param filterDto\n   * @returns an array of Filtred posts\n   */\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: GetPostsResponse,\n  })\n  @Get('filtered')\n  async getFilteredPosts(\n    @Query() searchQuery: SearchQueryDto,\n    @Query() filterDto: PostFilterDto,\n    @Query() paginationDto: PaginationDto,\n  ) {\n    return await this.postService.findFilteredPosts(\n      searchQuery,\n      filterDto,\n      paginationDto.take && +paginationDto.take,\n      paginationDto.skip && +paginationDto.skip,\n    );\n  }\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: PostClass,\n  })\n  /***\n   * Return a post by id\n   */\n  @Get(':id')\n  async getPost(@Param() getPostDto: GetPostDto) {\n    return this.postService.findOne(getPostDto.id);\n  }\n\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: PostClass,\n  })\n  @Patch(':id')\n  update(\n    @Param() getPostDto: GetPostDto,\n    @Body() updatePostDto: UpdatePostDto,\n    @CurrentUser() user: User,\n  ) {\n    return this.postService.update(user, getPostDto.id, updatePostDto);\n  }\n\n  @ApiBearerAuth('JWT-auth')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(200)\n  @ApiOkResponse({\n    type: PostClass,\n  })\n  @Delete(':id')\n  remove(@Param() getPostDto: GetPostDto, @CurrentUser() user: User) {\n    return this.postService.remove(user, getPostDto.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PostExtra.html":{"url":"classes/PostExtra.html","title":"class - PostExtra","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PostExtra\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _PostExtra\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PostExtra-1.html":{"url":"classes/PostExtra-1.html","title":"class - PostExtra-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PostExtra\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/post_extra.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobExtra\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: JobExtra, enumName: 'JobExtra'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post_extra.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/post_extra.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { JobExtra } from '@prisma/client';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PostExtra {\n  @ApiProperty({ type: Number })\n  id: number;\n\n  @ApiProperty({ enum: JobExtra, enumName: 'JobExtra' })\n  content: JobExtra;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PostFilterDto.html":{"url":"classes/PostFilterDto.html","title":"class - PostFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PostFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dto/post-filter.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contract\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                extra\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                jobStartDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                paiement\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postcode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                priority\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                take\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contract\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobContract\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: JobContract, enumName: 'JobContract'})@IsEnum(JobContract, {message: 'Invalid job contract'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/post-filter.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        extra\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobExtra[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({isArray: true, enum: JobExtra, enumName: 'JobExtra'})@IsEnum(JobExtra, {each: true, message: 'Invalid job extra'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/post-filter.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        jobStartDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: Date})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/post-filter.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        paiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobPaiement\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: JobPaiement, enumName: 'JobPaiement'})@IsEnum(JobPaiement, {message: 'Invalid job paiement'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/post-filter.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})@IsString({message: 'Invalid job address'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/post-filter.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})@IsString({message: 'Invalid job price'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/post-filter.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobPriority\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: JobPriority})@IsEnum(JobPriority, {message: 'Invalid job priority'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/post-filter.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@Type(undefined)@IsOptional()@IsInt()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/post-filter.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@Type(undefined)@IsOptional()@IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/post-filter.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: JobType})@IsEnum(JobType, {message: 'Invalid job type'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/post-filter.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  JobContract,\n  JobExtra,\n  JobPaiement,\n  JobPriority,\n  JobType,\n} from '@prisma/client';\nimport { Type } from 'class-transformer';\nimport { IsEnum, IsInt, IsOptional, IsString, Min } from 'class-validator';\n\nexport class PostFilterDto {\n  @ApiProperty({ required: false })\n  @Type(() => Number)\n  @IsOptional()\n  @IsInt()\n  @Min(0)\n  skip?: number;\n\n  @ApiProperty({ required: false })\n  @Type(() => Number)\n  @IsOptional()\n  @IsInt()\n  @Min(1)\n  take?: number;\n\n  @ApiPropertyOptional({ type: JobType })\n  @IsEnum(JobType, { message: 'Invalid job type' })\n  @IsOptional()\n  type?: JobType;\n\n  @ApiPropertyOptional({ type: JobPriority })\n  @IsEnum(JobPriority, { message: 'Invalid job priority' })\n  @IsOptional()\n  priority?: JobPriority;\n\n  @ApiPropertyOptional({ enum: JobContract, enumName: 'JobContract' })\n  @IsEnum(JobContract, { message: 'Invalid job contract' })\n  @IsOptional()\n  contract?: JobContract;\n\n  @ApiPropertyOptional({\n    type: String,\n  })\n  @IsString({ message: 'Invalid job price' })\n  @IsOptional()\n  price?: string;\n\n  @ApiPropertyOptional({ type: String })\n  @IsString({ message: 'Invalid job address' })\n  @IsOptional()\n  postcode?: string;\n\n  @ApiPropertyOptional({ isArray: true, enum: JobExtra, enumName: 'JobExtra' })\n  @IsEnum(JobExtra, { each: true, message: 'Invalid job extra' })\n  @IsOptional()\n  extra?: JobExtra[];\n\n  @ApiPropertyOptional({ type: Date })\n  @IsOptional()\n  jobStartDate?: Date;\n\n  @ApiPropertyOptional({ enum: JobPaiement, enumName: 'JobPaiement' })\n  @IsEnum(JobPaiement, { message: 'Invalid job paiement' })\n  @IsOptional()\n  paiement?: JobPaiement;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n    Modules\n    PostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostModule\n\n\n\ncluster_PostModule_providers\n\n\n\ncluster_PostModule_imports\n\n\n\n\nFilerModule\n\nFilerModule\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nFilerModule->PostModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nPostModule -->\n\nImagesService->PostModule\n\n\n\n\n\nPostService\n\nPostService\n\nPostModule -->\n\nPostService->PostModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPostModule -->\n\nPrismaService->PostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/post/post.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ImagesService\n                        \n                        \n                            PostService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostService } from './post.service';\nimport { PostController } from './post.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ImagesService } from '../images/images.service';\nimport { FilerModule } from '../digitalocean-filer/digitalocean-filer.module';\n@Module({\n  imports: [FilerModule],\n  controllers: [PostController],\n  providers: [PostService, PrismaService, ImagesService],\n})\nexport class PostModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostService.html":{"url":"injectables/PostService.html","title":"injectable - PostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/post.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addImage\n                            \n                            \n                                    Async\n                                bookmarkPost\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteBookmark\n                            \n                            \n                                    Async\n                                findAllUserPosts\n                            \n                            \n                                    Async\n                                findFilteredPosts\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAllPosts\n                            \n                            \n                                    Async\n                                getBookmarks\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                removeUndefinedValues\n                            \n                            \n                                    Async\n                                searchPosts\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, imagesService: ImagesService)\n                    \n                \n                        \n                            \n                                Defined in src/post/post.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imagesService\n                                                  \n                                                        \n                                                                        ImagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    addImage(file: Express.Multer.File, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        an uploaded image of type Image\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bookmarkPost\n                        \n                    \n                \n            \n            \n                \n                    \n                    bookmarkPost(user: User, bookmarkDto: BookmarkDto)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookmarkDto\n                                    \n                                                BookmarkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        bookmark object that represent a bookmarked post by a user id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPostDto: CreatePostDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPostDto\n                                    \n                                                CreatePostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteBookmark\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBookmark(user: User, bookmarkDto: BookmarkDto)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookmarkDto\n                                    \n                                                BookmarkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        deleted bookmark object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserPosts\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserPosts(user: User, userId: string, type: JobType, priority: JobPriority, take?: number, skip?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            JobType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    priority\n                                    \n                                            JobPriority\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        All user posts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findFilteredPosts\n                        \n                    \n                \n            \n            \n                \n                    \n                    findFilteredPosts(searchQuery?: SearchQueryDto, filterDto?: PostFilterDto, take?: number, skip?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchQuery\n                                    \n                                                SearchQueryDto\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    filterDto\n                                    \n                                                PostFilterDto\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:342\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        A post by id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllPosts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPosts(type: JobType, priority: JobPriority, take?: number, skip?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            JobType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    priority\n                                    \n                                            JobPriority\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBookmarks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBookmarks(user: User, take?: number, skip?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        a list of bookmarked posts of specific user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(currentuser: User, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:387\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentuser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeUndefinedValues\n                        \n                    \n                \n            \n            \n                \nremoveUndefinedValues(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:263\n                \n            \n\n\n            \n                \n                    Finds and returns an array of Post objects filtered by the given criteria.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \nA promise that resolves to an array of Post objects.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        searchPosts\n                        \n                    \n                \n            \n            \n                \n                    \n                    searchPosts(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:410\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(user: User, id: string, updatePostDto: UpdatePostDto)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:360\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePostDto\n                                    \n                                                UpdatePostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        An uppdated post\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ForbiddenException,\n  Injectable,\n} from '@nestjs/common';\nimport { CreatePostDto } from './dto/create-post.dto';\nimport { UpdatePostDto } from './dto/update-post.dto';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { User, Image, JobPriority, JobType } from '@prisma/client';\nimport { ImagesService } from '../images/images.service';\nimport { BookmarkDto } from './dto/bookmark.dto';\nimport { PostFilterDto } from './dto/post-filter.dto';\n\nimport { SearchQueryDto } from './dto/create-search.dto';\n\n@Injectable()\nexport class PostService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly imagesService: ImagesService,\n  ) {}\n  async create(createPostDto: CreatePostDto, user: User) {\n    return await this.prisma.post.create({\n      data: {\n        ...createPostDto,\n        extra: createPostDto.extra?.join(','),\n        user: {\n          connect: {\n            id: user.id,\n          },\n        },\n      },\n    });\n  }\n  /**\n   *\n   * @param user\n   * @param userId\n   * @param type\n   * @param priority\n   * @param take\n   * @param skip\n   * @returns All user posts\n   */\n  async findAllUserPosts(\n    user: User,\n    userId: string,\n    type: JobType,\n    priority: JobPriority,\n    take?: number,\n    skip?: number,\n  ) {\n    if (userId) {\n      const [posts, totalCount] = await Promise.all([\n        this.prisma.post.findMany({\n          where: {\n            userId: userId,\n            priority: priority || undefined,\n            type: type || undefined,\n            expirationDate: {\n              gt: new Date().toISOString(),\n            },\n          },\n          take,\n          skip,\n          include: {\n            user: true,\n          },\n          orderBy: {\n            expirationDate: 'desc',\n          },\n        }),\n        this.prisma.post.count({\n          where: {\n            priority: priority || undefined,\n            type: type,\n          },\n        }),\n      ]);\n      return {\n        totalCount,\n        posts,\n      };\n    } else {\n      const [posts, totalCount] = await Promise.all([\n        this.prisma.post.findMany({\n          where: {\n            userId: user.id,\n            priority: priority || undefined,\n            type: type || undefined,\n          },\n          take,\n          skip,\n          include: {\n            user: true,\n          },\n          orderBy: {\n            expirationDate: 'desc',\n          },\n        }),\n        this.prisma.post.count({\n          where: {\n            priority: priority || undefined,\n            type: type,\n          },\n        }),\n      ]);\n      return {\n        totalCount,\n        posts,\n      };\n    }\n  }\n  async getAllPosts(\n    type: JobType,\n    priority: JobPriority,\n    take?: number,\n    skip?: number,\n  ) {\n    if (type === 'JOB_AD') {\n      const [posts, totalCount] = await Promise.all([\n        this.prisma.post.findMany({\n          where: {\n            priority: priority || undefined,\n            type: type,\n            expirationDate: {\n              gt: new Date().toISOString(),\n            },\n          },\n          take,\n          skip,\n          include: {\n            user: true,\n          },\n        }),\n        this.prisma.post.count({\n          where: {\n            priority: priority || undefined,\n            type: type,\n            expirationDate: {\n              gt: new Date().toISOString(),\n            },\n          },\n        }),\n      ]);\n\n      return {\n        totalCount,\n        posts,\n      };\n    } else {\n      const [posts, totalCount] = await Promise.all([\n        this.prisma.post.findMany({\n          where: {\n            priority: priority || undefined,\n            NOT: {\n              type: 'JOB_AD',\n            },\n            expirationDate: {\n              gt: new Date().toISOString(),\n            },\n          },\n          take,\n          skip,\n          include: {\n            user: true,\n          },\n        }),\n        this.prisma.post.count({\n          where: {\n            priority: priority || undefined,\n            NOT: {\n              type: 'JOB_AD',\n            },\n\n            expirationDate: {\n              gt: new Date().toISOString(),\n            },\n          },\n        }),\n      ]);\n      return {\n        totalCount,\n        posts,\n      };\n    }\n  }\n  /**\n   * @param file\n   * @param user\n   * @return an uploaded image of type Image\n   */\n  async addImage(file: Express.Multer.File, user: User): Promise {\n    return await this.imagesService.createImage(file, user, false, false, true);\n  }\n  /**\n   *\n   * @param user\n   * @param postId\n   * @returns bookmark object that represent a bookmarked post by a user id\n   */\n  async bookmarkPost(user: User, bookmarkDto: BookmarkDto) {\n    return await this.prisma.bookmarks.create({\n      data: {\n        userId: user.id,\n        postId: bookmarkDto.postId,\n      },\n    });\n  }\n  /**\n   *\n   * @param user\n   * @returns a list of bookmarked posts of specific user\n   */\n  async getBookmarks(user: User, take?: number, skip?: number) {\n    const [bookmarks, totalCount] = await Promise.all([\n      this.prisma.bookmarks.findMany({\n        where: {\n          userId: user.id,\n        },\n        select: {\n          post: {\n            include: {\n              user: true,\n            },\n          },\n        },\n        take,\n        skip,\n      }),\n      this.prisma.bookmarks.count({\n        where: {\n          userId: user.id,\n        },\n      }),\n    ]);\n    return {\n      totalCount,\n      bookmarks,\n    };\n  }\n  /**\n   *\n   * @param user\n   * @param postId\n   * @returns deleted bookmark object\n   */\n  async deleteBookmark(user: User, bookmarkDto: BookmarkDto) {\n    return await this.prisma.bookmarks.delete({\n      where: {\n        postId_userId: { postId: bookmarkDto.postId, userId: user.id },\n      },\n    });\n  }\n  /**\n   * Finds and returns an array of Post objects filtered by the given criteria.\n   * @async\n   * @function findFilteredPosts\n   * @param {PostFilterDto} filterDto - The object containing filter criteria.\n   * @returns {Promise} - A promise that resolves to an array of Post objects.\n   */\n\n  removeUndefinedValues(obj: any) {\n    // recursively iterate through each key-value pair in the object\n    for (const prop in obj) {\n      if (typeof obj[prop] === 'object') {\n        // if the value is an object, recursively call the function on it\n        this.removeUndefinedValues(obj[prop]);\n        // if the object has no more properties, delete the key\n        if (Object.keys(obj[prop]).length === 0) {\n          delete obj[prop];\n        }\n      } else if (obj[prop] === undefined) {\n        // remove the key-value pair if the value is undefined\n        delete obj[prop];\n      }\n    }\n  }\n\n  async findFilteredPosts(\n    searchQuery?: SearchQueryDto,\n    filterDto?: PostFilterDto,\n    take?: number,\n    skip?: number,\n  ) {\n    const where = {\n      AND: [\n        {\n          OR: [\n            { title: { contains: searchQuery?.search } },\n            { description: { contains: searchQuery?.search } },\n            { user: { firstName: { contains: searchQuery?.search } } },\n            { user: { lastName: { contains: searchQuery?.search } } },\n          ],\n        },\n        { address: { contains: searchQuery?.location } },\n        { type: filterDto?.type },\n        { priority: filterDto?.priority },\n        { user: { postcode: filterDto?.postcode } },\n        { jobStartDate: filterDto?.jobStartDate },\n        { price: { contains: filterDto?.price } },\n        { contract: filterDto?.contract },\n        { paiement: filterDto?.paiement },\n        {\n          extra: (filterDto?.extra && filterDto.extra.join(',')) || undefined,\n        },\n        {\n          expirationDate: {\n            gt: new Date().toISOString(),\n          },\n        },\n      ],\n    };\n    this.removeUndefinedValues(where);\n    where.AND = where.AND\n      ? where.AND.filter((criteria) => Object.keys(criteria).length > 0)\n      : where.AND;\n    console.log(where);\n    const [posts, totalCount] = await Promise.all([\n      this.prisma.post.findMany({\n        where,\n        take,\n        skip,\n        include: {\n          user: true,\n        },\n      }),\n      this.prisma.post.count({\n        where,\n      }),\n    ]);\n    return {\n      totalCount,\n      posts,\n    };\n  }\n  /**\n   *\n   * @param id\n   * @returns A post by id\n   */\n  async findOne(id: string) {\n    return await this.prisma.post.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        user: true,\n      },\n    });\n  }\n  /**\n   *\n   * @param user\n   * @param id\n   * @param updatePostDto\n   * @returns An uppdated post\n   * @throws Bad request in case the post already paid\n   */\n  async update(user: User, id: string, updatePostDto: UpdatePostDto) {\n    const currentPost = await this.prisma.post.findUnique({\n      where: {\n        id,\n      },\n    });\n    if (\n      currentPost?.expirationDate &&\n      currentPost?.expirationDate.toISOString() > new Date().toISOString()\n    )\n      throw new BadRequestException('Post already paid');\n    return this.prisma.post.update({\n      where: {\n        id,\n      },\n      data: {\n        ...updatePostDto,\n        user: {\n          connect: {\n            id: user.id,\n          },\n        },\n        extra: updatePostDto.extra ? updatePostDto.extra.join(',') : '',\n      },\n    });\n  }\n\n  async remove(currentuser: User, id: string) {\n    const post = await this.prisma.post.findUnique({\n      where: {\n        id,\n      },\n      include: {\n        user: true,\n        bookmarks: true,\n      },\n    });\n    if (post?.user.id != currentuser.id) {\n      throw new ForbiddenException('Resource not valid');\n    }\n\n    const res = await this.prisma.post.delete({\n      where: {\n        id,\n      },\n    });\n    return res;\n  }\n\n  //SEARCH SERVICE\n  async searchPosts(query: string) {\n    const sanitizedQuery = query.replace(/[^a-zA-Z0-9\\s]/g, '');\n    const result = await this.prisma.post.findMany({\n      where: {\n        OR: [\n          { title: { contains: sanitizedQuery } },\n          { description: { contains: sanitizedQuery } },\n          { user: { firstName: { contains: sanitizedQuery } } },\n          { user: { lastName: { contains: sanitizedQuery } } },\n        ],\n      },\n      include: {\n        user: true,\n      },\n    });\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaClientExceptionFilter.html":{"url":"classes/PrismaClientExceptionFilter.html","title":"class - PrismaClientExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaClientExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma-client-exception/prisma-client-exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Prisma.PrismaClientKnownRequestError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma-client-exception/prisma-client-exception.filter.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            Prisma.PrismaClientKnownRequestError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, HttpStatus } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\nimport { Prisma } from '@prisma/client';\nimport { Response } from 'express';\n\n@Catch(Prisma.PrismaClientKnownRequestError)\nexport class PrismaClientExceptionFilter extends BaseExceptionFilter {\n  catch(exception: Prisma.PrismaClientKnownRequestError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const message = exception.message.replace(/\\n/g, '');\n\n    switch (exception.code) {\n      case 'P2002':\n        response.status(HttpStatus.CONFLICT).json({\n          statusCode: HttpStatus.CONFLICT,\n          message: exception.message.replace(/\\n/g, ''),\n        });\n        break;\n      case 'P2023':\n        const status = HttpStatus.CONFLICT;\n        response.status(status).json({\n          statusCode: status,\n          message: message,\n        });\n        break;\n      default:\n        // default 500 error code\n        response.status(409).json({\n          statusCode: 409,\n          message: message,\n        });\n        super.catch(exception, host);\n        break;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaHealthIndicator.html":{"url":"injectables/PrismaHealthIndicator.html","title":"injectable - PrismaHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaHealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health-check/prisma-health/prisma.heatlth.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HealthIndicator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                isHealthy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/health-check/prisma-health/prisma.heatlth.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isHealthy\n                        \n                    \n                \n            \n            \n                \n                    \n                    isHealthy(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health-check/prisma-health/prisma.heatlth.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  HealthCheckError,\n  HealthIndicator,\n  HealthIndicatorResult,\n} from '@nestjs/terminus';\nimport { PrismaService } from '../../prisma/prisma.service';\n\n@Injectable()\nexport class PrismaHealthIndicator extends HealthIndicator {\n  constructor(private readonly prismaService: PrismaService) {\n    super();\n  }\n\n  async isHealthy(key: string): Promise {\n    try {\n      await this.prismaService.$queryRaw`SELECT 1`;\n      return this.getStatus(key, true);\n    } catch (e) {\n      throw new HealthCheckError('Prisma check failed', e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient {\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDto.html":{"url":"classes/ProductDto.html","title":"class - ProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payement/entities/productRes.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                created\n                            \n                            \n                                    \n                                default_price\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                images\n                            \n                            \n                                    \n                                livemode\n                            \n                            \n                                    \n                                metadata\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                package_dimensions\n                            \n                            \n                                    \n                                shippable\n                            \n                            \n                                    \n                                statement_descriptor\n                            \n                            \n                                    \n                                tax_code\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                unit_label\n                            \n                            \n                                    \n                                updated\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if the product is active', example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of attributes', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The timestamp when the product was created', example: 1684247686})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        default_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The default price ID of the product', example: 'price_1N8OxeGfeNo2kU7nAZl8S0gI'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The description of the product', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the product', example: 'prod_NuDO1SxnKT98Li'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of images', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        livemode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if the product is in live mode', example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Metadata associated with the product', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the product', example: 'OFFER_SERVICE/URGENT'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The object type of the product', example: 'product'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        package_dimensions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The package dimensions of the product', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shippable\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if the product is shippable', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        statement_descriptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The statement descriptor of the product', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tax_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The tax code of the product', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The type of the product', example: 'service'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unit_label\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The unit label of the product', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The timestamp when the product was last updated', example: 1684248753})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The URL of the product', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:98\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nclass ProductDto {\n  @ApiProperty({\n    description: 'The ID of the product',\n    example: 'prod_NuDO1SxnKT98Li',\n  })\n  id: string;\n\n  @ApiProperty({\n    description: 'The object type of the product',\n    example: 'product',\n  })\n  object: string;\n\n  @ApiProperty({\n    description: 'Indicates if the product is active',\n    example: true,\n  })\n  active: boolean;\n\n  @ApiProperty({\n    type: [String],\n    description: 'List of attributes',\n    example: [],\n  })\n  attributes: string[];\n\n  @ApiProperty({\n    description: 'The timestamp when the product was created',\n    example: 1684247686,\n  })\n  created: number;\n\n  @ApiProperty({\n    description: 'The default price ID of the product',\n    example: 'price_1N8OxeGfeNo2kU7nAZl8S0gI',\n  })\n  default_price: string;\n\n  @ApiProperty({ description: 'The description of the product', example: null })\n  description: string | null;\n\n  @ApiProperty({ type: [String], description: 'List of images', example: [] })\n  images: string[];\n\n  @ApiProperty({\n    description: 'Indicates if the product is in live mode',\n    example: false,\n  })\n  livemode: boolean;\n\n  @ApiProperty({\n    description: 'Metadata associated with the product',\n    example: { period: '72' },\n  })\n  metadata: { [key: string]: any };\n\n  @ApiProperty({\n    description: 'The name of the product',\n    example: 'OFFER_SERVICE/URGENT',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'The package dimensions of the product',\n    example: null,\n  })\n  package_dimensions: any | null;\n\n  @ApiProperty({\n    description: 'Indicates if the product is shippable',\n    example: null,\n  })\n  shippable: boolean | null;\n\n  @ApiProperty({\n    description: 'The statement descriptor of the product',\n    example: null,\n  })\n  statement_descriptor: string | null;\n\n  @ApiProperty({ description: 'The tax code of the product', example: null })\n  tax_code: string | null;\n\n  @ApiProperty({ description: 'The type of the product', example: 'service' })\n  type: string;\n\n  @ApiProperty({ description: 'The unit label of the product', example: null })\n  unit_label: string | null;\n\n  @ApiProperty({\n    description: 'The timestamp when the product was last updated',\n    example: 1684248753,\n  })\n  updated: number;\n\n  @ApiProperty({ description: 'The URL of the product', example: null })\n  url: string | null;\n}\n\nexport class ProductListResponseDto {\n  @ApiProperty({\n    description: 'The object type of the response',\n    example: 'list',\n  })\n  object: string;\n\n  @ApiProperty({ type: [ProductDto], description: 'List of products' })\n  data: ProductDto[];\n\n  @ApiProperty({\n    description: 'Indicates if there are more products available',\n    example: true,\n  })\n  has_more: boolean;\n\n  @ApiProperty({\n    description: 'The URL of the response',\n    example: '/v1/products',\n  })\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductListResponseDto.html":{"url":"classes/ProductListResponseDto.html","title":"class - ProductListResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductListResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payement/entities/productRes.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                has_more\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of products'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        has_more\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Indicates if there are more products available', example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The object type of the response', example: 'list'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The URL of the response', example: '/v1/products'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payement/entities/productRes.ts:121\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nclass ProductDto {\n  @ApiProperty({\n    description: 'The ID of the product',\n    example: 'prod_NuDO1SxnKT98Li',\n  })\n  id: string;\n\n  @ApiProperty({\n    description: 'The object type of the product',\n    example: 'product',\n  })\n  object: string;\n\n  @ApiProperty({\n    description: 'Indicates if the product is active',\n    example: true,\n  })\n  active: boolean;\n\n  @ApiProperty({\n    type: [String],\n    description: 'List of attributes',\n    example: [],\n  })\n  attributes: string[];\n\n  @ApiProperty({\n    description: 'The timestamp when the product was created',\n    example: 1684247686,\n  })\n  created: number;\n\n  @ApiProperty({\n    description: 'The default price ID of the product',\n    example: 'price_1N8OxeGfeNo2kU7nAZl8S0gI',\n  })\n  default_price: string;\n\n  @ApiProperty({ description: 'The description of the product', example: null })\n  description: string | null;\n\n  @ApiProperty({ type: [String], description: 'List of images', example: [] })\n  images: string[];\n\n  @ApiProperty({\n    description: 'Indicates if the product is in live mode',\n    example: false,\n  })\n  livemode: boolean;\n\n  @ApiProperty({\n    description: 'Metadata associated with the product',\n    example: { period: '72' },\n  })\n  metadata: { [key: string]: any };\n\n  @ApiProperty({\n    description: 'The name of the product',\n    example: 'OFFER_SERVICE/URGENT',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'The package dimensions of the product',\n    example: null,\n  })\n  package_dimensions: any | null;\n\n  @ApiProperty({\n    description: 'Indicates if the product is shippable',\n    example: null,\n  })\n  shippable: boolean | null;\n\n  @ApiProperty({\n    description: 'The statement descriptor of the product',\n    example: null,\n  })\n  statement_descriptor: string | null;\n\n  @ApiProperty({ description: 'The tax code of the product', example: null })\n  tax_code: string | null;\n\n  @ApiProperty({ description: 'The type of the product', example: 'service' })\n  type: string;\n\n  @ApiProperty({ description: 'The unit label of the product', example: null })\n  unit_label: string | null;\n\n  @ApiProperty({\n    description: 'The timestamp when the product was last updated',\n    example: 1684248753,\n  })\n  updated: number;\n\n  @ApiProperty({ description: 'The URL of the product', example: null })\n  url: string | null;\n}\n\nexport class ProductListResponseDto {\n  @ApiProperty({\n    description: 'The object type of the response',\n    example: 'list',\n  })\n  object: string;\n\n  @ApiProperty({ type: [ProductDto], description: 'List of products' })\n  data: ProductDto[];\n\n  @ApiProperty({\n    description: 'Indicates if there are more products available',\n    example: true,\n  })\n  has_more: boolean;\n\n  @ApiProperty({\n    description: 'The URL of the response',\n    example: '/v1/products',\n  })\n  url: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfessionalFocus.html":{"url":"classes/ProfessionalFocus.html","title":"class - ProfessionalFocus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfessionalFocus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/professional_focus.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                profile\n                            \n                            \n                                    \n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/professional_focus.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/professional_focus.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Profile})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/professional_focus.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/professional_focus.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Profile } from './profile';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ProfessionalFocus {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  content: string;\n\n  @ApiProperty({ type: () => Profile })\n  profile: Profile;\n\n  @ApiProperty({ type: String })\n  profileId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/entities/profile.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Profile {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile-1.html":{"url":"classes/Profile-1.html","title":"class - Profile-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _Profile\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile-2.html":{"url":"classes/Profile-2.html","title":"class - Profile-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/profile.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                activity\n                            \n                            \n                                    \n                                    Optional\n                                bio\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                profileImage\n                            \n                            \n                                    \n                                    Optional\n                                proFocus\n                            \n                            \n                                    \n                                    Optional\n                                tag_1\n                            \n                            \n                                    \n                                    Optional\n                                tag_2\n                            \n                            \n                                    \n                                    Optional\n                                tag_3\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        activity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Activity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: () => Activity})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        profileImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        proFocus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        tag_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Tags\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Tags, enumName: 'Tags'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        tag_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Tags\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Tags, enumName: 'Tags'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        tag_3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Tags\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Tags, enumName: 'Tags'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Activity } from './activity';\nimport { User } from './user';\nimport { Tags } from '@prisma/client';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class Profile {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiPropertyOptional({ type: String })\n  profileImage?: string;\n\n  @ApiPropertyOptional({ type: String })\n  bio?: string;\n\n  @ApiPropertyOptional({ type: () => Activity })\n  activity?: Activity;\n\n  @ApiPropertyOptional({ enum: Tags, enumName: 'Tags' })\n  tag_1?: Tags;\n\n  @ApiPropertyOptional({ enum: Tags, enumName: 'Tags' })\n  tag_2?: Tags;\n\n  @ApiPropertyOptional({ enum: Tags, enumName: 'Tags' })\n  tag_3?: Tags;\n\n  @ApiProperty({ type: () => User })\n  user: User;\n\n  @ApiProperty({ type: String })\n  userId: string;\n\n  @ApiPropertyOptional({ type: String })\n  proFocus?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileBookmarks.html":{"url":"classes/ProfileBookmarks.html","title":"class - ProfileBookmarks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileBookmarks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _ProfileBookmarks\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileBookmarks-1.html":{"url":"classes/ProfileBookmarks-1.html","title":"class - ProfileBookmarks-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileBookmarks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/profile_bookmarks.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                bookmarkedUser\n                            \n                            \n                                    \n                                bookmarkedUserId\n                            \n                            \n                                    \n                                bookmarkingUser\n                            \n                            \n                                    \n                                bookmarkingUserId\n                            \n                            \n                                    \n                                createdAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookmarkedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile_bookmarks.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookmarkedUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile_bookmarks.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookmarkingUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile_bookmarks.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookmarkingUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile_bookmarks.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/profile_bookmarks.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ProfileBookmarks {\n  @ApiProperty({ type: () => User })\n  bookmarkingUser: User;\n\n  @ApiProperty({ type: String })\n  bookmarkingUserId: string;\n\n  @ApiProperty({ type: () => User })\n  bookmarkedUser: User;\n\n  @ApiProperty({ type: String })\n  bookmarkedUserId: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nFilerModule\n\nFilerModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nFilerModule->ProfileModule\n\n\n\n\n\nActivitiesService\n\nActivitiesService\n\nProfileModule -->\n\nActivitiesService->ProfileModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nProfileModule -->\n\nImagesService->ProfileModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nProfileModule -->\n\nPrismaService->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nProfileModule -->\n\nResumesService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ActivitiesService\n                        \n                        \n                            ImagesService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ProfileService\n                        \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { ProfileController } from './profile.controller';\nimport { FilerModule } from '../digitalocean-filer/digitalocean-filer.module';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ImagesService } from '../images/images.service';\nimport { ResumesService } from '../resumes/resumes.service';\nimport { ActivitiesService } from '../activities/activities.service';\n\n@Module({\n  imports: [FilerModule],\n  controllers: [ProfileController],\n  providers: [\n    ProfileService,\n    PrismaService,\n    ImagesService,\n    ResumesService,\n    ActivitiesService,\n  ],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bookmarkProfile\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                deleteUserGallery\n                            \n                            \n                                    Async\n                                getBookmarkedProfiles\n                            \n                            \n                                    Async\n                                getProFocus\n                            \n                            \n                                    Async\n                                getUserGallery\n                            \n                            \n                                    Async\n                                getUserGalleryById\n                            \n                            \n                                    Async\n                                getUserResumeById\n                            \n                            \n                                    Async\n                                getUserResumes\n                            \n                            \n                                    Async\n                                setProFocus\n                            \n                            \n                                    Async\n                                setUserActivity\n                            \n                            \n                                    Async\n                                setUserBio\n                            \n                            \n                                    Async\n                                setUserTags\n                            \n                            \n                                    Async\n                                uploadGalleryImage\n                            \n                            \n                                    Async\n                                uploadProfileImage\n                            \n                            \n                                    Async\n                                uploadResume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, imagesService: ImagesService, resumeService: ResumesService, activityService: ActivitiesService)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imagesService\n                                                  \n                                                        \n                                                                        ImagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resumeService\n                                                  \n                                                        \n                                                                        ResumesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivitiesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bookmarkProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    bookmarkProfile(user: User, bookmarkProfileDto: BookmarkProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:325\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookmarkProfileDto\n                                    \n                                                BookmarkProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:314\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUserGallery\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUserGallery(user: User, deleteUserGalleryDto: DeleteUserGalleryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    deleteUserGalleryDto\n                                    \n                                                DeleteUserGalleryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBookmarkedProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBookmarkedProfiles(user: User, take?: number, skip?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:354\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProFocus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProFocus(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserGallery\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserGallery(user: User, take?: number, skip?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserGalleryById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserGalleryById(user: User, id: string, take?: number, skip?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserResumeById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserResumeById(user: User, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserResumes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserResumes(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setProFocus\n                        \n                    \n                \n            \n            \n                \n                    \n                    setProFocus(user: User, createProFocus: CreateProFocusDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createProFocus\n                                    \n                                                CreateProFocusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setUserActivity\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserActivity(user: User, CreateActivityDto: CreateActivityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    CreateActivityDto\n                                    \n                                                CreateActivityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setUserBio\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserBio(user: User, createBioDto: CreateBioDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createBioDto\n                                    \n                                                CreateBioDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setUserTags\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserTags(user: User, body: CreateTagsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateTagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadGalleryImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadGalleryImage(file: Express.Multer.File, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadProfileImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadProfileImage(file: Express.Multer.File, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadResume\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadResume(files: Array, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { User, Image, Resume } from '@prisma/client';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ImagesService } from '../images/images.service';\nimport { ResumesService } from '../resumes/resumes.service';\nimport { CreateActivityDto } from './dto/create-activity.dto';\nimport { CreateTagsDto } from './dto/create-tags.dto';\nimport { ActivitiesService } from '../activities/activities.service';\nimport { CreateBioDto } from './dto/create-bio.dto';\nimport { CreateProFocusDto } from './dto/create-profocus.dto';\nimport { DeleteUserGalleryDto } from './dto/delete-user-gallery.dto';\nimport { BookmarkProfileDto } from './dto/bookmark-profile.dto';\n@Injectable()\nexport class ProfileService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly imagesService: ImagesService,\n    private readonly resumeService: ResumesService,\n    private readonly activityService: ActivitiesService,\n  ) {}\n  //SERVICE TO UPLOAD USER PROFILE IMAGE\n  async uploadProfileImage(file: Express.Multer.File, user: User) {\n    const image = await this.imagesService.createImage(file, user, true);\n    //CREATE A PROFILE IF NOT EXIST | UPDATE EXISTING PROFILE -> SET NEW PROFILE IMAGE\n    const profile = await this.prisma.profile.upsert({\n      where: {\n        userId: user.id,\n      },\n      update: {\n        profileImage: image.imageUrl,\n      },\n      create: {\n        user: {\n          connect: {\n            id: user.id,\n          },\n        },\n\n        profileImage: image.imageUrl,\n      },\n      include: {\n        user: true,\n      },\n    });\n    return profile;\n  }\n  //SERVICE TO UPLOAD AN IMAGE TO USER IMAGES GALLERY\n  async uploadGalleryImage(\n    file: Express.Multer.File,\n    user: User,\n  ): Promise {\n    return await this.imagesService.createImage(file, user, false, true);\n  }\n  //SERVICE TO GET ALL USER IMAGES GALLERY\n  async getUserGallery(\n    user: User,\n    take?: number,\n    skip?: number,\n  ): Promise {\n    return await this.imagesService.getUserGallery(user, take, skip);\n  }\n  //SERVICE TO DELETE USER IMAGES GALLERY\n  async deleteUserGallery(\n    user: User,\n    deleteUserGalleryDto: DeleteUserGalleryDto,\n  ) {\n    await this.prisma.image.deleteMany({\n      where: {\n        ownerId: user.id,\n        id: {\n          in: deleteUserGalleryDto.idsArray,\n        },\n      },\n    });\n    return 'Gallery Updated';\n  }\n  //SERVICE TO GET USER GALLERY BY USER ID\n  async getUserGalleryById(\n    user: User,\n    id: string,\n    take?: number,\n    skip?: number,\n  ): Promise {\n    if (!id) {\n      return null;\n    }\n    //GET THE CURRENT USER (JWT USER)\n    const currentUser = await this.prisma.user.findUnique({\n      where: { id: user.id },\n    });\n    //GET THE USER BASE ON THE ID PATH PARAM\n    const dbUser = await this.prisma.user.findUnique({\n      where: {\n        id: id,\n      },\n      include: {\n        profile: {\n          include: {\n            activity: true,\n          },\n        },\n      },\n    });\n    if (dbUser) {\n      if (dbUser.visibility == 'PUBLIC') {\n        return await this.imagesService.getUserGallery(dbUser, take, skip);\n      }\n      if (\n        dbUser.visibility == 'COMPANY' &&\n        currentUser?.userType == 'COMPANY'\n      ) {\n        return await this.imagesService.getUserGallery(dbUser, take, skip);\n      }\n    }\n    return null;\n  }\n  // THIS FUNCTION TAKES IN AN ARRAY OF FILES AND A USER OBJECT, AND RETURNS AN ARRAY OF UPLOADED RESUMES.\n  async uploadResume(\n    files: Array,\n    user: User,\n  ): Promise {\n    // INITIALIZE AN EMPTY ARRAY TO STORE UPLOADED RESUMES.\n    const arrayOfUploadedResumes: Resume[] = [];\n\n    // LOOP THROUGH EACH FILE IN THE ARRAY OF FILES.\n    for (const file of files) {\n      // CHECK IF THE FILE IS A PDF BY VERIFYING ITS MIMETYPE.\n      if (file.mimetype != 'application/pdf') {\n        // THROW A BADREQUESTEXCEPTION IF THE FILE IS NOT A PDF.\n        throw new BadRequestException(`Check your file ${file.originalname}`);\n      }\n\n      // CHECK IF A RESUME WITH THE SAME FILE NAME ALREADY EXISTS FOR THE USER.\n      const res = await this.prisma.resume.findFirst({\n        where: {\n          ownerId: user.id,\n          resumeUrl:\n            'https://cc-dev-storage.fra1.digitaloceanspaces.com/TIPPJOB/' +\n            file.originalname,\n        },\n      });\n\n      // IF A RESUME WITH THE SAME FILE NAME DOES NOT EXIST, CREATE A NEW RESUME AND ADD IT TO THE ARRAY OF UPLOADED RESUMES.\n      if (!res) {\n        const resume = await this.resumeService.createResume(file, user);\n        arrayOfUploadedResumes.push(resume);\n      }\n      // IF A RESUME WITH THE SAME FILE NAME EXISTS, ADD IT TO THE ARRAY OF UPLOADED RESUMES.\n      else {\n        arrayOfUploadedResumes.push(res);\n      }\n    }\n\n    // DELETE ANY EXISTING RESUMES FOR THE USER THAT WERE NOT UPLOADED IN THIS BATCH.\n    await this.resumeService.deleteResumes(\n      arrayOfUploadedResumes.map((resume) => resume.id),\n      user.id,\n    );\n\n    // RETURN THE ARRAY OF UPLOADED RESUMES.\n    return arrayOfUploadedResumes;\n  }\n\n  //SERVICE TO GET ALL USER RESUMES\n  async getUserResumes(user: User): Promise {\n    return await this.resumeService.getUserResumes(user);\n  }\n\n  //SERVICE TO GET ALL USER RESUMES BY ID\n  async getUserResumeById(user: User, id: string): Promise {\n    if (!id) {\n      return null;\n    }\n    //GET THE CURRENT USER (JWT USER)\n    const currentUser = await this.prisma.user.findUnique({\n      where: { id: user.id },\n    });\n    if (!currentUser) {\n      throw new UnauthorizedException('Unauthorized');\n    }\n    //GET THE USER BASE ON THE ID PATH PARAM\n    const dbUser = await this.prisma.user.findUnique({\n      where: {\n        id: id,\n      },\n      include: {\n        profile: {\n          include: {\n            activity: true,\n          },\n        },\n      },\n    });\n    if (dbUser) {\n      if (dbUser.uploadsVisibility == 'PUBLIC') {\n        return await this.resumeService.getUserResumes(dbUser);\n      }\n      if (\n        dbUser.uploadsVisibility == 'COMPANY' &&\n        currentUser?.userType == 'COMPANY'\n      ) {\n        return await this.resumeService.getUserResumes(dbUser);\n      }\n    }\n    return null;\n  }\n\n  //SERVICE TO SET USER ACTIVITY\n  async setUserActivity(user: User, CreateActivityDto: CreateActivityDto) {\n    const profile = await this.prisma.profile.findUnique({\n      where: {\n        userId: user.id,\n      },\n    });\n    if (profile) {\n      return await this.activityService.upsertActivity(\n        profile,\n        CreateActivityDto,\n      );\n    } else {\n      return await this.activityService.createActivity(user, CreateActivityDto);\n    }\n  }\n  //SERVICE TO SET USER BIO\n  async setUserBio(user: User, createBioDto: CreateBioDto) {\n    return await this.prisma.profile.upsert({\n      where: {\n        userId: user.id,\n      },\n      create: {\n        bio: createBioDto.bio,\n        user: {\n          connect: {\n            id: user.id,\n          },\n        },\n      },\n      update: {\n        bio: createBioDto.bio,\n      },\n    });\n  }\n\n  //SERVICE TO SET USER TAGS\n  async setUserTags(user: User, body: CreateTagsDto) {\n    const values = Object.values(body);\n    if (new Set(values).size !== values.length) {\n      throw new BadRequestException('Body contains duplicate values');\n    }\n\n    body.tag_1 = body.tag_1 || null;\n    body.tag_2 = body.tag_2 || null;\n    body.tag_3 = body.tag_3 || null;\n\n    await this.prisma.profile.upsert({\n      where: {\n        userId: user.id,\n      },\n      update: {\n        tag_1: body.tag_1,\n        tag_2: body.tag_2,\n        tag_3: body.tag_3,\n      },\n      create: {\n        user: {\n          connect: {\n            id: user.id,\n          },\n        },\n        tag_1: body.tag_1,\n        tag_2: body.tag_2,\n        tag_3: body.tag_3,\n      },\n    });\n    return { message: 'Tag(s) set successfully' };\n  }\n  //SERVICE TO SET USER PROFOCUS\n  async setProFocus(\n    user: User,\n    createProFocus: CreateProFocusDto,\n  ): Promise {\n    const profile = await this.prisma.profile.upsert({\n      where: {\n        userId: user.id,\n      },\n      create: {\n        proFocus: createProFocus.proFocusArray.join(','),\n        user: {\n          connect: {\n            id: user.id,\n          },\n        },\n      },\n      update: {\n        proFocus: createProFocus.proFocusArray.join(','),\n      },\n    });\n    return profile?.proFocus?.split(',');\n  }\n  async getProFocus(user: User): Promise {\n    const profile = await this.prisma.profile.findFirst({\n      where: {\n        userId: user.id,\n      },\n    });\n    if (profile?.proFocus) return profile.proFocus.split(',');\n    else return [];\n  }\n  //SERVICE TO SET THE USER AS DELETED\n  async deleteUser(user: User) {\n    //delete the user compeletely\n    await this.prisma.user.delete({\n      where: {\n        id: user.id,\n      },\n    });\n    return { message: 'User Deleted' };\n  }\n\n  //SERVICE TO BOOKMARK USER PROFILE\n  async bookmarkProfile(user: User, bookmarkProfileDto: BookmarkProfileDto) {\n    const mark = await this.prisma.profileBookmarks.findFirst({\n      where: {\n        bookmarkedUserId: bookmarkProfileDto.bookmarkedUserId,\n        bookmarkingUserId: user.id,\n      },\n    });\n    if (mark) {\n      await this.prisma.profileBookmarks.delete({\n        where: {\n          bookmarkingUserId_bookmarkedUserId: {\n            bookmarkingUserId: user.id,\n            bookmarkedUserId: bookmarkProfileDto.bookmarkedUserId,\n          },\n        },\n      });\n      return { message: 'Profile Unbookmarked' };\n    }\n\n    await this.prisma.profileBookmarks.create({\n      data: {\n        bookmarkingUserId: user.id,\n        bookmarkedUserId: bookmarkProfileDto.bookmarkedUserId,\n      },\n    });\n    return { message: 'Profile Bookmarked' };\n  }\n\n  //SERVICE TO GET BOOKMARKED PROFILES\n  async getBookmarkedProfiles(user: User, take?: number, skip?: number) {\n    const [bookmarks, totalCount] = await Promise.all([\n      this.prisma.profileBookmarks.findMany({\n        where: {\n          bookmarkingUserId: user.id,\n        },\n        include: {\n          bookmarkedUser: {\n            include: {\n              profile: true,\n            },\n          },\n        },\n        take,\n        skip,\n      }),\n\n      this.prisma.profileBookmarks.count({\n        where: {\n          bookmarkingUserId: user.id,\n        },\n      }),\n    ]);\n    return {\n      totalCount,\n      bookmarks,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshToken.html":{"url":"classes/RefreshToken.html","title":"class - RefreshToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _RefreshToken\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshToken-1.html":{"url":"classes/RefreshToken-1.html","title":"class - RefreshToken-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/refresh_token.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/refresh_token.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/refresh_token.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/refresh_token.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/refresh_token.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/refresh_token.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class RefreshToken {\n  @ApiProperty({ type: Number })\n  id: number;\n\n  @ApiProperty({ type: () => User })\n  user: User;\n\n  @ApiProperty({ type: String })\n  userId: string;\n\n  @ApiProperty({ type: String })\n  hash: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassword.html":{"url":"classes/ResetPassword.html","title":"class - ResetPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _ResetPassword\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassword-1.html":{"url":"classes/ResetPassword-1.html","title":"class - ResetPassword-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/reset_password.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/reset_password.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/reset_password.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/reset_password.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/reset_password.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/reset_password.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ResetPassword {\n  @ApiProperty({ type: Number })\n  id: number;\n\n  @ApiProperty({ type: () => User })\n  user: User;\n\n  @ApiProperty({ type: String })\n  userId: string;\n\n  @ApiProperty({ type: String })\n  hash: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPwdDto.html":{"url":"classes/ResetPwdDto.html","title":"class - ResetPwdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPwdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/reset-pwd.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/reset-pwd.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail } from 'class-validator';\n\nexport class ResetPwdDto {\n  @IsEmail() @ApiProperty() email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _Resume\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume-1.html":{"url":"classes/Resume-1.html","title":"class - Resume-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/resume.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                ownerId\n                            \n                            \n                                    \n                                resumeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/resume.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/resume.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/resume.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        resumeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/resume.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class Resume {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  resumeUrl: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiPropertyOptional({ type: String })\n  ownerId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\n\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_imports\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nFilerModule\n\nFilerModule\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nFilerModule->ResumesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nResumesModule -->\n\nPrismaService->ResumesModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { FilerModule } from '../digitalocean-filer/digitalocean-filer.module';\n\n@Module({\n  imports: [FilerModule],\n  controllers: [ResumesController],\n  providers: [ResumesService, PrismaService],\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createResume\n                            \n                            \n                                    Async\n                                deleteResumes\n                            \n                            \n                                    Async\n                                getUserResumes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, filerService: FilerService)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filerService\n                                                  \n                                                        \n                                                                        FilerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createResume\n                        \n                    \n                \n            \n            \n                \n                    \n                    createResume(file: Express.Multer.File, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteResumes\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteResumes(resumeIds: string[], userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resumeIds\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserResumes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserResumes(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/resumes/resumes.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { FilerService } from '../digitalocean-filer/digitalocean-filer.service';\nimport { Resume, User } from '@prisma/client';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly filerService: FilerService,\n  ) {}\n  async createResume(file: Express.Multer.File, user: User): Promise {\n    //CHECKING FOR FILE SIZE\n    if (!file) {\n      throw new HttpException('No file provided', 413);\n    }\n    if (file.size > 4242880) {\n      throw new HttpException('File too large', 413);\n    }\n    const reusmeLink = await this.filerService.uploadFile(file);\n    const resume = await this.prisma.resume.create({\n      data: {\n        resumeUrl: reusmeLink,\n        ownerId: user.id,\n      },\n    });\n    return resume;\n  }\n  async deleteResumes(resumeIds: string[], userId: string) {\n    await this.prisma.resume.deleteMany({\n      where: {\n        ownerId: userId,\n        NOT: {\n          id: {\n            in: resumeIds,\n          },\n        },\n      },\n    });\n  }\n  async getUserResumes(user: User): Promise {\n    return await this.prisma.resume.findMany({\n      where: {\n        ownerId: user.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RtStrategy.html":{"url":"injectables/RtStrategy.html","title":"injectable - RtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/refresh-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/refresh-token.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(req: Request, payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/refresh-token.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         JwtPayloadWithRt\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Request } from 'express';\nimport { ForbiddenException, Injectable } from '@nestjs/common';\nimport { JwtPayload, JwtPayloadWithRt } from '../types';\n\n@Injectable()\nexport class RtStrategy extends PassportStrategy(Strategy, 'jwt-refresh') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_REFRESH_SECRET,\n      passReqToCallback: true,\n    });\n  }\n\n  validate(req: Request, payload: JwtPayload): JwtPayloadWithRt {\n    const refreshToken = req\n      ?.get('authorization')\n      ?.replace('Bearer', '')\n      .trim();\n\n    if (!refreshToken) throw new ForbiddenException('Refresh token malformed');\n\n    return {\n      ...payload,\n      refreshToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchQueryDto.html":{"url":"classes/SearchQueryDto.html","title":"class - SearchQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dto/create-search.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@Type(undefined)@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-search.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@Type(undefined)@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/create-search.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class SearchQueryDto {\n  @ApiProperty({ required: false })\n  @Type(() => String)\n  @IsOptional()\n  @IsString()\n  search?: string;\n\n  @ApiProperty({ required: false })\n  @Type(() => String)\n  @IsOptional()\n  @IsString()\n  location?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectAllPostsDto.html":{"url":"classes/SelectAllPostsDto.html","title":"class - SelectAllPostsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectAllPostsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dto/select-all-posts.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                take\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobPriority\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: JobPriority})@IsOptional()@IsEnum(JobPriority)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/select-all-posts.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@Type(undefined)@IsOptional()@IsInt()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/select-all-posts.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@Type(undefined)@IsOptional()@IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/select-all-posts.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: JobType})@IsOptional()@IsEnum(JobType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/select-all-posts.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { JobPriority, JobType } from '@prisma/client';\nimport { Type } from 'class-transformer';\nimport { IsEnum, IsInt, IsOptional, Min } from 'class-validator';\n\nexport class SelectAllPostsDto {\n  @ApiProperty({ required: false })\n  @Type(() => Number)\n  @IsOptional()\n  @IsInt()\n  @Min(0)\n  skip?: number;\n\n  @ApiProperty({ required: false })\n  @Type(() => Number)\n  @IsOptional()\n  @IsInt()\n  @Min(1)\n  take?: number;\n\n  @ApiPropertyOptional({ type: JobType })\n  @IsOptional()\n  @IsEnum(JobType)\n  type: JobType;\n\n  @ApiPropertyOptional({ type: JobPriority })\n  @IsOptional()\n  @IsEnum(JobPriority)\n  priority: JobPriority;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectPostsDto.html":{"url":"classes/SelectPostsDto.html","title":"class - SelectPostsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectPostsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dto/select-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                skip\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                take\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobPriority\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: JobPriority})@IsOptional()@IsEnum(JobPriority)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/select-post.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@Type(undefined)@IsOptional()@IsInt()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/select-post.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})@Type(undefined)@IsOptional()@IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/select-post.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JobType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: JobType})@IsOptional()@IsEnum(JobType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/select-post.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/post/dto/select-post.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { JobPriority, JobType } from '@prisma/client';\nimport { Type } from 'class-transformer';\nimport { IsEnum, IsInt, IsOptional, IsString, Min } from 'class-validator';\n\nexport class SelectPostsDto {\n    @ApiProperty({ required: false })\n    @Type(() => Number)\n    @IsOptional()\n    @IsInt()\n    @Min(0)\n    skip?: number;\n\n    @ApiProperty({ required: false })\n    @Type(() => Number)\n    @IsOptional()\n    @IsInt()\n    @Min(1)\n    take?: number;\n\n    @ApiPropertyOptional({ type: 'string' })\n    @IsOptional()\n    @IsString()\n    userId: string;\n\n    @ApiPropertyOptional({ type: JobType })\n    @IsOptional()\n    @IsEnum(JobType)\n    type: JobType;\n\n    @ApiPropertyOptional({ type: JobPriority })\n    @IsOptional()\n    @IsEnum(JobPriority)\n    priority: JobPriority;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMessageDto.html":{"url":"classes/SendMessageDto.html","title":"class - SendMessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messenger/dto/send-message.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                receiverId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/messenger/dto/send-message.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        receiverId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/messenger/dto/send-message.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsUUID } from 'class-validator';\n\nexport class SendMessageDto {\n  @ApiProperty()\n  @IsString()\n  content: string;\n  @ApiProperty()\n  @IsUUID()\n  receiverId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetUserSettingsDto.html":{"url":"classes/SetUserSettingsDto.html","title":"class - SetUserSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetUserSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/update-user-settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                companyName\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                newsletter\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                postcode\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                uploadsVisibility\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/update-user-settings.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/update-user-settings.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/update-user-settings.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/update-user-settings.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Gender)@ApiPropertyOptional()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/update-user-settings.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/update-user-settings.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        newsletter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiPropertyOptional()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/update-user-settings.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/update-user-settings.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/update-user-settings.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        uploadsVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Visibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Visibility)@ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/update-user-settings.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Visibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Visibility)@ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/update-user-settings.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { Gender, Visibility } from '@prisma/client';\nimport { IsOptional, IsString, IsEnum, IsBoolean } from 'class-validator';\n\nexport class SetUserSettingsDto {\n  @ApiPropertyOptional() @IsOptional() @IsString() firstName: string;\n  @ApiPropertyOptional() @IsOptional() @IsString() lastName: string;\n  @ApiPropertyOptional() @IsOptional() @IsString() companyName: string;\n  @IsEnum(Gender) @ApiPropertyOptional() @IsOptional() gender: Gender;\n  @ApiPropertyOptional() @IsOptional() @IsString() address: string;\n  @ApiPropertyOptional() @IsOptional() @IsString() postcode: string;\n  @ApiPropertyOptional() @IsOptional() @IsString() email: string;\n  @ApiPropertyOptional() @IsOptional() @IsString() password: string;\n  @IsEnum(Visibility)\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  visibility: Visibility;\n  @IsEnum(Visibility)\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  uploadsVisibility: Visibility;\n  @IsBoolean()\n  @ApiPropertyOptional()\n  @IsOptional()\n  newsletter: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthDto.html":{"url":"classes/UpdateAuthDto.html","title":"class - UpdateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/update-auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAuthDto } from './create-auth.dto';\n\nexport class UpdateAuthDto extends PartialType(CreateAuthDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePayementDto.html":{"url":"classes/UpdatePayementDto.html","title":"class - UpdatePayementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePayementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payement/dto/update-payement.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePayementDto } from './create-payement.dto';\n\nexport class UpdatePayementDto extends PartialType(CreatePayementDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePostDto.html":{"url":"classes/UpdatePostDto.html","title":"class - UpdatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/dto/update-post.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePostDto } from './create-post.dto';\n\nexport class UpdatePostDto extends PartialType(CreatePostDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProfileDto } from './create-profile.dto';\n\nexport class UpdateProfileDto extends PartialType(CreateProfileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePwdDto.html":{"url":"classes/UpdatePwdDto.html","title":"class - UpdatePwdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePwdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/update-pwd.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/update-pwd.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdatePwdDto {\n  @ApiProperty() password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadedMulterFileI.html":{"url":"interfaces/UploadedMulterFileI.html","title":"interface - UploadedMulterFileI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadedMulterFileI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/digitalocean-filer/digitalocean-filer.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buffer\n                                        \n                                \n                                \n                                        \n                                            encoding\n                                        \n                                \n                                \n                                        \n                                            fieldname\n                                        \n                                \n                                \n                                        \n                                            mimetype\n                                        \n                                \n                                \n                                        \n                                            originalname\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buffer:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        originalname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as AWS from 'aws-sdk';\nimport { Provider } from '@nestjs/common';\n\n// Unique identifier of the service in the dependency injection layer\nexport const DoSpacesServiceLib = 'lib:do-spaces-service';\n\n// Creation of the value that the provider will always be returning.\n// An actual AWS.S3 instance\nconst spacesEndpoint = new AWS.Endpoint('fra1.digitaloceanspaces.com');\n\nconst S3 = new AWS.S3({\n  endpoint: spacesEndpoint.href,\n  credentials: new AWS.Credentials({\n    accessKeyId: process.env.DIGITAL_OCEAN_SPACES_KEY || '',\n    secretAccessKey: process.env.DIGITAL_OCEAN_SPACES_SECRET || '',\n  }),\n});\n\n// Now comes the provider\nexport const DoSpacesServiceProvider: Provider = {\n  provide: DoSpacesServiceLib,\n  useValue: S3,\n};\n\n// This is just a simple interface that represents an uploaded file object\nexport interface UploadedMulterFileI {\n  fieldname: string;\n  originalname: string;\n  encoding: string;\n  mimetype: string;\n  buffer: Buffer;\n  size: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    _User\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User as _User } from './user';\nimport { Conversation as _Conversation } from './conversation';\nimport { Message as _Message } from './message';\nimport { Bookmarks as _Bookmarks } from './bookmarks';\nimport { ProfileBookmarks as _ProfileBookmarks } from './profile_bookmarks';\nimport { Profile as _Profile } from './profile';\nimport { Activity as _Activity } from './activity';\nimport { Image as _Image } from './image';\nimport { Resume as _Resume } from './resume';\nimport { EmailVerification as _EmailVerification } from './email_verification';\nimport { EmailChange as _EmailChange } from './email_change';\nimport { ResetPassword as _ResetPassword } from './reset_password';\nimport { RefreshToken as _RefreshToken } from './refresh_token';\nimport { Post as _Post } from './post';\nimport { PostExtra as _PostExtra } from './post_extra';\n\nexport namespace PrismaModel {\n  export class User extends _User {}\n  export class Conversation extends _Conversation {}\n  export class Message extends _Message {}\n  export class Bookmarks extends _Bookmarks {}\n  export class ProfileBookmarks extends _ProfileBookmarks {}\n  export class Profile extends _Profile {}\n  export class Activity extends _Activity {}\n  export class Image extends _Image {}\n  export class Resume extends _Resume {}\n  export class EmailVerification extends _EmailVerification {}\n  export class EmailChange extends _EmailChange {}\n  export class ResetPassword extends _ResetPassword {}\n  export class RefreshToken extends _RefreshToken {}\n  export class Post extends _Post {}\n  export class PostExtra extends _PostExtra {}\n\n  export const extraModels = [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_gen/prisma-class/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                birthDate\n                            \n                            \n                                    \n                                bookmarkedUsers\n                            \n                            \n                                    \n                                bookmarkingUsers\n                            \n                            \n                                    \n                                bookmarks\n                            \n                            \n                                    \n                                    Optional\n                                companyName\n                            \n                            \n                                    \n                                conversationsA\n                            \n                            \n                                    \n                                conversationsB\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    Optional\n                                EmailChange\n                            \n                            \n                                    \n                                    Optional\n                                emailVerification\n                            \n                            \n                                    \n                                emailVerified\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                messages\n                            \n                            \n                                    \n                                newsletter\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                postcode\n                            \n                            \n                                    \n                                posts\n                            \n                            \n                                    \n                                    Optional\n                                profile\n                            \n                            \n                                    \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                    Optional\n                                resetPassword\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                uploadsVisibility\n                            \n                            \n                                    \n                                userType\n                            \n                            \n                                    \n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookmarkedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProfileBookmarks[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => ProfileBookmarks})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookmarkingUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProfileBookmarks[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => ProfileBookmarks})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookmarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Bookmarks[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Bookmarks})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        conversationsA\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Conversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Conversation})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        conversationsB\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Conversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Conversation})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        EmailChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmailChange\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: () => EmailChange})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        emailVerification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmailVerification\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: () => EmailVerification})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: Gender, enumName: 'Gender'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Message[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Message})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        newsletter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Post[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true, type: () => Post})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: () => Profile})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RefreshToken\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: () => RefreshToken})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResetPassword\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: () => ResetPassword})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uploadsVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Visibility\n\n                    \n                \n                \n                    \n                        Default value : Visibility.PUBLIC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: Visibility, enumName: 'Visibility'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                \n                    \n                        Default value : Type.INDIVIDUAL\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: Type, enumName: 'Type'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Visibility\n\n                    \n                \n                \n                    \n                        Default value : Visibility.PUBLIC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: Visibility, enumName: 'Visibility'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_gen/prisma-class/user.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EmailVerification } from './email_verification';\nimport { RefreshToken } from './refresh_token';\nimport { ResetPassword } from './reset_password';\nimport { Profile } from './profile';\nimport { EmailChange } from './email_change';\nimport { Post } from './post';\nimport { Bookmarks } from './bookmarks';\nimport { Conversation } from './conversation';\nimport { Message } from './message';\nimport { ProfileBookmarks } from './profile_bookmarks';\nimport { Gender, Type, Visibility } from '@prisma/client';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class User {\n  @ApiProperty({ type: String })\n  id: string;\n\n  @ApiProperty({ type: String })\n  email: string;\n\n  @ApiProperty({ type: String })\n  firstName: string;\n\n  @ApiProperty({ type: String })\n  lastName: string;\n\n  @ApiProperty({ enum: Gender, enumName: 'Gender' })\n  gender: Gender;\n\n  @ApiProperty({ enum: Type, enumName: 'Type' })\n  userType: Type = Type.INDIVIDUAL;\n\n  @ApiProperty({ type: Date })\n  birthDate: Date;\n\n  @ApiPropertyOptional({ type: String })\n  address?: string;\n\n  @ApiPropertyOptional({ type: String })\n  companyName?: string;\n\n  @ApiProperty({ type: String })\n  postcode: string;\n\n  @ApiProperty({ type: String })\n  password: string;\n\n  @ApiProperty({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiPropertyOptional({ type: () => EmailVerification })\n  emailVerification?: EmailVerification;\n\n  @ApiProperty({ type: Boolean })\n  emailVerified: boolean;\n\n  @ApiPropertyOptional({ type: () => RefreshToken })\n  refreshToken?: RefreshToken;\n\n  @ApiPropertyOptional({ type: () => ResetPassword })\n  resetPassword?: ResetPassword;\n\n  @ApiPropertyOptional({ type: () => Profile })\n  profile?: Profile;\n\n  @ApiProperty({ enum: Visibility, enumName: 'Visibility' })\n  visibility: Visibility = Visibility.PUBLIC;\n\n  @ApiProperty({ enum: Visibility, enumName: 'Visibility' })\n  uploadsVisibility: Visibility = Visibility.PUBLIC;\n\n  @ApiProperty({ type: Boolean })\n  newsletter: boolean;\n\n  @ApiPropertyOptional({ type: () => EmailChange })\n  EmailChange?: EmailChange;\n\n  @ApiProperty({ isArray: true, type: () => Post })\n  posts: Post[];\n\n  @ApiProperty({ isArray: true, type: () => Bookmarks })\n  bookmarks: Bookmarks[];\n\n  @ApiProperty({ isArray: true, type: () => Conversation })\n  conversationsA: Conversation[];\n\n  @ApiProperty({ isArray: true, type: () => Conversation })\n  conversationsB: Conversation[];\n\n  @ApiProperty({ isArray: true, type: () => Message })\n  messages: Message[];\n\n  @ApiProperty({ isArray: true, type: () => ProfileBookmarks })\n  bookmarkingUsers: ProfileBookmarks[];\n\n  @ApiProperty({ isArray: true, type: () => ProfileBookmarks })\n  bookmarkedUsers: ProfileBookmarks[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserFoundGuard.html":{"url":"guards/UserFoundGuard.html","title":"guard - UserFoundGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserFoundGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/user-found.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/user-found.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/user-found.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  ConflictException,\n  CanActivate,\n  ExecutionContext,\n} from '@nestjs/common';\nimport { PrismaService } from '../../prisma/prisma.service';\n\n@Injectable()\nexport class UserFoundGuard implements CanActivate {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    //CHECK EMAIL IN PARMS\n    let email = request.params.email;\n    //CHECK EMAIL IN BODY\n    if (!email) email = request.body.email;\n    //CHECK EMAIL IN REQUEST\n    if (!email) email = request?.user?.email;\n    //CHECK IF USER EXIST\n    const user = await this.prisma.user.findFirst({ where: { email } });\n    if (user) {\n      throw new ConflictException('User Found');\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserNotFoundGuard.html":{"url":"guards/UserNotFoundGuard.html","title":"guard - UserNotFoundGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserNotFoundGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/user-not-found.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/user-not-found.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/user-not-found.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  NotFoundException,\n  CanActivate,\n  ExecutionContext,\n} from '@nestjs/common';\nimport { PrismaService } from '../../prisma/prisma.service';\n\n@Injectable()\nexport class UserNotFoundGuard implements CanActivate {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    //CHECK EMAIL IN PARMS\n    let email = request.params.email;\n    //CHECK EMAIL IN BODY\n    if (!email) email = request.body.email;\n    if (!email) email = request.user.email;\n    //CHECK IF USER EXIST\n    const user = await this.prisma.user.findFirst({ where: { email } });\n    if (!user) {\n      throw new NotFoundException('User Not Found');\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/_gen/prisma-class/activity.ts\n            \n            class\n            Activity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/bookmarks.ts\n            \n            class\n            Bookmarks\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/conversation.ts\n            \n            class\n            Conversation\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/email_change.ts\n            \n            class\n            EmailChange\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/email_verification.ts\n            \n            class\n            EmailVerification\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/image.ts\n            \n            class\n            Image\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Activity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Bookmarks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Conversation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            EmailChange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            EmailVerification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Image\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Post\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            PostExtra\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            ProfileBookmarks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            RefreshToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            ResetPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/index.ts\n            \n            variable\n            extraModels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/message.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/post.ts\n            \n            class\n            Post\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/post_extra.ts\n            \n            class\n            PostExtra\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/professional_focus.ts\n            \n            class\n            ProfessionalFocus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/profile.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/profile_bookmarks.ts\n            \n            class\n            ProfileBookmarks\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/refresh_token.ts\n            \n            class\n            RefreshToken\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/reset_password.ts\n            \n            class\n            ResetPassword\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/resume.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/_gen/prisma-class/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/activities/activities.controller.ts\n            \n            controller\n            ActivitiesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/activities/activities.service.ts\n            \n            injectable\n            ActivitiesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                src/auth/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/IsCompanyNameValid.ts\n            \n            interface\n            CustomValidationArguments\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/auth/dto/IsCompanyNameValid.ts\n            \n            function\n            IsCompanyNameValid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/change-email.dto.ts\n            \n            class\n            ChangeEmailDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/change-pwd.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/create-auth.dto.ts\n            \n            class\n            CreateAuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/dto/get-user.dto.ts\n            \n            class\n            GetUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/handle-change-email.dto.ts\n            \n            class\n            HandleChangeEmailDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/reset-pwd.dto.ts\n            \n            class\n            ResetPwdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/update-auth.dto.ts\n            \n            class\n            UpdateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/update-pwd.dto.ts\n            \n            class\n            UpdatePwdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/update-user-settings.dto.ts\n            \n            class\n            SetUserSettingsDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/user-found.guard.ts\n            \n            guard\n            UserFoundGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/user-not-found.guard.ts\n            \n            guard\n            UserNotFoundGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/access-token.strategy.ts\n            \n            injectable\n            AtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/refresh-token.strategy.ts\n            \n            injectable\n            RtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/utils/argon.ts\n            \n            function\n            compareHashStrings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/utils/argon.ts\n            \n            function\n            hashString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/utils/bcrypt.ts\n            \n            function\n            compareHash\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/utils/bcrypt.ts\n            \n            function\n            hash\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/utils/bcrypt.ts\n            \n            variable\n            SALT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/digitalocean-filer/digitalocean-filer.config.ts\n            \n            interface\n            UploadedMulterFileI\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/digitalocean-filer/digitalocean-filer.config.ts\n            \n            variable\n            DoSpacesServiceLib\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/digitalocean-filer/digitalocean-filer.config.ts\n            \n            variable\n            DoSpacesServiceProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/digitalocean-filer/digitalocean-filer.config.ts\n            \n            variable\n            S3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/digitalocean-filer/digitalocean-filer.config.ts\n            \n            variable\n            spacesEndpoint\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/digitalocean-filer/digitalocean-filer.service.ts\n            \n            injectable\n            FilerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exceptions/global-exception.filter.ts\n            \n            class\n            GlobalExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health-check/cpu-health/cpu.health.ts\n            \n            injectable\n            CpuHealthIndicator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health-check/health-check.controller.ts\n            \n            controller\n            HealthCheckController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health-check/health-check.service.ts\n            \n            injectable\n            HealthCheckService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health-check/prisma-health/prisma.heatlth.ts\n            \n            injectable\n            PrismaHealthIndicator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/images/images.controller.ts\n            \n            controller\n            ImagesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/images.service.ts\n            \n            injectable\n            ImagesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mailjet/mailjet.service.ts\n            \n            injectable\n            MailjetService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/messenger/dto/send-file.dto.ts\n            \n            class\n            sendFiileDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/messenger/dto/send-message.dto.ts\n            \n            class\n            SendMessageDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/messenger/messenger.controller.ts\n            \n            controller\n            MessengerController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/messenger/messenger.service.ts\n            \n            injectable\n            MessengerService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/messenger/types/allowedFileTypes.ts\n            \n            variable\n            AllowedFileTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/newrelic/newrelic.interceptor.ts\n            \n            injectable\n            NewrelicInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/newrelic/newrelic.interceptor.ts\n            \n            variable\n            newrelic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/newrelic/newrelic.interceptor.ts\n            \n            variable\n            util\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payement/dto/create-payement.dto.ts\n            \n            class\n            CreatePayementDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/payement/dto/update-payement.dto.ts\n            \n            class\n            UpdatePayementDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payement/entities/payement.entity.ts\n            \n            class\n            CheckoutSession\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/payement/entities/productRes.ts\n            \n            class\n            ProductDto\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/payement/entities/productRes.ts\n            \n            class\n            ProductListResponseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/payement/payement.controller.ts\n            \n            controller\n            PayementController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/payement/payement.service.ts\n            \n            injectable\n            PayementService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/post/dto/bookmark.dto.ts\n            \n            class\n            BookmarkDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/post/dto/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/post/dto/create-search.dto.ts\n            \n            class\n            SearchQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/post/dto/get-post.dto.ts\n            \n            class\n            GetPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/post/dto/post-filter.dto.ts\n            \n            class\n            PostFilterDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/post/dto/select-all-posts.dto.ts\n            \n            class\n            SelectAllPostsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/post/dto/select-post.dto.ts\n            \n            class\n            SelectPostsDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/post/dto/update-post.dto.ts\n            \n            class\n            UpdatePostDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/post/entities/getBookmarksResponse.ts\n            \n            class\n            GetBookmarksResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/post/entities/getPostsResponse.ts\n            \n            class\n            GetPostsResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/post/post.controller.ts\n            \n            controller\n            PostController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/post/post.service.ts\n            \n            injectable\n            PostService\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/prisma-client-exception/prisma-client-exception.filter.ts\n            \n            class\n            PrismaClientExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/decorators/api-file-decorator.ts\n            \n            function\n            ApiImageFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/decorators/api-file-decorator.ts\n            \n            function\n            ApiPdfFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/decorators/file-mimetype-filter.ts\n            \n            function\n            fileMimetypeFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/decorators/fileupload-handler.decorator.ts\n            \n            function\n            AuthenticatedFileUpload\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/decorators/fileupload-handler.decorator.ts\n            \n            function\n            AuthenticatedFileUpload2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/decorators/upload-file.decorator.ts\n            \n            variable\n            uploadFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/decorators/upload-file.decorator.ts\n            \n            variable\n            uploadFile2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/dto/bookmark-profile.dto.ts\n            \n            class\n            BookmarkProfileDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/dto/create-activity.dto.ts\n            \n            class\n            CreateActivityDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profile/dto/create-bio.dto.ts\n            \n            class\n            CreateBioDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/dto/create-profile.dto.ts\n            \n            class\n            CreateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/dto/create-profocus.dto.ts\n            \n            class\n            CreateProFocusDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/dto/create-tags.dto.ts\n            \n            class\n            CreateTagsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profile/dto/delete-user-gallery.dto.ts\n            \n            class\n            DeleteUserGalleryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/dto/pagination.dto.ts\n            \n            class\n            PaginationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/profile/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/entities/profile.entity.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/filters/image-file.filter.ts\n            \n            variable\n            imageFileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^2.0.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/graphql : ^11.0.0\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/terminus : ^9.2.2\n        \n            @prisma/client : ^4.11.0\n        \n            @sentry/node : ^7.39.0\n        \n            @stripe/stripe-js : ^1.52.1\n        \n            @tuvshinb4y4r/prisma-class-generator : ^0.2.11\n        \n            @types/bcryptjs : ^2.4.2\n        \n            @types/multer : ^1.4.7\n        \n            @types/passport-jwt : ^3.0.8\n        \n            argon2 : ^0.30.3\n        \n            aws-sdk : ^2.1330.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            crypto : ^1.0.1\n        \n            date-fns : ^2.30.0\n        \n            graphql : ^16.6.0\n        \n            graphql-type-json : ^0.3.2\n        \n            is-ci : ^3.0.1\n        \n            lodash : ^4.17.21\n        \n            moment : ^2.29.4\n        \n            nestjs-stripe : ^1.0.0\n        \n            newrelic : ^9.10.2\n        \n            node-mailjet : ^6.0.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma : ^4.10.1\n        \n            prisma-graphql-type-decimal : ^2.0.6\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            stripe : ^12.5.0\n        \n            uuid : ^9.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiImageFile   (src/.../api-file-decorator.ts)\n                        \n                        \n                            ApiPdfFile   (src/.../api-file-decorator.ts)\n                        \n                        \n                            AuthenticatedFileUpload   (src/.../fileupload-handler.decorator.ts)\n                        \n                        \n                            AuthenticatedFileUpload2   (src/.../fileupload-handler.decorator.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            compareHash   (src/.../bcrypt.ts)\n                        \n                        \n                            compareHashStrings   (src/.../argon.ts)\n                        \n                        \n                            fileMimetypeFilter   (src/.../file-mimetype-filter.ts)\n                        \n                        \n                            hash   (src/.../bcrypt.ts)\n                        \n                        \n                            hashString   (src/.../argon.ts)\n                        \n                        \n                            IsCompanyNameValid   (src/.../IsCompanyNameValid.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/profile/decorators/api-file-decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiImageFile\n                        \n                    \n                \n            \n            \n                \nApiImageFile(fileName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'image'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ApiPdfFile\n                        \n                    \n                \n            \n            \n                \nApiPdfFile(fileNames: [])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fileNames\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ['document1', 'document2', 'document3']\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/profile/decorators/fileupload-handler.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthenticatedFileUpload\n                        \n                    \n                \n            \n            \n                \nAuthenticatedFileUpload(fieldName: string, localOptions?: MulterOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fieldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    localOptions\n                                    \n                                            MulterOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AuthenticatedFileUpload2\n                        \n                    \n                \n            \n            \n                \nAuthenticatedFileUpload2(fieldNames)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fieldNames\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/auth/utils/bcrypt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compareHash\n                        \n                    \n                \n            \n            \n                \ncompareHash(password: string, receivedPassword: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    receivedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hash\n                        \n                    \n                \n            \n            \n                \nhash(password: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/auth/utils/argon.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compareHashStrings\n                        \n                    \n                \n            \n            \n                \ncompareHashStrings(plain: string, hash: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plain\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashString\n                        \n                    \n                \n            \n            \n                \nhashString(s: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/profile/decorators/file-mimetype-filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileMimetypeFilter\n                        \n                    \n                \n            \n            \n                \nfileMimetypeFilter(...mimetypes: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mimetypes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/auth/dto/IsCompanyNameValid.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsCompanyNameValid\n                        \n                    \n                \n            \n            \n                \nIsCompanyNameValid(validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationOptions\n                                    \n                                            ValidationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTippJob-Backend\nDemo\n\n🔗https://tippjob.ccdev.space  \n🔗https://tippjob-be.ccdev.space\n\nDocker Ports\n\n🐳TippJob-Backend: 3011\n🐳TippJob-Frontend: 3012\n\nTooling\n\nhttps://tooling.ccdev.space\nlogin: ccdev\npassword: CcD3VtEaM!\n\nTech Stack\n\n⚙️Node, NestJS, Prisma ORM\n\nDesign\n\n👨‍🎨️ https://www.figma.com/file/0KoINUeRDZUNENs0Cv5uig/TippJob?node-id=167%3A1399&t=7AXRxXyjWcXyXM4y-0\n\nDocumentation\nWe prefer documentation as README files in this repo.\nHowever, we have a confluence space for general items\n\n📑https://codecooperation.atlassian.net/l/cp/c4oaHC2E\n\nCode of conduct and best practices\n\n🛡️https://github.com/CodeCooperation/CC-Guidelines\n\nPlease continue filling this readme with any relevant information related to this project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActivitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthCheckModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailjetModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessengerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PayementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActivitiesModule\n\n\n\ncluster_ActivitiesModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FilerModule\n\n\n\ncluster_FilerModule_exports\n\n\n\ncluster_FilerModule_providers\n\n\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_providers\n\n\n\ncluster_MailjetModule\n\n\n\ncluster_MailjetModule_exports\n\n\n\ncluster_MessengerModule\n\n\n\ncluster_MessengerModule_providers\n\n\n\ncluster_PayementModule\n\n\n\ncluster_PayementModule_providers\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nActivitiesService\n\nActivitiesService\n\n\n\nActivitiesModule\n\nActivitiesModule\n\nActivitiesModule -->\n\nActivitiesService->ActivitiesModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nActivitiesService->ProfileModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nActivitiesModule -->\n\nPrismaService->ActivitiesModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nHealthCheckModule -->\n\nPrismaService->HealthCheckModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nImagesModule -->\n\nPrismaService->ImagesModule\n\n\n\n\n\nMessengerModule\n\nMessengerModule\n\nMessengerModule -->\n\nPrismaService->MessengerModule\n\n\n\n\n\nPayementModule\n\nPayementModule\n\nPayementModule -->\n\nPrismaService->PayementModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPrismaService->PostModule\n\n\n\nProfileModule -->\n\nPrismaService->ProfileModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nPrismaService->ResumesModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nAppModule -->\n\nActivitiesModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFilerModule\n\nFilerModule\n\nImagesModule -->\n\nFilerModule->ImagesModule\n\n\n\nMessengerModule -->\n\nFilerModule->MessengerModule\n\n\n\nPostModule -->\n\nFilerModule->PostModule\n\n\n\nProfileModule -->\n\nFilerModule->ProfileModule\n\n\n\nResumesModule -->\n\nFilerModule->ResumesModule\n\n\n\nAppModule -->\n\nFilerModule->AppModule\n\n\n\n\n\nFilerService \n\nFilerService \n\nFilerService  -->\n\nFilerModule->FilerService \n\n\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nMailjetModule\n\nMailjetModule\n\nAppModule -->\n\nMailjetModule->AppModule\n\n\n\n\n\nMailjetService \n\nMailjetService \n\nMailjetService  -->\n\nMailjetModule->MailjetService \n\n\n\nAppModule -->\n\nMessengerModule->AppModule\n\n\n\nAppModule -->\n\nPayementModule->AppModule\n\n\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAtStrategy\n\nAtStrategy\n\nAuthModule -->\n\nAtStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nMailjetService\n\nMailjetService\n\nAuthModule -->\n\nMailjetService->AuthModule\n\n\n\nMailjetModule -->\n\nMailjetService->MailjetModule\n\n\n\n\n\nRtStrategy\n\nRtStrategy\n\nAuthModule -->\n\nRtStrategy->AuthModule\n\n\n\n\n\nFilerService\n\nFilerService\n\nFilerModule -->\n\nFilerService->FilerModule\n\n\n\n\n\nCpuHealthIndicator\n\nCpuHealthIndicator\n\nHealthCheckModule -->\n\nCpuHealthIndicator->HealthCheckModule\n\n\n\n\n\nHealthCheckService\n\nHealthCheckService\n\nHealthCheckModule -->\n\nHealthCheckService->HealthCheckModule\n\n\n\n\n\nPrismaHealthIndicator\n\nPrismaHealthIndicator\n\nHealthCheckModule -->\n\nPrismaHealthIndicator->HealthCheckModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\nPostModule -->\n\nImagesService->PostModule\n\n\n\nProfileModule -->\n\nImagesService->ProfileModule\n\n\n\n\n\nMessengerService\n\nMessengerService\n\nMessengerModule -->\n\nMessengerService->MessengerModule\n\n\n\n\n\nPayementService\n\nPayementService\n\nPayementModule -->\n\nPayementService->PayementModule\n\n\n\n\n\nPostService\n\nPostService\n\nPostModule -->\n\nPostService->PostModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nProfileModule -->\n\nResumesService->ProfileModule\n\n\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    71 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/sendFiileDto.html":{"url":"classes/sendFiileDto.html","title":"class - sendFiileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  sendFiileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messenger/dto/send-file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                receiverId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        receiverId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/messenger/dto/send-file.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsUUID } from 'class-validator';\n\nexport class sendFiileDto {\n  @ApiProperty()\n  @IsUUID()\n  receiverId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JwtPayload   (src/.../jwtPayload.type.ts)\n                        \n                        \n                            JwtPayloadWithRt   (src/.../jwtPayloadWithRt.type.ts)\n                        \n                        \n                            Tokens   (src/.../tokens.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/types/jwtPayload.type.ts\n    \n    \n        \n            \n                \n                    \n                    JwtPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/auth/types/jwtPayloadWithRt.type.ts\n    \n    \n        \n            \n                \n                    \n                    JwtPayloadWithRt\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/auth/types/tokens.type.ts\n    \n    \n        \n            \n                \n                    \n                    Tokens\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllowedFileTypes   (src/.../allowedFileTypes.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            DoSpacesServiceLib   (src/.../digitalocean-filer.config.ts)\n                        \n                        \n                            DoSpacesServiceProvider   (src/.../digitalocean-filer.config.ts)\n                        \n                        \n                            extraModels   (src/.../index.ts)\n                        \n                        \n                            imageFileFilter   (src/.../image-file.filter.ts)\n                        \n                        \n                            newrelic   (src/.../newrelic.interceptor.ts)\n                        \n                        \n                            S3   (src/.../digitalocean-filer.config.ts)\n                        \n                        \n                            SALT   (src/.../bcrypt.ts)\n                        \n                        \n                            spacesEndpoint   (src/.../digitalocean-filer.config.ts)\n                        \n                        \n                            uploadFile   (src/.../upload-file.decorator.ts)\n                        \n                        \n                            uploadFile2   (src/.../upload-file.decorator.ts)\n                        \n                        \n                            util   (src/.../newrelic.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/messenger/types/allowedFileTypes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AllowedFileTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'application/pdf',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'text/plain',\n    'image/jpeg',\n    'image/webp',\n    'image/tiff',\n    'image/png',\n    'image/gif',\n    'image/bmp',\n    'image/svg+xml',\n    'image/heic',\n    'audio/mpeg',\n    'audio/wav',\n    'audio/ogg',\n    'audio/midi',\n    'video/mp4',\n    'video/x-msvideo',\n    'video/x-matroska',\n    'video/quicktime',\n    'application/zip',\n    'application/x-rar-compressed',\n    'application/x-7z-compressed',\n    'application/x-tar',\n    'application/javascript',\n    'application/typescript',\n    'application/x-python-code',\n    'application/xml',\n    'application/json',\n    'text/csv',\n    'application/sql',\n    'text/markdown',\n    'text/html',\n    'text/css',\n  ]\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/digitalocean-filer/digitalocean-filer.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DoSpacesServiceLib\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'lib:do-spaces-service'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DoSpacesServiceProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: DoSpacesServiceLib,\n  useValue: S3,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        S3\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AWS.S3({\n  endpoint: spacesEndpoint.href,\n  credentials: new AWS.Credentials({\n    accessKeyId: process.env.DIGITAL_OCEAN_SPACES_KEY || '',\n    secretAccessKey: process.env.DIGITAL_OCEAN_SPACES_SECRET || '',\n  }),\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spacesEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AWS.Endpoint('fra1.digitaloceanspaces.com')\n                    \n                \n\n\n        \n    \n\n    src/_gen/prisma-class/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extraModels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    User,\n    Conversation,\n    Message,\n    Bookmarks,\n    ProfileBookmarks,\n    Profile,\n    Activity,\n    Image,\n    Resume,\n    EmailVerification,\n    EmailChange,\n    ResetPassword,\n    RefreshToken,\n    Post,\n    PostExtra,\n  ]\n                    \n                \n\n\n        \n    \n\n    src/profile/filters/image-file.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        imageFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  req: Request,\n  file: Express.Multer.File,\n  cb: (error: MulterError | null, check: boolean) => void,\n) => {\n  if (file.originalname.match(/^.*\\.(jpg|webp|png|jpeg)$/)) cb(null, true);\n  else {\n    cb(new MulterError('LIMIT_UNEXPECTED_FILE', 'image'), false);\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/newrelic/newrelic.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        newrelic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('newrelic')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        util\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('util')\n                    \n                \n\n\n        \n    \n\n    src/auth/utils/bcrypt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SALT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n\n\n        \n    \n\n    src/profile/decorators/upload-file.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (fileName = 'file'): MethodDecorator =>\n  (target: any, propertyKey, descriptor: PropertyDescriptor) => {\n    ApiBody({\n      schema: {\n        type: 'object',\n        properties: {\n          [fileName]: {\n            type: 'string',\n            format: 'binary',\n          },\n        },\n      },\n    })(target, propertyKey, descriptor);\n  }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (fileNames: string[] = ['file']): MethodDecorator =>\n  (target: any, propertyKey, descriptor: PropertyDescriptor) => {\n    interface StringIndexedObject {\n      [key: string]: T;\n    }\n\n    const properties: StringIndexedObject =\n      {};\n    for (const fileName of fileNames) {\n      properties[fileName] = {\n        type: 'string',\n        format: 'binary',\n      };\n    }\n    ApiBody({\n      schema: {\n        type: 'object',\n        properties: {\n          ...properties,\n        },\n      },\n    })(target, propertyKey, descriptor);\n  }\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
